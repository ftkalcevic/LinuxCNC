/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// C version for linuxcnc adapted by \author Frank Tkalcevic
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 62 generated on 2019-03-25 17:59:17.065413
///
///    /usr/local/bin/openrave.py --database inversekinematics --robot=./moveolike2.xml --iktype=Transform6D --outputlang=c 
///
/// To compile with gcc:
///     gcc ik.c -lm
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp

#define IKFAST_HAS_LIBRARY
#define IKFAST_NUM_DOF 4
#define IKFAST_NUM_JOINTS 6
#define IKFAST_NUM_FREE_VARS 0

// For a standalone binary
#ifndef IKFAST_NO_MAIN
    #define j0 math_h_j0
    #define j1 math_h_j1

    #include <math.h>
    #include <complex.h>
    #include <stdlib.h>
    #include <stdio.h>

    #undef j0
    #undef j1

    #define rtapi_exit  exit
    #define rtapi_print printf
#endif

#include "ikfast_c.h" // found inside share/openrave-X.Y/python/ikfast_c.h

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==62);

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { rtapi_print( "ikfast exception: " __FILE__ ":" IKFAST_STRINGIZE(__LINE__) ": " IKFAST_STRINGIZE(_PRETTY_FUNCTION__) ": Assertion '"  #b "' failed" ); rtapi_exit(-1); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
void zgetrf_ (const int* m, const int* n, double complex * a, const int* lda, int* ipiv, int* info);
void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);


inline double IKabs(double f) { return fabs(f); }

inline double IKsqr(double f) { return f*f; }

inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline double IKsin(double f) { return sin(f); }
inline double IKcos(double f) { return cos(f); }
inline double IKtan(double f) { return tan(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}


inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

// Forward declaration even if they aren't used
static inline void polyroots1(IkReal rawcoeffs[1+1], IkReal rawroots[1], int *numroots );
static inline void polyroots2(IkReal rawcoeffs[2+1], IkReal rawroots[2], int *numroots );
static inline void polyroots3(IkReal rawcoeffs[3+1], IkReal rawroots[3], int *numroots );
static inline void polyroots4(IkReal rawcoeffs[4+1], IkReal rawroots[4], int *numroots );
static inline void polyroots5(IkReal rawcoeffs[5+1], IkReal rawroots[5], int *numroots );
static inline void polyroots6(IkReal rawcoeffs[6+1], IkReal rawroots[6], int *numroots );
static inline void polyroots7(IkReal rawcoeffs[7+1], IkReal rawroots[7], int *numroots );
static inline void polyroots8(IkReal rawcoeffs[8+1], IkReal rawroots[8], int *numroots );


static const struct JointInfo
{
    double limitMin;
    double limitMax;
} JointInfo[] =
{
{ .limitMin=-180.0, .limitMax=180.0 },
{ .limitMin=-130.0, .limitMax=136.0 },
{ .limitMin=-126.0, .limitMax=156.0 },
{ .limitMin=-126.0, .limitMax=156.0 },
{ .limitMin=-130.0, .limitMax=157.0 },
{ .limitMin=-180.0, .limitMax=180.0 },
};
static IkReal j0,cj0,sj0,htj0,j1,cj1,sj1,htj1,j2,cj2,sj2,htj2,j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
static unsigned char _ij0[2], _nj0,_ij1[2], _nj1,_ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5;

inline void rotationfunction0(IkSolutionList* solutions) {
int rotationiter = 0;
for(rotationiter = 0; rotationiter < 1; ++rotationiter) {
IkReal x55=(((IkReal)(1.00000000000000))*(sj1));
IkReal x56=((cj1)*(sj2));
IkReal x57=((cj0)*(r10));
IkReal x58=((cj0)*(r12));
IkReal x59=(((IkReal)(1.00000000000000))*(sj0));
IkReal x60=((cj0)*(r11));
IkReal x61=((r00)*(x59));
IkReal x62=(((((IkReal)(-1.00000000000000))*(sj2)*(x55)))+(((cj1)*(cj2))));
IkReal x63=((x56)+(((cj2)*(sj1))));
IkReal x64=(((((IkReal)(-1.00000000000000))*(cj2)*(x55)))+((((IkReal)(-1.00000000000000))*(x56))));
IkReal x65=((x59)*(x62));
IkReal x66=((cj0)*(x64));
new_r00=((((r10)*(sj0)))+(((cj0)*(r00))));
new_r01=((((r11)*(sj0)))+(((cj0)*(r01))));
new_r02=((((cj0)*(r02)))+(((r12)*(sj0))));
new_r10=((((x57)*(x62)))+((((IkReal)(-1.00000000000000))*(x61)*(x62)))+(((r20)*(x63))));
new_r11=((((r21)*(x63)))+(((x60)*(x62)))+((((IkReal)(-1.00000000000000))*(r01)*(x65))));
new_r12=(((((IkReal)(-1.00000000000000))*(r02)*(x65)))+(((x58)*(x62)))+(((r22)*(x63))));
new_r20=((((x57)*(x64)))+(((r20)*(x62)))+((((IkReal)(-1.00000000000000))*(x61)*(x64))));
new_r21=(((((IkReal)(-1.00000000000000))*(r01)*(x59)*(x64)))+(((r21)*(x62)))+(((x60)*(x64))));
new_r22=(((((IkReal)(-1.00000000000000))*(r02)*(x59)*(x64)))+(((r22)*(x62)))+(((x58)*(x64))));
{
IkReal j4array[2], cj4array[2], sj4array[2];
bool j4valid[2]={false};
_nj4 = 2;
cj4array[0]=new_r22;
if( cj4array[0] >= -1-IKFAST_SINCOS_THRESH && cj4array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j4valid[0] = j4valid[1] = true;
    j4array[0] = IKacos(cj4array[0]);
    sj4array[0] = IKsin(j4array[0]);
    cj4array[1] = cj4array[0];
    j4array[1] = -j4array[0];
    sj4array[1] = -sj4array[0];
}
else if( isnan(cj4array[0]) )
{
    // probably any value will work
    j4valid[0] = true;
    cj4array[0] = 1; sj4array[0] = 0; j4array[0] = 0;
}
int ij4;
for(ij4 = 0; ij4 < 2; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
int iij4;
for(iij4 = ij4+1; iij4 < 2; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];

{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(sj4);
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
gconst1=IKsign(sj4);
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(sj4);
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[12];
IkReal x67=(((IkReal)(-1.00000000000000))+(new_r22));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959))));
evalcond[1]=x67;
evalcond[2]=x67;
evalcond[3]=new_r12;
evalcond[4]=new_r02;
evalcond[5]=new_r20;
evalcond[6]=new_r21;
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=new_r20;
evalcond[10]=new_r21;
evalcond[11]=x67;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
IkReal j5mul = 1;
j5=0;
IkReal j3mul=(IkReal)(-1.00000000000000);
if( IKabs((((IkReal)(-1.00000000000000))*(new_r01))) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r00) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r01)))+IKsqr(new_r00)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3=IKatan2((((IkReal)(-1.00000000000000))*(new_r01)), new_r00);
{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].fmul = j3mul;
vinfos[3].freeind = 0;
vinfos[3].maxsolutions = 0;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].fmul = j5mul;
vinfos[5].freeind = 0;
vinfos[5].maxsolutions = 0;
int vfree[1];
vfree[0] = 5;
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 1);
}

} else
{
IkReal x68=(((IkReal)(1.00000000000000))+(new_r22));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959))));
evalcond[1]=x68;
evalcond[2]=x68;
evalcond[3]=new_r12;
evalcond[4]=new_r02;
evalcond[5]=new_r20;
evalcond[6]=new_r21;
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=(((IkReal)(-1.00000000000000))*(new_r20));
evalcond[10]=(((IkReal)(-1.00000000000000))*(new_r21));
evalcond[11]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
{
IkReal j3array[2], cj3array[2], sj3array[2];
bool j3valid[2]={false};
_nj3 = 2;
if( IKabs(new_r02) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r12) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x69=IKatan2(new_r02, new_r12);
j3array[0]=(((IkReal)(-1.00000000000000))*(x69));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
j3array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x69))));
sj3array[1]=IKsin(j3array[1]);
cj3array[1]=IKcos(j3array[1]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
if( j3array[1] > IKPI )
{
    j3array[1]-=IK2PI;
}
else if( j3array[1] < -IKPI )
{    j3array[1]+=IK2PI;
}
j3valid[1] = true;
int ij3;
for(ij3 = 0; ij3 < 2; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 2; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[1];
evalcond[0]=((((new_r12)*(IKcos(j3))))+((((IkReal)(-1.00000000000000))*(new_r02)*(IKsin(j3)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst16;
gconst16=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
gconst17=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst17)*(((((new_r11)*(sj3)))+(((cj3)*(new_r10))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*((((((IkReal)(-1.00000000000000))*(new_r10)*(sj3)))+(((cj3)*(new_r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst17)*(((((new_r11)*(sj3)))+(((cj3)*(new_r10)))))), ((gconst17)*((((((IkReal)(-1.00000000000000))*(new_r10)*(sj3)))+(((cj3)*(new_r11)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x70=IKsin(j5);
IkReal x71=IKcos(j5);
IkReal x72=(((IkReal)(1.00000000000000))*(sj3));
IkReal x73=((cj3)*(x70));
IkReal x74=(((IkReal)(1.00000000000000))*(x71));
IkReal x75=((x71)*(x72));
evalcond[0]=((((new_r11)*(sj3)))+(x70)+(((cj3)*(new_r01))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x74)))+(((new_r10)*(sj3)))+(((cj3)*(new_r00))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x75)))+(x73)+(new_r01));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x70)*(x72)))+(new_r00)+((((IkReal)(-1.00000000000000))*(cj3)*(x74))));
evalcond[4]=((((sj3)*(x70)))+(((cj3)*(x71)))+(new_r11));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x72)))+(x70)+(((cj3)*(new_r10))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(new_r01)*(x72)))+(((cj3)*(new_r11)))+(x71));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x75)))+(x73)+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst16)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*((((((IkReal)(-1.00000000000000))*(new_r01)*(sj3)))+(((cj3)*(new_r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst16)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01)))))), ((gconst16)*((((((IkReal)(-1.00000000000000))*(new_r01)*(sj3)))+(((cj3)*(new_r11)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x76=IKsin(j5);
IkReal x77=IKcos(j5);
IkReal x78=(((IkReal)(1.00000000000000))*(sj3));
IkReal x79=((cj3)*(x76));
IkReal x80=(((IkReal)(1.00000000000000))*(x77));
IkReal x81=((x77)*(x78));
evalcond[0]=((((new_r11)*(sj3)))+(x76)+(((cj3)*(new_r01))));
evalcond[1]=((((new_r10)*(sj3)))+((((IkReal)(-1.00000000000000))*(x80)))+(((cj3)*(new_r00))));
evalcond[2]=((x79)+(new_r01)+((((IkReal)(-1.00000000000000))*(x81))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(cj3)*(x80)))+(new_r00)+((((IkReal)(-1.00000000000000))*(x76)*(x78))));
evalcond[4]=((((sj3)*(x76)))+(((cj3)*(x77)))+(new_r11));
evalcond[5]=((x76)+(((cj3)*(new_r10)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x78))));
evalcond[6]=((((cj3)*(new_r11)))+(x77)+((((IkReal)(-1.00000000000000))*(new_r01)*(x78))));
evalcond[7]=((x79)+((((IkReal)(-1.00000000000000))*(x81)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst2)*(new_r02))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(gconst2)*(new_r12))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst2)*(new_r02)), (((IkReal)(-1.00000000000000))*(gconst2)*(new_r12)));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
int ij3;
for(ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x82=IKsin(j3);
IkReal x83=IKcos(j3);
IkReal x84=(((IkReal)(1.00000000000000))*(sj4));
IkReal x85=((new_r12)*(x83));
IkReal x86=((sj4)*(x82));
IkReal x87=(((IkReal)(1.00000000000000))*(new_r02)*(x82));
evalcond[0]=((((sj4)*(x83)))+(new_r12));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x82)*(x84)))+(new_r02));
evalcond[2]=((((new_r12)*(x82)))+(((new_r02)*(x83))));
evalcond[3]=((sj4)+(x85)+((((IkReal)(-1.00000000000000))*(x87))));
evalcond[4]=((((new_r22)*(sj4)))+((((IkReal)(-1.00000000000000))*(cj4)*(x87)))+(((cj4)*(x85))));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(new_r10)*(x83)*(x84)))+(((new_r00)*(x86)))+(((cj4)*(new_r20))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(new_r11)*(x83)*(x84)))+(((cj4)*(new_r21)))+(((new_r01)*(x86))));
evalcond[7]=(((IkReal)(-1.00000000000000))+(((cj4)*(new_r22)))+((((IkReal)(-1.00000000000000))*(x84)*(x85)))+(((new_r02)*(x86))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(sj4);
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj4;
dummyeval[1]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj3;
dummyeval[1]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[16];
IkReal x88=(((((IkReal)(-1.00000000000000))*(cj4)))+(new_r22));
IkReal x89=(((IkReal)(1.00000000000000))*(cj4));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j3)), (IkReal)(6.28318530717959))));
evalcond[1]=x88;
evalcond[2]=x88;
evalcond[3]=new_r12;
evalcond[4]=(((((IkReal)(-1.00000000000000))*(sj4)))+(new_r02));
evalcond[5]=new_r12;
evalcond[6]=new_r12;
evalcond[7]=((sj4)+((((IkReal)(-1.00000000000000))*(new_r02))));
evalcond[8]=((((new_r22)*(sj4)))+((((IkReal)(-1.00000000000000))*(new_r02)*(x89))));
evalcond[9]=((((new_r00)*(sj4)))+(((cj4)*(new_r20))));
evalcond[10]=((((new_r01)*(sj4)))+(((cj4)*(new_r21))));
evalcond[11]=(((IkReal)(-1.00000000000000))+(((cj4)*(new_r22)))+(((new_r02)*(sj4))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs((((IkReal)(-1.00000000000000))*(new_r11))) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r10) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r11)))+IKsqr(new_r10)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2((((IkReal)(-1.00000000000000))*(new_r11)), new_r10);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x90=IKsin(j5);
IkReal x91=IKcos(j5);
IkReal x92=(((IkReal)(1.00000000000000))*(cj4));
IkReal x93=(((IkReal)(1.00000000000000))*(x91));
IkReal x94=(((IkReal)(1.00000000000000))*(x90));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(sj4)*(x94)))+(new_r20));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x93))));
evalcond[2]=((new_r11)+(x90));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x93)))+(new_r10));
evalcond[4]=((((cj4)*(x91)))+(new_r01));
evalcond[5]=((new_r00)+(((cj4)*(x90))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x92)))+((((IkReal)(-1.00000000000000))*(x94)))+(((new_r20)*(sj4))));
evalcond[7]=((((new_r21)*(sj4)))+((((IkReal)(-1.00000000000000))*(x93)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x92))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

} else
{
IkReal x95=(((((IkReal)(-1.00000000000000))*(cj4)))+(new_r22));
IkReal x96=((sj4)+(new_r02));
IkReal x97=(((IkReal)(1.00000000000000))*(sj4));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j3)), (IkReal)(6.28318530717959))));
evalcond[1]=x95;
evalcond[2]=x95;
evalcond[3]=new_r12;
evalcond[4]=x96;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x96;
evalcond[7]=((((new_r22)*(sj4)))+(((cj4)*(new_r02))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x97)))+(((cj4)*(new_r20))));
evalcond[9]=((((cj4)*(new_r21)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x97))));
evalcond[10]=(((IkReal)(-1.00000000000000))+(((cj4)*(new_r22)))+((((IkReal)(-1.00000000000000))*(new_r02)*(x97))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(sj4);
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[15];
IkReal x98=(((IkReal)(1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r12;
evalcond[4]=x98;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x98;
evalcond[7]=new_r01;
evalcond[8]=new_r00;
evalcond[9]=new_r00;
evalcond[10]=new_r01;
evalcond[11]=new_r22;
evalcond[12]=(((IkReal)(-1.00000000000000))*(new_r00));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r01));
evalcond[14]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r02))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r20) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r21) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r20)+IKsqr(new_r21)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r20, new_r21);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x99=IKsin(j5);
IkReal x100=(((IkReal)(1.00000000000000))*(IKcos(j5)));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x99)))+(new_r20));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x100))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x99));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(new_r10)))+((((IkReal)(-1.00000000000000))*(x100))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

} else
{
IkReal x101=(((IkReal)(1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r12;
evalcond[4]=x101;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x101;
evalcond[7]=new_r01;
evalcond[8]=new_r00;
evalcond[9]=new_r00;
evalcond[10]=new_r01;
evalcond[11]=new_r22;
evalcond[12]=(((IkReal)(-1.00000000000000))*(new_r00));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r01));
evalcond[14]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r02))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r20) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r21) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r20)+IKsqr(new_r21)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r20, new_r21);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x102=IKsin(j5);
IkReal x103=(((IkReal)(1.00000000000000))*(IKcos(j5)));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x102)))+(new_r20));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x103))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x102));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x103)))+((((IkReal)(-1.00000000000000))*(new_r10))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

} else
{
IkReal x104=(((IkReal)(-1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r12;
evalcond[4]=x104;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x104;
evalcond[7]=new_r01;
evalcond[8]=new_r00;
evalcond[9]=new_r00;
evalcond[10]=new_r01;
evalcond[11]=(((IkReal)(-1.00000000000000))*(new_r22));
evalcond[12]=new_r00;
evalcond[13]=new_r01;
evalcond[14]=x104;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr((((IkReal)(-1.00000000000000))*(new_r21)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r11, (((IkReal)(-1.00000000000000))*(new_r21)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x105=IKsin(j5);
IkReal x106=IKcos(j5);
evalcond[0]=((new_r20)+(x105));
evalcond[1]=((new_r21)+(x106));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x105));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x106)))+((((IkReal)(-1.00000000000000))*(new_r10))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

} else
{
IkReal x107=(((IkReal)(-1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r12;
evalcond[4]=x107;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x107;
evalcond[7]=new_r01;
evalcond[8]=new_r00;
evalcond[9]=new_r00;
evalcond[10]=new_r01;
evalcond[11]=(((IkReal)(-1.00000000000000))*(new_r22));
evalcond[12]=new_r00;
evalcond[13]=new_r01;
evalcond[14]=x107;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr((((IkReal)(-1.00000000000000))*(new_r21)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r11, (((IkReal)(-1.00000000000000))*(new_r21)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x108=IKsin(j5);
IkReal x109=IKcos(j5);
evalcond[0]=((new_r20)+(x108));
evalcond[1]=((new_r21)+(x109));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x108));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x109)))+((((IkReal)(-1.00000000000000))*(new_r10))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs(((new_r01)*(((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr(((new_r01)*(((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r11, ((new_r01)*(((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x110=IKsin(j5);
IkReal x111=IKcos(j5);
IkReal x112=(((IkReal)(1.00000000000000))*(cj4));
IkReal x113=(((IkReal)(1.00000000000000))*(x111));
IkReal x114=(((IkReal)(1.00000000000000))*(x110));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(sj4)*(x114)))+(new_r20));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(sj4)*(x113)))+(new_r21));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x110));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x113)))+((((IkReal)(-1.00000000000000))*(new_r10))));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(x111)*(x112)))+(new_r01));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(x110)*(x112)))+(new_r00));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(x114)))+(((new_r20)*(sj4)))+(((cj4)*(new_r00))));
evalcond[7]=((((new_r21)*(sj4)))+(((cj4)*(new_r01)))+((((IkReal)(-1.00000000000000))*(x113))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs(((new_r21)*(((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr(((new_r21)*(((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r11, ((new_r21)*(((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x115=IKsin(j5);
IkReal x116=IKcos(j5);
IkReal x117=(((IkReal)(1.00000000000000))*(cj4));
IkReal x118=(((IkReal)(1.00000000000000))*(x116));
IkReal x119=(((IkReal)(1.00000000000000))*(x115));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x119))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x118))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x115));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x118)))+((((IkReal)(-1.00000000000000))*(new_r10))));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(x116)*(x117)))+(new_r01));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(x115)*(x117)))+(new_r00));
evalcond[6]=((((new_r20)*(sj4)))+(((cj4)*(new_r00)))+((((IkReal)(-1.00000000000000))*(x119))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x118)))+(((new_r21)*(sj4)))+(((cj4)*(new_r01))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst5)*(new_r20))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(new_r21))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst5)*(new_r20)), ((gconst5)*(new_r21)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x120=IKsin(j5);
IkReal x121=IKcos(j5);
IkReal x122=(((IkReal)(1.00000000000000))*(cj4));
IkReal x123=(((IkReal)(1.00000000000000))*(x121));
IkReal x124=(((IkReal)(1.00000000000000))*(x120));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(sj4)*(x124)))+(new_r20));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x123))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x120));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(new_r10)))+((((IkReal)(-1.00000000000000))*(x123))));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(x121)*(x122)))+(new_r01));
evalcond[5]=((new_r00)+((((IkReal)(-1.00000000000000))*(x120)*(x122))));
evalcond[6]=((((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(x124)))+(((cj4)*(new_r00))));
evalcond[7]=((((new_r21)*(sj4)))+(((cj4)*(new_r01)))+((((IkReal)(-1.00000000000000))*(x123))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}

} else
{
IkReal x125=(((IkReal)(-1.00000000000000))+(new_r22));
IkReal x126=((((new_r12)*(sj3)))+(((cj3)*(new_r02))));
IkReal x127=((((cj3)*(new_r12)))+((((IkReal)(-1.00000000000000))*(new_r02)*(sj3))));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959))));
evalcond[1]=x125;
evalcond[2]=x125;
evalcond[3]=new_r12;
evalcond[4]=new_r02;
evalcond[5]=new_r20;
evalcond[6]=new_r21;
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=x126;
evalcond[10]=x126;
evalcond[11]=x127;
evalcond[12]=x127;
evalcond[13]=new_r20;
evalcond[14]=new_r21;
evalcond[15]=x125;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  && IKabs(evalcond[15]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst7)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*((((((IkReal)(-1.00000000000000))*(cj3)*(new_r11)))+(((new_r01)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst7)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01)))))), ((gconst7)*((((((IkReal)(-1.00000000000000))*(cj3)*(new_r11)))+(((new_r01)*(sj3)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x128=IKsin(j5);
IkReal x129=IKcos(j5);
IkReal x130=(((IkReal)(1.00000000000000))*(sj3));
IkReal x131=((sj3)*(x128));
IkReal x132=(((IkReal)(1.00000000000000))*(x129));
IkReal x133=(((IkReal)(1.00000000000000))*(x128));
IkReal x134=((cj3)*(x132));
evalcond[0]=((((new_r11)*(sj3)))+(x128)+(((cj3)*(new_r01))));
evalcond[1]=((((new_r10)*(sj3)))+((((IkReal)(-1.00000000000000))*(x132)))+(((cj3)*(new_r00))));
evalcond[2]=((((cj3)*(x128)))+(new_r01)+(((sj3)*(x129))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x134)))+(new_r00)+(x131));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(x134)))+(x131)+(new_r11));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x130)))+(((cj3)*(new_r10)))+((((IkReal)(-1.00000000000000))*(x133))));
evalcond[6]=((((cj3)*(new_r11)))+((((IkReal)(-1.00000000000000))*(x132)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x130))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(cj3)*(x133)))+((((IkReal)(-1.00000000000000))*(x129)*(x130)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst6)*(((((new_r00)*(sj3)))+(((cj3)*(new_r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*((((((IkReal)(-1.00000000000000))*(cj3)*(new_r00)))+(((new_r01)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst6)*(((((new_r00)*(sj3)))+(((cj3)*(new_r01)))))), ((gconst6)*((((((IkReal)(-1.00000000000000))*(cj3)*(new_r00)))+(((new_r01)*(sj3)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x135=IKsin(j5);
IkReal x136=IKcos(j5);
IkReal x137=(((IkReal)(1.00000000000000))*(sj3));
IkReal x138=((sj3)*(x135));
IkReal x139=(((IkReal)(1.00000000000000))*(x136));
IkReal x140=(((IkReal)(1.00000000000000))*(x135));
IkReal x141=((cj3)*(x139));
evalcond[0]=((((new_r11)*(sj3)))+(x135)+(((cj3)*(new_r01))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x139)))+(((new_r10)*(sj3)))+(((cj3)*(new_r00))));
evalcond[2]=((((sj3)*(x136)))+(((cj3)*(x135)))+(new_r01));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x141)))+(new_r00)+(x138));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(x141)))+(x138)+(new_r11));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x137)))+((((IkReal)(-1.00000000000000))*(x140)))+(((cj3)*(new_r10))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(new_r01)*(x137)))+((((IkReal)(-1.00000000000000))*(x139)))+(((cj3)*(new_r11))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x136)*(x137)))+((((IkReal)(-1.00000000000000))*(cj3)*(x140)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}

} else
{
IkReal x142=(((IkReal)(1.00000000000000))+(new_r22));
IkReal x143=((cj3)*(new_r12));
IkReal x144=((new_r02)*(sj3));
IkReal x145=((((new_r12)*(sj3)))+(((cj3)*(new_r02))));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959))));
evalcond[1]=x142;
evalcond[2]=x142;
evalcond[3]=new_r12;
evalcond[4]=new_r02;
evalcond[5]=new_r20;
evalcond[6]=new_r21;
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=x145;
evalcond[10]=x145;
evalcond[11]=(((((IkReal)(-1.00000000000000))*(x144)))+(x143));
evalcond[12]=(((((IkReal)(-1.00000000000000))*(x143)))+(x144));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r20));
evalcond[14]=(((IkReal)(-1.00000000000000))*(new_r21));
evalcond[15]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  && IKabs(evalcond[15]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst9)*(((((new_r11)*(sj3)))+(((cj3)*(new_r10))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*((((((IkReal)(-1.00000000000000))*(new_r10)*(sj3)))+(((cj3)*(new_r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst9)*(((((new_r11)*(sj3)))+(((cj3)*(new_r10)))))), ((gconst9)*((((((IkReal)(-1.00000000000000))*(new_r10)*(sj3)))+(((cj3)*(new_r11)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x146=IKsin(j5);
IkReal x147=IKcos(j5);
IkReal x148=(((IkReal)(1.00000000000000))*(sj3));
IkReal x149=((cj3)*(x146));
IkReal x150=(((IkReal)(1.00000000000000))*(x147));
IkReal x151=((x147)*(x148));
evalcond[0]=((((new_r11)*(sj3)))+(x146)+(((cj3)*(new_r01))));
evalcond[1]=((((new_r10)*(sj3)))+((((IkReal)(-1.00000000000000))*(x150)))+(((cj3)*(new_r00))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x151)))+(new_r01)+(x149));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x146)*(x148)))+((((IkReal)(-1.00000000000000))*(cj3)*(x150)))+(new_r00));
evalcond[4]=((((cj3)*(x147)))+(((sj3)*(x146)))+(new_r11));
evalcond[5]=((((cj3)*(new_r10)))+(x146)+((((IkReal)(-1.00000000000000))*(new_r00)*(x148))));
evalcond[6]=((((cj3)*(new_r11)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x148)))+(x147));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x151)))+(x149)+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst8)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*((((((IkReal)(-1.00000000000000))*(new_r01)*(sj3)))+(((cj3)*(new_r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst8)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01)))))), ((gconst8)*((((((IkReal)(-1.00000000000000))*(new_r01)*(sj3)))+(((cj3)*(new_r11)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x152=IKsin(j5);
IkReal x153=IKcos(j5);
IkReal x154=(((IkReal)(1.00000000000000))*(sj3));
IkReal x155=((cj3)*(x152));
IkReal x156=(((IkReal)(1.00000000000000))*(x153));
IkReal x157=((x153)*(x154));
evalcond[0]=((x152)+(((new_r11)*(sj3)))+(((cj3)*(new_r01))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x156)))+(((new_r10)*(sj3)))+(((cj3)*(new_r00))));
evalcond[2]=((x155)+((((IkReal)(-1.00000000000000))*(x157)))+(new_r01));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(cj3)*(x156)))+(new_r00)+((((IkReal)(-1.00000000000000))*(x152)*(x154))));
evalcond[4]=((((sj3)*(x152)))+(((cj3)*(x153)))+(new_r11));
evalcond[5]=((x152)+((((IkReal)(-1.00000000000000))*(new_r00)*(x154)))+(((cj3)*(new_r10))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(new_r01)*(x154)))+(x153)+(((cj3)*(new_r11))));
evalcond[7]=((x155)+((((IkReal)(-1.00000000000000))*(x157)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x158=((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30);
if( IKabs(((x158)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(cj4)*(new_r21)*(sj3)))+((((IkReal)(-1.00000000000000))*(new_r01)*(sj4))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((new_r21)*(x158))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x158)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(cj4)*(new_r21)*(sj3)))+((((IkReal)(-1.00000000000000))*(new_r01)*(sj4)))))))+IKsqr(((new_r21)*(x158)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x158)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(cj4)*(new_r21)*(sj3)))+((((IkReal)(-1.00000000000000))*(new_r01)*(sj4)))))), ((new_r21)*(x158)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[12];
IkReal x159=IKsin(j5);
IkReal x160=IKcos(j5);
IkReal x161=((cj4)*(sj3));
IkReal x162=((cj3)*(new_r10));
IkReal x163=(((IkReal)(1.00000000000000))*(new_r01));
IkReal x164=((cj3)*(new_r11));
IkReal x165=(((IkReal)(1.00000000000000))*(new_r00));
IkReal x166=(((IkReal)(1.00000000000000))*(x160));
IkReal x167=((cj4)*(x159));
IkReal x168=(((IkReal)(1.00000000000000))*(x159));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x168))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(sj4)*(x166)))+(new_r21));
evalcond[2]=((x159)+(((new_r11)*(sj3)))+(((cj3)*(new_r01))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x166)))+(((new_r10)*(sj3)))+(((cj3)*(new_r00))));
evalcond[4]=((((x160)*(x161)))+(((cj3)*(x159)))+(new_r01));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(cj3)*(x166)))+(((x159)*(x161)))+(new_r00));
evalcond[6]=((((sj3)*(x159)))+(new_r11)+((((IkReal)(-1.00000000000000))*(cj3)*(cj4)*(x166))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x167)))+((((IkReal)(-1.00000000000000))*(sj3)*(x165)))+(x162));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(cj4)*(x166)))+(x164)+((((IkReal)(-1.00000000000000))*(sj3)*(x163))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(sj3)*(x166)))+(new_r10)+((((IkReal)(-1.00000000000000))*(cj3)*(x167))));
evalcond[10]=(((((IkReal)(-1.00000000000000))*(x168)))+(((cj4)*(x162)))+(((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(x161)*(x165))));
evalcond[11]=(((((IkReal)(-1.00000000000000))*(x161)*(x163)))+(((cj4)*(x164)))+(((new_r21)*(sj4)))+((((IkReal)(-1.00000000000000))*(x166))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x169=((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30);
if( IKabs(((new_r20)*(x169))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x169)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((new_r00)*(sj4)))+(((cj4)*(new_r20)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((new_r20)*(x169)))+IKsqr(((x169)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((new_r00)*(sj4)))+(((cj4)*(new_r20)*(sj3)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((new_r20)*(x169)), ((x169)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((new_r00)*(sj4)))+(((cj4)*(new_r20)*(sj3)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[12];
IkReal x170=IKsin(j5);
IkReal x171=IKcos(j5);
IkReal x172=((cj4)*(sj3));
IkReal x173=((cj3)*(new_r10));
IkReal x174=(((IkReal)(1.00000000000000))*(new_r01));
IkReal x175=((cj3)*(new_r11));
IkReal x176=(((IkReal)(1.00000000000000))*(new_r00));
IkReal x177=(((IkReal)(1.00000000000000))*(x171));
IkReal x178=((cj4)*(x170));
IkReal x179=(((IkReal)(1.00000000000000))*(x170));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x179))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x177))));
evalcond[2]=((x170)+(((new_r11)*(sj3)))+(((cj3)*(new_r01))));
evalcond[3]=((((new_r10)*(sj3)))+((((IkReal)(-1.00000000000000))*(x177)))+(((cj3)*(new_r00))));
evalcond[4]=((((cj3)*(x170)))+(new_r01)+(((x171)*(x172))));
evalcond[5]=((((x170)*(x172)))+((((IkReal)(-1.00000000000000))*(cj3)*(x177)))+(new_r00));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(cj3)*(cj4)*(x177)))+(((sj3)*(x170)))+(new_r11));
evalcond[7]=((x173)+((((IkReal)(-1.00000000000000))*(sj3)*(x176)))+((((IkReal)(-1.00000000000000))*(x178))));
evalcond[8]=((x175)+((((IkReal)(-1.00000000000000))*(cj4)*(x177)))+((((IkReal)(-1.00000000000000))*(sj3)*(x174))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(sj3)*(x177)))+((((IkReal)(-1.00000000000000))*(cj3)*(x178)))+(new_r10));
evalcond[10]=(((((IkReal)(-1.00000000000000))*(x172)*(x176)))+((((IkReal)(-1.00000000000000))*(x179)))+(((cj4)*(x173)))+(((new_r20)*(sj4))));
evalcond[11]=(((((IkReal)(-1.00000000000000))*(x172)*(x174)))+(((new_r21)*(sj4)))+((((IkReal)(-1.00000000000000))*(x177)))+(((cj4)*(x175))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst4)*(new_r20))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(new_r21))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst4)*(new_r20)), ((gconst4)*(new_r21)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[12];
IkReal x180=IKsin(j5);
IkReal x181=IKcos(j5);
IkReal x182=((cj4)*(sj3));
IkReal x183=((cj3)*(new_r10));
IkReal x184=(((IkReal)(1.00000000000000))*(new_r01));
IkReal x185=((cj3)*(new_r11));
IkReal x186=(((IkReal)(1.00000000000000))*(new_r00));
IkReal x187=(((IkReal)(1.00000000000000))*(x181));
IkReal x188=((cj4)*(x180));
IkReal x189=(((IkReal)(1.00000000000000))*(x180));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(sj4)*(x189)))+(new_r20));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x187))));
evalcond[2]=((((new_r11)*(sj3)))+(x180)+(((cj3)*(new_r01))));
evalcond[3]=((((new_r10)*(sj3)))+((((IkReal)(-1.00000000000000))*(x187)))+(((cj3)*(new_r00))));
evalcond[4]=((((cj3)*(x180)))+(new_r01)+(((x181)*(x182))));
evalcond[5]=((((x180)*(x182)))+(new_r00)+((((IkReal)(-1.00000000000000))*(cj3)*(x187))));
evalcond[6]=((((sj3)*(x180)))+((((IkReal)(-1.00000000000000))*(cj3)*(cj4)*(x187)))+(new_r11));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x188)))+(x183)+((((IkReal)(-1.00000000000000))*(sj3)*(x186))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(cj4)*(x187)))+(x185)+((((IkReal)(-1.00000000000000))*(sj3)*(x184))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(cj3)*(x188)))+(new_r10)+((((IkReal)(-1.00000000000000))*(sj3)*(x187))));
evalcond[10]=((((cj4)*(x183)))+((((IkReal)(-1.00000000000000))*(x189)))+(((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(x182)*(x186))));
evalcond[11]=((((new_r21)*(sj4)))+(((cj4)*(x185)))+((((IkReal)(-1.00000000000000))*(x187)))+((((IkReal)(-1.00000000000000))*(x182)*(x184))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst1)*(new_r02))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(gconst1)*(new_r12))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst1)*(new_r02)), (((IkReal)(-1.00000000000000))*(gconst1)*(new_r12)));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
int ij3;
for(ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x190=IKsin(j3);
IkReal x191=IKcos(j3);
IkReal x192=(((IkReal)(1.00000000000000))*(sj4));
IkReal x193=((new_r12)*(x191));
IkReal x194=((sj4)*(x190));
IkReal x195=(((IkReal)(1.00000000000000))*(new_r02)*(x190));
evalcond[0]=((((sj4)*(x191)))+(new_r12));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x190)*(x192)))+(new_r02));
evalcond[2]=((((new_r02)*(x191)))+(((new_r12)*(x190))));
evalcond[3]=((sj4)+(x193)+((((IkReal)(-1.00000000000000))*(x195))));
evalcond[4]=((((new_r22)*(sj4)))+(((cj4)*(x193)))+((((IkReal)(-1.00000000000000))*(cj4)*(x195))));
evalcond[5]=((((new_r00)*(x194)))+(((cj4)*(new_r20)))+((((IkReal)(-1.00000000000000))*(new_r10)*(x191)*(x192))));
evalcond[6]=((((new_r01)*(x194)))+(((cj4)*(new_r21)))+((((IkReal)(-1.00000000000000))*(new_r11)*(x191)*(x192))));
evalcond[7]=(((IkReal)(-1.00000000000000))+(((cj4)*(new_r22)))+((((IkReal)(-1.00000000000000))*(x192)*(x193)))+(((new_r02)*(x194))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(sj4);
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj4;
dummyeval[1]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj3;
dummyeval[1]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[16];
IkReal x196=(((((IkReal)(-1.00000000000000))*(cj4)))+(new_r22));
IkReal x197=(((IkReal)(1.00000000000000))*(cj4));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j3)), (IkReal)(6.28318530717959))));
evalcond[1]=x196;
evalcond[2]=x196;
evalcond[3]=new_r12;
evalcond[4]=(((((IkReal)(-1.00000000000000))*(sj4)))+(new_r02));
evalcond[5]=new_r12;
evalcond[6]=new_r12;
evalcond[7]=((sj4)+((((IkReal)(-1.00000000000000))*(new_r02))));
evalcond[8]=((((new_r22)*(sj4)))+((((IkReal)(-1.00000000000000))*(new_r02)*(x197))));
evalcond[9]=((((new_r00)*(sj4)))+(((cj4)*(new_r20))));
evalcond[10]=((((new_r01)*(sj4)))+(((cj4)*(new_r21))));
evalcond[11]=(((IkReal)(-1.00000000000000))+(((cj4)*(new_r22)))+(((new_r02)*(sj4))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs((((IkReal)(-1.00000000000000))*(new_r11))) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r10) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r11)))+IKsqr(new_r10)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2((((IkReal)(-1.00000000000000))*(new_r11)), new_r10);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x198=IKsin(j5);
IkReal x199=IKcos(j5);
IkReal x200=(((IkReal)(1.00000000000000))*(cj4));
IkReal x201=(((IkReal)(1.00000000000000))*(x199));
IkReal x202=(((IkReal)(1.00000000000000))*(x198));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x202))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x201))));
evalcond[2]=((x198)+(new_r11));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x201)))+(new_r10));
evalcond[4]=((((cj4)*(x199)))+(new_r01));
evalcond[5]=((((cj4)*(x198)))+(new_r00));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(x202)))+(((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x200))));
evalcond[7]=((((new_r21)*(sj4)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x200)))+((((IkReal)(-1.00000000000000))*(x201))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

} else
{
IkReal x203=(((((IkReal)(-1.00000000000000))*(cj4)))+(new_r22));
IkReal x204=((sj4)+(new_r02));
IkReal x205=(((IkReal)(1.00000000000000))*(sj4));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j3)), (IkReal)(6.28318530717959))));
evalcond[1]=x203;
evalcond[2]=x203;
evalcond[3]=new_r12;
evalcond[4]=x204;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x204;
evalcond[7]=((((new_r22)*(sj4)))+(((cj4)*(new_r02))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x205)))+(((cj4)*(new_r20))));
evalcond[9]=((((cj4)*(new_r21)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x205))));
evalcond[10]=(((IkReal)(-1.00000000000000))+(((cj4)*(new_r22)))+((((IkReal)(-1.00000000000000))*(new_r02)*(x205))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(sj4);
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[15];
IkReal x206=(((IkReal)(1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r12;
evalcond[4]=x206;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x206;
evalcond[7]=new_r01;
evalcond[8]=new_r00;
evalcond[9]=new_r00;
evalcond[10]=new_r01;
evalcond[11]=new_r22;
evalcond[12]=(((IkReal)(-1.00000000000000))*(new_r00));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r01));
evalcond[14]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r02))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r20) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r21) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r20)+IKsqr(new_r21)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r20, new_r21);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x207=IKsin(j5);
IkReal x208=(((IkReal)(1.00000000000000))*(IKcos(j5)));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(x207))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x208))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x207));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(new_r10)))+((((IkReal)(-1.00000000000000))*(x208))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

} else
{
IkReal x209=(((IkReal)(1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r12;
evalcond[4]=x209;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x209;
evalcond[7]=new_r01;
evalcond[8]=new_r00;
evalcond[9]=new_r00;
evalcond[10]=new_r01;
evalcond[11]=new_r22;
evalcond[12]=(((IkReal)(-1.00000000000000))*(new_r00));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r01));
evalcond[14]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r02))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r20) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r21) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r20)+IKsqr(new_r21)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r20, new_r21);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x210=IKsin(j5);
IkReal x211=(((IkReal)(1.00000000000000))*(IKcos(j5)));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(x210))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x211))));
evalcond[2]=((x210)+((((IkReal)(-1.00000000000000))*(new_r11))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(new_r10)))+((((IkReal)(-1.00000000000000))*(x211))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

} else
{
IkReal x212=(((IkReal)(-1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r12;
evalcond[4]=x212;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x212;
evalcond[7]=new_r01;
evalcond[8]=new_r00;
evalcond[9]=new_r00;
evalcond[10]=new_r01;
evalcond[11]=(((IkReal)(-1.00000000000000))*(new_r22));
evalcond[12]=new_r00;
evalcond[13]=new_r01;
evalcond[14]=x212;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr((((IkReal)(-1.00000000000000))*(new_r21)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r11, (((IkReal)(-1.00000000000000))*(new_r21)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x213=IKsin(j5);
IkReal x214=IKcos(j5);
evalcond[0]=((new_r20)+(x213));
evalcond[1]=((new_r21)+(x214));
evalcond[2]=((x213)+((((IkReal)(-1.00000000000000))*(new_r11))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x214)))+((((IkReal)(-1.00000000000000))*(new_r10))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

} else
{
IkReal x215=(((IkReal)(-1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r12;
evalcond[4]=x215;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x215;
evalcond[7]=new_r01;
evalcond[8]=new_r00;
evalcond[9]=new_r00;
evalcond[10]=new_r01;
evalcond[11]=(((IkReal)(-1.00000000000000))*(new_r22));
evalcond[12]=new_r00;
evalcond[13]=new_r01;
evalcond[14]=x215;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr((((IkReal)(-1.00000000000000))*(new_r21)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r11, (((IkReal)(-1.00000000000000))*(new_r21)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x216=IKsin(j5);
IkReal x217=IKcos(j5);
evalcond[0]=((new_r20)+(x216));
evalcond[1]=((new_r21)+(x217));
evalcond[2]=((x216)+((((IkReal)(-1.00000000000000))*(new_r11))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x217)))+((((IkReal)(-1.00000000000000))*(new_r10))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs(((new_r01)*(((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr(((new_r01)*(((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r11, ((new_r01)*(((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x218=IKsin(j5);
IkReal x219=IKcos(j5);
IkReal x220=(((IkReal)(1.00000000000000))*(cj4));
IkReal x221=(((IkReal)(1.00000000000000))*(x219));
IkReal x222=(((IkReal)(1.00000000000000))*(x218));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x222))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x221))));
evalcond[2]=((x218)+((((IkReal)(-1.00000000000000))*(new_r11))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x221)))+((((IkReal)(-1.00000000000000))*(new_r10))));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(x219)*(x220)))+(new_r01));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(x218)*(x220)))+(new_r00));
evalcond[6]=((((new_r20)*(sj4)))+(((cj4)*(new_r00)))+((((IkReal)(-1.00000000000000))*(x222))));
evalcond[7]=((((new_r21)*(sj4)))+((((IkReal)(-1.00000000000000))*(x221)))+(((cj4)*(new_r01))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs(((new_r21)*(((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr(((new_r21)*(((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r11, ((new_r21)*(((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x223=IKsin(j5);
IkReal x224=IKcos(j5);
IkReal x225=(((IkReal)(1.00000000000000))*(cj4));
IkReal x226=(((IkReal)(1.00000000000000))*(x224));
IkReal x227=(((IkReal)(1.00000000000000))*(x223));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x227))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(sj4)*(x226)))+(new_r21));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x223));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(new_r10)))+((((IkReal)(-1.00000000000000))*(x226))));
evalcond[4]=((new_r01)+((((IkReal)(-1.00000000000000))*(x224)*(x225))));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(x223)*(x225)))+(new_r00));
evalcond[6]=((((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(x227)))+(((cj4)*(new_r00))));
evalcond[7]=((((new_r21)*(sj4)))+(((cj4)*(new_r01)))+((((IkReal)(-1.00000000000000))*(x226))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst5)*(new_r20))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(new_r21))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst5)*(new_r20)), ((gconst5)*(new_r21)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x228=IKsin(j5);
IkReal x229=IKcos(j5);
IkReal x230=(((IkReal)(1.00000000000000))*(cj4));
IkReal x231=(((IkReal)(1.00000000000000))*(x229));
IkReal x232=(((IkReal)(1.00000000000000))*(x228));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x232))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x231))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x228));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x231)))+((((IkReal)(-1.00000000000000))*(new_r10))));
evalcond[4]=((new_r01)+((((IkReal)(-1.00000000000000))*(x229)*(x230))));
evalcond[5]=((new_r00)+((((IkReal)(-1.00000000000000))*(x228)*(x230))));
evalcond[6]=((((new_r20)*(sj4)))+(((cj4)*(new_r00)))+((((IkReal)(-1.00000000000000))*(x232))));
evalcond[7]=((((new_r21)*(sj4)))+(((cj4)*(new_r01)))+((((IkReal)(-1.00000000000000))*(x231))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}

} else
{
IkReal x233=(((IkReal)(-1.00000000000000))+(new_r22));
IkReal x234=((((new_r12)*(sj3)))+(((cj3)*(new_r02))));
IkReal x235=((((cj3)*(new_r12)))+((((IkReal)(-1.00000000000000))*(new_r02)*(sj3))));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959))));
evalcond[1]=x233;
evalcond[2]=x233;
evalcond[3]=new_r12;
evalcond[4]=new_r02;
evalcond[5]=new_r20;
evalcond[6]=new_r21;
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=x234;
evalcond[10]=x234;
evalcond[11]=x235;
evalcond[12]=x235;
evalcond[13]=new_r20;
evalcond[14]=new_r21;
evalcond[15]=x233;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  && IKabs(evalcond[15]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst7)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*((((((IkReal)(-1.00000000000000))*(cj3)*(new_r11)))+(((new_r01)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst7)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01)))))), ((gconst7)*((((((IkReal)(-1.00000000000000))*(cj3)*(new_r11)))+(((new_r01)*(sj3)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x236=IKsin(j5);
IkReal x237=IKcos(j5);
IkReal x238=(((IkReal)(1.00000000000000))*(sj3));
IkReal x239=((sj3)*(x236));
IkReal x240=(((IkReal)(1.00000000000000))*(x237));
IkReal x241=(((IkReal)(1.00000000000000))*(x236));
IkReal x242=((cj3)*(x240));
evalcond[0]=((x236)+(((new_r11)*(sj3)))+(((cj3)*(new_r01))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x240)))+(((new_r10)*(sj3)))+(((cj3)*(new_r00))));
evalcond[2]=((((sj3)*(x237)))+(new_r01)+(((cj3)*(x236))));
evalcond[3]=((x239)+((((IkReal)(-1.00000000000000))*(x242)))+(new_r00));
evalcond[4]=((x239)+((((IkReal)(-1.00000000000000))*(x242)))+(new_r11));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(x241)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x238)))+(((cj3)*(new_r10))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(x240)))+(((cj3)*(new_r11)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x238))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x237)*(x238)))+(new_r10)+((((IkReal)(-1.00000000000000))*(cj3)*(x241))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst6)*(((((new_r00)*(sj3)))+(((cj3)*(new_r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*((((((IkReal)(-1.00000000000000))*(cj3)*(new_r00)))+(((new_r01)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst6)*(((((new_r00)*(sj3)))+(((cj3)*(new_r01)))))), ((gconst6)*((((((IkReal)(-1.00000000000000))*(cj3)*(new_r00)))+(((new_r01)*(sj3)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x243=IKsin(j5);
IkReal x244=IKcos(j5);
IkReal x245=(((IkReal)(1.00000000000000))*(sj3));
IkReal x246=((sj3)*(x243));
IkReal x247=(((IkReal)(1.00000000000000))*(x244));
IkReal x248=(((IkReal)(1.00000000000000))*(x243));
IkReal x249=((cj3)*(x247));
evalcond[0]=((((new_r11)*(sj3)))+(x243)+(((cj3)*(new_r01))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x247)))+(((new_r10)*(sj3)))+(((cj3)*(new_r00))));
evalcond[2]=((((sj3)*(x244)))+(new_r01)+(((cj3)*(x243))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x249)))+(x246)+(new_r00));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(x249)))+(x246)+(new_r11));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(x248)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x245)))+(((cj3)*(new_r10))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(x247)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x245)))+(((cj3)*(new_r11))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x244)*(x245)))+((((IkReal)(-1.00000000000000))*(cj3)*(x248)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}

} else
{
IkReal x250=(((IkReal)(1.00000000000000))+(new_r22));
IkReal x251=((cj3)*(new_r12));
IkReal x252=((new_r02)*(sj3));
IkReal x253=((((new_r12)*(sj3)))+(((cj3)*(new_r02))));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959))));
evalcond[1]=x250;
evalcond[2]=x250;
evalcond[3]=new_r12;
evalcond[4]=new_r02;
evalcond[5]=new_r20;
evalcond[6]=new_r21;
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=x253;
evalcond[10]=x253;
evalcond[11]=((x251)+((((IkReal)(-1.00000000000000))*(x252))));
evalcond[12]=(((((IkReal)(-1.00000000000000))*(x251)))+(x252));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r20));
evalcond[14]=(((IkReal)(-1.00000000000000))*(new_r21));
evalcond[15]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  && IKabs(evalcond[15]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst9)*(((((new_r11)*(sj3)))+(((cj3)*(new_r10))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*((((((IkReal)(-1.00000000000000))*(new_r10)*(sj3)))+(((cj3)*(new_r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst9)*(((((new_r11)*(sj3)))+(((cj3)*(new_r10)))))), ((gconst9)*((((((IkReal)(-1.00000000000000))*(new_r10)*(sj3)))+(((cj3)*(new_r11)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x254=IKsin(j5);
IkReal x255=IKcos(j5);
IkReal x256=(((IkReal)(1.00000000000000))*(sj3));
IkReal x257=((cj3)*(x254));
IkReal x258=(((IkReal)(1.00000000000000))*(x255));
IkReal x259=((x255)*(x256));
evalcond[0]=((((new_r11)*(sj3)))+(x254)+(((cj3)*(new_r01))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x258)))+(((new_r10)*(sj3)))+(((cj3)*(new_r00))));
evalcond[2]=((x257)+(new_r01)+((((IkReal)(-1.00000000000000))*(x259))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x254)*(x256)))+((((IkReal)(-1.00000000000000))*(cj3)*(x258)))+(new_r00));
evalcond[4]=((((sj3)*(x254)))+(((cj3)*(x255)))+(new_r11));
evalcond[5]=((x254)+(((cj3)*(new_r10)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x256))));
evalcond[6]=((x255)+((((IkReal)(-1.00000000000000))*(new_r01)*(x256)))+(((cj3)*(new_r11))));
evalcond[7]=((x257)+((((IkReal)(-1.00000000000000))*(x259)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst8)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*((((((IkReal)(-1.00000000000000))*(new_r01)*(sj3)))+(((cj3)*(new_r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst8)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01)))))), ((gconst8)*((((((IkReal)(-1.00000000000000))*(new_r01)*(sj3)))+(((cj3)*(new_r11)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x260=IKsin(j5);
IkReal x261=IKcos(j5);
IkReal x262=(((IkReal)(1.00000000000000))*(sj3));
IkReal x263=((cj3)*(x260));
IkReal x264=(((IkReal)(1.00000000000000))*(x261));
IkReal x265=((x261)*(x262));
evalcond[0]=((((new_r11)*(sj3)))+(x260)+(((cj3)*(new_r01))));
evalcond[1]=((((new_r10)*(sj3)))+((((IkReal)(-1.00000000000000))*(x264)))+(((cj3)*(new_r00))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x265)))+(new_r01)+(x263));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x260)*(x262)))+((((IkReal)(-1.00000000000000))*(cj3)*(x264)))+(new_r00));
evalcond[4]=((((sj3)*(x260)))+(((cj3)*(x261)))+(new_r11));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x262)))+(((cj3)*(new_r10)))+(x260));
evalcond[6]=((((cj3)*(new_r11)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x262)))+(x261));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x265)))+(x263)+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x266=((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30);
if( IKabs(((x266)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(cj4)*(new_r21)*(sj3)))+((((IkReal)(-1.00000000000000))*(new_r01)*(sj4))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((new_r21)*(x266))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x266)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(cj4)*(new_r21)*(sj3)))+((((IkReal)(-1.00000000000000))*(new_r01)*(sj4)))))))+IKsqr(((new_r21)*(x266)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x266)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(cj4)*(new_r21)*(sj3)))+((((IkReal)(-1.00000000000000))*(new_r01)*(sj4)))))), ((new_r21)*(x266)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[12];
IkReal x267=IKsin(j5);
IkReal x268=IKcos(j5);
IkReal x269=((cj4)*(sj3));
IkReal x270=((cj3)*(new_r10));
IkReal x271=(((IkReal)(1.00000000000000))*(new_r01));
IkReal x272=((cj3)*(new_r11));
IkReal x273=(((IkReal)(1.00000000000000))*(new_r00));
IkReal x274=(((IkReal)(1.00000000000000))*(x268));
IkReal x275=((cj4)*(x267));
IkReal x276=(((IkReal)(1.00000000000000))*(x267));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x276))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x274))));
evalcond[2]=((((new_r11)*(sj3)))+(x267)+(((cj3)*(new_r01))));
evalcond[3]=((((new_r10)*(sj3)))+((((IkReal)(-1.00000000000000))*(x274)))+(((cj3)*(new_r00))));
evalcond[4]=((((x268)*(x269)))+(new_r01)+(((cj3)*(x267))));
evalcond[5]=((new_r00)+((((IkReal)(-1.00000000000000))*(cj3)*(x274)))+(((x267)*(x269))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(cj3)*(cj4)*(x274)))+(((sj3)*(x267)))+(new_r11));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x275)))+(x270)+((((IkReal)(-1.00000000000000))*(sj3)*(x273))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(sj3)*(x271)))+(x272)+((((IkReal)(-1.00000000000000))*(cj4)*(x274))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(cj3)*(x275)))+((((IkReal)(-1.00000000000000))*(sj3)*(x274)))+(new_r10));
evalcond[10]=((((cj4)*(x270)))+(((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(x269)*(x273)))+((((IkReal)(-1.00000000000000))*(x276))));
evalcond[11]=((((new_r21)*(sj4)))+(((cj4)*(x272)))+((((IkReal)(-1.00000000000000))*(x274)))+((((IkReal)(-1.00000000000000))*(x269)*(x271))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x277=((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30);
if( IKabs(((new_r20)*(x277))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x277)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((new_r00)*(sj4)))+(((cj4)*(new_r20)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((new_r20)*(x277)))+IKsqr(((x277)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((new_r00)*(sj4)))+(((cj4)*(new_r20)*(sj3)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((new_r20)*(x277)), ((x277)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((new_r00)*(sj4)))+(((cj4)*(new_r20)*(sj3)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[12];
IkReal x278=IKsin(j5);
IkReal x279=IKcos(j5);
IkReal x280=((cj4)*(sj3));
IkReal x281=((cj3)*(new_r10));
IkReal x282=(((IkReal)(1.00000000000000))*(new_r01));
IkReal x283=((cj3)*(new_r11));
IkReal x284=(((IkReal)(1.00000000000000))*(new_r00));
IkReal x285=(((IkReal)(1.00000000000000))*(x279));
IkReal x286=((cj4)*(x278));
IkReal x287=(((IkReal)(1.00000000000000))*(x278));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x287))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x285))));
evalcond[2]=((((new_r11)*(sj3)))+(x278)+(((cj3)*(new_r01))));
evalcond[3]=((((new_r10)*(sj3)))+((((IkReal)(-1.00000000000000))*(x285)))+(((cj3)*(new_r00))));
evalcond[4]=((((x279)*(x280)))+(((cj3)*(x278)))+(new_r01));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(cj3)*(x285)))+(new_r00)+(((x278)*(x280))));
evalcond[6]=((((sj3)*(x278)))+((((IkReal)(-1.00000000000000))*(cj3)*(cj4)*(x285)))+(new_r11));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x286)))+(x281)+((((IkReal)(-1.00000000000000))*(sj3)*(x284))));
evalcond[8]=((x283)+((((IkReal)(-1.00000000000000))*(sj3)*(x282)))+((((IkReal)(-1.00000000000000))*(cj4)*(x285))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(sj3)*(x285)))+((((IkReal)(-1.00000000000000))*(cj3)*(x286)))+(new_r10));
evalcond[10]=((((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(x287)))+((((IkReal)(-1.00000000000000))*(x280)*(x284)))+(((cj4)*(x281))));
evalcond[11]=((((cj4)*(x283)))+(((new_r21)*(sj4)))+((((IkReal)(-1.00000000000000))*(x285)))+((((IkReal)(-1.00000000000000))*(x280)*(x282))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst4)*(new_r20))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(new_r21))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst4)*(new_r20)), ((gconst4)*(new_r21)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[12];
IkReal x288=IKsin(j5);
IkReal x289=IKcos(j5);
IkReal x290=((cj4)*(sj3));
IkReal x291=((cj3)*(new_r10));
IkReal x292=(((IkReal)(1.00000000000000))*(new_r01));
IkReal x293=((cj3)*(new_r11));
IkReal x294=(((IkReal)(1.00000000000000))*(new_r00));
IkReal x295=(((IkReal)(1.00000000000000))*(x289));
IkReal x296=((cj4)*(x288));
IkReal x297=(((IkReal)(1.00000000000000))*(x288));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x297))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x295))));
evalcond[2]=((x288)+(((new_r11)*(sj3)))+(((cj3)*(new_r01))));
evalcond[3]=((((new_r10)*(sj3)))+((((IkReal)(-1.00000000000000))*(x295)))+(((cj3)*(new_r00))));
evalcond[4]=((((cj3)*(x288)))+(((x289)*(x290)))+(new_r01));
evalcond[5]=((((x288)*(x290)))+((((IkReal)(-1.00000000000000))*(cj3)*(x295)))+(new_r00));
evalcond[6]=((((sj3)*(x288)))+(new_r11)+((((IkReal)(-1.00000000000000))*(cj3)*(cj4)*(x295))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x296)))+(x291)+((((IkReal)(-1.00000000000000))*(sj3)*(x294))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(sj3)*(x292)))+(x293)+((((IkReal)(-1.00000000000000))*(cj4)*(x295))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(cj3)*(x296)))+((((IkReal)(-1.00000000000000))*(sj3)*(x295)))+(new_r10));
evalcond[10]=((((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(x297)))+(((cj4)*(x291)))+((((IkReal)(-1.00000000000000))*(x290)*(x294))));
evalcond[11]=((((new_r21)*(sj4)))+(((cj4)*(x293)))+((((IkReal)(-1.00000000000000))*(x295)))+((((IkReal)(-1.00000000000000))*(x290)*(x292))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst3)*(new_r20))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(new_r21))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst3)*(new_r20)), ((gconst3)*(new_r21)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x298=(((IkReal)(1.00000000000000))*(sj4));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(x298)*(IKsin(j5)))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x298)*(IKcos(j5))))+(new_r21));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign(sj4);
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst11;
gconst11=IKsign(sj4);
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[12];
IkReal x299=(((IkReal)(-1.00000000000000))+(new_r22));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959))));
evalcond[1]=x299;
evalcond[2]=x299;
evalcond[3]=new_r12;
evalcond[4]=new_r02;
evalcond[5]=new_r20;
evalcond[6]=new_r21;
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=new_r20;
evalcond[10]=new_r21;
evalcond[11]=x299;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign((((((IkReal)(-1.00000000000000))*(new_r02)*(new_r11)))+(((new_r01)*(new_r12)))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*(new_r02)*(new_r11)))+(((new_r01)*(new_r12))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst13;
gconst13=IKsign(((((new_r12)*(sj5)))+((((IkReal)(-1.00000000000000))*(cj5)*(new_r02)))));
dummyeval[0]=((((new_r12)*(sj5)))+((((IkReal)(-1.00000000000000))*(cj5)*(new_r02))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x300=((gconst13)*(new_r01));
if( IKabs(((new_r02)*(x300))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r12)*(x300))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((new_r02)*(x300)), (((IkReal)(-1.00000000000000))*(new_r12)*(x300)));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
int ij3;
for(ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[10];
IkReal x301=IKsin(j3);
IkReal x302=IKcos(j3);
IkReal x303=(((IkReal)(1.00000000000000))*(cj5));
IkReal x304=((sj5)*(x301));
IkReal x305=((cj5)*(x301));
IkReal x306=((sj5)*(x302));
IkReal x307=(((IkReal)(1.00000000000000))*(x301));
IkReal x308=((x302)*(x303));
evalcond[0]=((((new_r02)*(x302)))+(((new_r12)*(x301))));
evalcond[1]=((sj5)+(((new_r11)*(x301)))+(((new_r01)*(x302))));
evalcond[2]=((((new_r12)*(x302)))+((((IkReal)(-1.00000000000000))*(new_r02)*(x307))));
evalcond[3]=((((new_r00)*(x302)))+((((IkReal)(-1.00000000000000))*(x303)))+(((new_r10)*(x301))));
evalcond[4]=((x306)+(x305)+(new_r01));
evalcond[5]=((x304)+((((IkReal)(-1.00000000000000))*(x308)))+(new_r00));
evalcond[6]=((x304)+((((IkReal)(-1.00000000000000))*(x308)))+(new_r11));
evalcond[7]=((((new_r10)*(x302)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x307)))+((((IkReal)(-1.00000000000000))*(sj5))));
evalcond[8]=((((new_r11)*(x302)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x307)))+((((IkReal)(-1.00000000000000))*(x303))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(x306)))+((((IkReal)(-1.00000000000000))*(x301)*(x303)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x309=((gconst12)*(sj5));
if( IKabs(((new_r02)*(x309))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r12)*(x309))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((new_r02)*(x309)), (((IkReal)(-1.00000000000000))*(new_r12)*(x309)));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
int ij3;
for(ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[10];
IkReal x310=IKsin(j3);
IkReal x311=IKcos(j3);
IkReal x312=(((IkReal)(1.00000000000000))*(cj5));
IkReal x313=((sj5)*(x310));
IkReal x314=((cj5)*(x310));
IkReal x315=((sj5)*(x311));
IkReal x316=(((IkReal)(1.00000000000000))*(x310));
IkReal x317=((x311)*(x312));
evalcond[0]=((((new_r12)*(x310)))+(((new_r02)*(x311))));
evalcond[1]=((sj5)+(((new_r01)*(x311)))+(((new_r11)*(x310))));
evalcond[2]=((((new_r12)*(x311)))+((((IkReal)(-1.00000000000000))*(new_r02)*(x316))));
evalcond[3]=((((new_r10)*(x310)))+((((IkReal)(-1.00000000000000))*(x312)))+(((new_r00)*(x311))));
evalcond[4]=((x315)+(x314)+(new_r01));
evalcond[5]=((x313)+((((IkReal)(-1.00000000000000))*(x317)))+(new_r00));
evalcond[6]=((x313)+((((IkReal)(-1.00000000000000))*(x317)))+(new_r11));
evalcond[7]=((((new_r10)*(x311)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x316)))+((((IkReal)(-1.00000000000000))*(sj5))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(x312)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x316)))+(((new_r11)*(x311))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(x315)))+((((IkReal)(-1.00000000000000))*(x310)*(x312)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}

} else
{
IkReal x318=(((IkReal)(1.00000000000000))+(new_r22));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959))));
evalcond[1]=x318;
evalcond[2]=x318;
evalcond[3]=new_r12;
evalcond[4]=new_r02;
evalcond[5]=new_r20;
evalcond[6]=new_r21;
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=(((IkReal)(-1.00000000000000))*(new_r20));
evalcond[10]=(((IkReal)(-1.00000000000000))*(new_r21));
evalcond[11]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign((((((IkReal)(-1.00000000000000))*(new_r02)*(new_r11)))+(((new_r01)*(new_r12)))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*(new_r02)*(new_r11)))+(((new_r01)*(new_r12))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign(((((cj5)*(new_r12)))+((((IkReal)(-1.00000000000000))*(new_r02)*(sj5)))));
dummyeval[0]=((((cj5)*(new_r12)))+((((IkReal)(-1.00000000000000))*(new_r02)*(sj5))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x319=((gconst15)*(new_r11));
if( IKabs(((new_r02)*(x319))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r12)*(x319))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((new_r02)*(x319)), (((IkReal)(-1.00000000000000))*(new_r12)*(x319)));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
int ij3;
for(ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[10];
IkReal x320=IKsin(j3);
IkReal x321=IKcos(j3);
IkReal x322=(((IkReal)(1.00000000000000))*(cj5));
IkReal x323=((sj5)*(x321));
IkReal x324=(((IkReal)(1.00000000000000))*(x320));
IkReal x325=((x320)*(x322));
evalcond[0]=((((new_r12)*(x320)))+(((new_r02)*(x321))));
evalcond[1]=((sj5)+(((new_r11)*(x320)))+(((new_r01)*(x321))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r02)*(x324)))+(((new_r12)*(x321))));
evalcond[3]=((((new_r00)*(x321)))+(((new_r10)*(x320)))+((((IkReal)(-1.00000000000000))*(x322))));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(x325)))+(x323)+(new_r01));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(x321)*(x322)))+((((IkReal)(-1.00000000000000))*(sj5)*(x324)))+(new_r00));
evalcond[6]=((((cj5)*(x321)))+(((sj5)*(x320)))+(new_r11));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x324)))+(sj5)+(((new_r10)*(x321))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(new_r01)*(x324)))+(((new_r11)*(x321)))+(cj5));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(x325)))+(x323)+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x326=((gconst14)*(sj5));
if( IKabs(((new_r02)*(x326))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r12)*(x326))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((new_r02)*(x326)), (((IkReal)(-1.00000000000000))*(new_r12)*(x326)));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
int ij3;
for(ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[10];
IkReal x327=IKsin(j3);
IkReal x328=IKcos(j3);
IkReal x329=(((IkReal)(1.00000000000000))*(cj5));
IkReal x330=((sj5)*(x328));
IkReal x331=(((IkReal)(1.00000000000000))*(x327));
IkReal x332=((x327)*(x329));
evalcond[0]=((((new_r02)*(x328)))+(((new_r12)*(x327))));
evalcond[1]=((sj5)+(((new_r11)*(x327)))+(((new_r01)*(x328))));
evalcond[2]=((((new_r12)*(x328)))+((((IkReal)(-1.00000000000000))*(new_r02)*(x331))));
evalcond[3]=((((new_r10)*(x327)))+((((IkReal)(-1.00000000000000))*(x329)))+(((new_r00)*(x328))));
evalcond[4]=((x330)+(new_r01)+((((IkReal)(-1.00000000000000))*(x332))));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(x328)*(x329)))+(new_r00)+((((IkReal)(-1.00000000000000))*(sj5)*(x331))));
evalcond[6]=((((sj5)*(x327)))+(((cj5)*(x328)))+(new_r11));
evalcond[7]=((sj5)+(((new_r10)*(x328)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x331))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(new_r01)*(x331)))+(cj5)+(((new_r11)*(x328))));
evalcond[9]=((x330)+((((IkReal)(-1.00000000000000))*(x332)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst11)*(new_r02))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(gconst11)*(new_r12))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst11)*(new_r02)), (((IkReal)(-1.00000000000000))*(gconst11)*(new_r12)));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
int ij3;
for(ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[18];
IkReal x333=IKsin(j3);
IkReal x334=IKcos(j3);
IkReal x335=(((IkReal)(1.00000000000000))*(cj5));
IkReal x336=(((IkReal)(1.00000000000000))*(cj4));
IkReal x337=((new_r11)*(x334));
IkReal x338=((sj4)*(x333));
IkReal x339=((sj5)*(x334));
IkReal x340=((cj4)*(x334));
IkReal x341=((sj4)*(x334));
IkReal x342=((new_r00)*(x333));
IkReal x343=((cj4)*(x333));
IkReal x344=((new_r01)*(x333));
IkReal x345=((new_r02)*(x333));
evalcond[0]=((x341)+(new_r12));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x338)))+(new_r02));
evalcond[2]=((((new_r02)*(x334)))+(((new_r12)*(x333))));
evalcond[3]=((sj5)+(((new_r11)*(x333)))+(((new_r01)*(x334))));
evalcond[4]=((sj4)+(((new_r12)*(x334)))+((((IkReal)(-1.00000000000000))*(x345))));
evalcond[5]=((((new_r10)*(x333)))+(((new_r00)*(x334)))+((((IkReal)(-1.00000000000000))*(x335))));
evalcond[6]=((((cj5)*(x343)))+(x339)+(new_r01));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x334)*(x335)))+(new_r00)+(((sj5)*(x343))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(x335)*(x340)))+(((sj5)*(x333)))+(new_r11));
evalcond[9]=((((new_r10)*(x334)))+((((IkReal)(-1.00000000000000))*(x342)))+((((IkReal)(-1.00000000000000))*(sj5)*(x336))));
evalcond[10]=(((((IkReal)(-1.00000000000000))*(x344)))+((((IkReal)(-1.00000000000000))*(cj4)*(x335)))+(x337));
evalcond[11]=(((((IkReal)(-1.00000000000000))*(x336)*(x339)))+((((IkReal)(-1.00000000000000))*(x333)*(x335)))+(new_r10));
evalcond[12]=((((new_r22)*(sj4)))+(((new_r12)*(x340)))+((((IkReal)(-1.00000000000000))*(x336)*(x345))));
evalcond[13]=(((((IkReal)(-1.00000000000000))*(new_r10)*(x341)))+(((new_r00)*(x338)))+(((cj4)*(new_r20))));
evalcond[14]=(((((IkReal)(-1.00000000000000))*(sj4)*(x337)))+(((cj4)*(new_r21)))+(((new_r01)*(x338))));
evalcond[15]=(((IkReal)(-1.00000000000000))+(((cj4)*(new_r22)))+((((IkReal)(-1.00000000000000))*(new_r12)*(x341)))+(((new_r02)*(x338))));
evalcond[16]=((((new_r20)*(sj4)))+(((new_r10)*(x340)))+((((IkReal)(-1.00000000000000))*(x336)*(x342)))+((((IkReal)(-1.00000000000000))*(sj5))));
evalcond[17]=((((new_r21)*(sj4)))+((((IkReal)(-1.00000000000000))*(x336)*(x344)))+(((cj4)*(x337)))+((((IkReal)(-1.00000000000000))*(x335))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  || IKabs(evalcond[12]) > 0.000001  || IKabs(evalcond[13]) > 0.000001  || IKabs(evalcond[14]) > 0.000001  || IKabs(evalcond[15]) > 0.000001  || IKabs(evalcond[16]) > 0.000001  || IKabs(evalcond[17]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst10)*(new_r02))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(gconst10)*(new_r12))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst10)*(new_r02)), (((IkReal)(-1.00000000000000))*(gconst10)*(new_r12)));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
int ij3;
for(ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[18];
IkReal x346=IKsin(j3);
IkReal x347=IKcos(j3);
IkReal x348=(((IkReal)(1.00000000000000))*(cj5));
IkReal x349=(((IkReal)(1.00000000000000))*(cj4));
IkReal x350=((new_r11)*(x347));
IkReal x351=((sj4)*(x346));
IkReal x352=((sj5)*(x347));
IkReal x353=((cj4)*(x347));
IkReal x354=((sj4)*(x347));
IkReal x355=((new_r00)*(x346));
IkReal x356=((cj4)*(x346));
IkReal x357=((new_r01)*(x346));
IkReal x358=((new_r02)*(x346));
evalcond[0]=((x354)+(new_r12));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x351)))+(new_r02));
evalcond[2]=((((new_r02)*(x347)))+(((new_r12)*(x346))));
evalcond[3]=((sj5)+(((new_r11)*(x346)))+(((new_r01)*(x347))));
evalcond[4]=((((new_r12)*(x347)))+(sj4)+((((IkReal)(-1.00000000000000))*(x358))));
evalcond[5]=((((new_r10)*(x346)))+(((new_r00)*(x347)))+((((IkReal)(-1.00000000000000))*(x348))));
evalcond[6]=((x352)+(new_r01)+(((cj5)*(x356))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x347)*(x348)))+(((sj5)*(x356)))+(new_r00));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(x348)*(x353)))+(((sj5)*(x346)))+(new_r11));
evalcond[9]=((((new_r10)*(x347)))+((((IkReal)(-1.00000000000000))*(sj5)*(x349)))+((((IkReal)(-1.00000000000000))*(x355))));
evalcond[10]=(((((IkReal)(-1.00000000000000))*(x357)))+(x350)+((((IkReal)(-1.00000000000000))*(cj4)*(x348))));
evalcond[11]=(((((IkReal)(-1.00000000000000))*(x346)*(x348)))+((((IkReal)(-1.00000000000000))*(x349)*(x352)))+(new_r10));
evalcond[12]=((((new_r22)*(sj4)))+(((new_r12)*(x353)))+((((IkReal)(-1.00000000000000))*(x349)*(x358))));
evalcond[13]=((((cj4)*(new_r20)))+(((new_r00)*(x351)))+((((IkReal)(-1.00000000000000))*(new_r10)*(x354))));
evalcond[14]=((((cj4)*(new_r21)))+((((IkReal)(-1.00000000000000))*(sj4)*(x350)))+(((new_r01)*(x351))));
evalcond[15]=(((IkReal)(-1.00000000000000))+(((new_r02)*(x351)))+(((cj4)*(new_r22)))+((((IkReal)(-1.00000000000000))*(new_r12)*(x354))));
evalcond[16]=((((new_r20)*(sj4)))+(((new_r10)*(x353)))+((((IkReal)(-1.00000000000000))*(x349)*(x355)))+((((IkReal)(-1.00000000000000))*(sj5))));
evalcond[17]=((((new_r21)*(sj4)))+(((cj4)*(x350)))+((((IkReal)(-1.00000000000000))*(x348)))+((((IkReal)(-1.00000000000000))*(x349)*(x357))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  || IKabs(evalcond[12]) > 0.000001  || IKabs(evalcond[13]) > 0.000001  || IKabs(evalcond[14]) > 0.000001  || IKabs(evalcond[15]) > 0.000001  || IKabs(evalcond[16]) > 0.000001  || IKabs(evalcond[17]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[6];
IkSingleDOFSolution_Init( vinfos, 6 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 6, vfree, 0);
}
}
}

}

}
}
}

}

}
}
}
}
}/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40;
x0=IKsin(j[0]);
x1=IKcos(j[2]);
x2=IKsin(j[1]);
x3=IKcos(j[1]);
x4=IKsin(j[2]);
x5=IKcos(j[3]);
x6=IKcos(j[0]);
x7=IKsin(j[3]);
x8=IKsin(j[4]);
x9=IKcos(j[4]);
x10=IKsin(j[5]);
x11=IKcos(j[5]);
x12=(((IkReal)(0.342500000000000))*(x2));
x13=(((IkReal)(1.00000000000000))*(x9));
x14=(((IkReal)(1.00000000000000))*(x6));
x15=(((IkReal)(1.00000000000000))*(x0));
x16=(((IkReal)(0.349500000000000))*(x6));
x17=(((IkReal)(1.00000000000000))*(x8));
x18=(((IkReal)(1.00000000000000))*(x5));
x19=(((IkReal)(0.349500000000000))*(x0));
x20=(((IkReal)(-1.00000000000000))*(x7));
x21=((x1)*(x2));
x22=((x2)*(x4));
x23=((x3)*(x4));
x24=((x1)*(x3));
x25=((x14)*(x7));
x26=((x15)*(x7));
x27=((x21)+(x23));
x28=(((((IkReal)(-1.00000000000000))*(x22)))+(x24));
x29=((x28)*(x8));
x30=((x27)*(x7));
x31=((x27)*(x5));
x32=(((((IkReal)(-1.00000000000000))*(x15)*(x24)))+(((x0)*(x22))));
x33=((x0)*(((x21)+(x23))));
x34=(((((IkReal)(-1.00000000000000))*(x14)*(x22)))+(((x24)*(x6))));
x35=((x32)*(x5));
x36=((x14)*((((((IkReal)(-1.00000000000000))*(x21)))+((((IkReal)(-1.00000000000000))*(x23))))));
x37=((x34)*(x5));
x38=((x36)*(x8));
x39=((((x5)*(x6)))+(((x32)*(x7))));
x40=((((x34)*(x7)))+(((x0)*(x5))));
eerot[0]=((((x11)*(x39)))+(((x10)*(((((x9)*(((((x20)*(x6)))+(x35)))))+(((x33)*(x8))))))));
eerot[1]=((((x8)*((((((IkReal)(-1.00000000000000))*(x18)*(x32)))+(x25)))))+(((x33)*(x9))));
eerot[2]=((((x10)*(x39)))+((((IkReal)(-1.00000000000000))*(x11)*(((((x17)*(x33)))+(((x13)*((((((IkReal)(-1.00000000000000))*(x25)))+(x35))))))))));
eetrans[0]=((((x19)*(x23)))+(((x19)*(x21)))+(((x0)*(x12))));
eerot[3]=((((x10)*(((((x9)*((((((IkReal)(-1.00000000000000))*(x26)))+(x37)))))+(x38)))))+(((x11)*(x40))));
eerot[4]=((((x36)*(x9)))+(((x8)*((((((IkReal)(-1.00000000000000))*(x18)*(x34)))+(x26))))));
eerot[5]=((((x10)*(x40)))+(((x11)*((((((IkReal)(-1.00000000000000))*(x38)))+((((IkReal)(-1.00000000000000))*(x9)*(((((x0)*(x20)))+(x37))))))))));
IkReal x41=(((IkReal)(1.00000000000000))*(x16));
eetrans[1]=(((((IkReal)(-1.00000000000000))*(x21)*(x41)))+((((IkReal)(-1.00000000000000))*(x12)*(x6)))+((((IkReal)(-1.00000000000000))*(x23)*(x41))));
eerot[6]=((((x10)*(((x29)+(((x31)*(x9)))))))+(((x11)*(x30))));
eerot[7]=((((x28)*(x9)))+(((x5)*(x8)*((((((IkReal)(-1.00000000000000))*(x21)))+((((IkReal)(-1.00000000000000))*(x23))))))));
eerot[8]=((((x11)*((((((IkReal)(-1.00000000000000))*(x17)*(x28)))+((((IkReal)(-1.00000000000000))*(x13)*(x31)))))))+(((x10)*(x30))));
eetrans[2]=(((IkReal)(0.261900000000000))+((((IkReal)(0.349500000000000))*(x24)))+((((IkReal)(-0.349500000000000))*(x22)))+((((IkReal)(0.342500000000000))*(x3))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return IKFAST_NUM_JOINTS; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

int ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionList * solutions) {
j0=NAN; _ij0[0] = -1; _ij0[1] = -1; _nj0 = -1; j1=NAN; _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j2=NAN; _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=NAN; _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=NAN; _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=NAN; _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; 
int dummyiter;
for(dummyiter = 0; dummyiter < 1; ++dummyiter) {
    IkSolutionList_Clear(solutions);
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=r00;
new_r01=(((IkReal)(-1.00000000000000))*(r02));
new_r02=r01;
new_px=px;
new_r10=r10;
new_r11=(((IkReal)(-1.00000000000000))*(r12));
new_r12=r11;
new_py=py;
new_r20=r20;
new_r21=(((IkReal)(-1.00000000000000))*(r22));
new_r22=r21;
new_pz=(((IkReal)(-0.261900000000000))+(pz));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((pz)*(pz))+((py)*(py)));
npx=((((py)*(r10)))+(((pz)*(r20)))+(((px)*(r00))));
npy=((((px)*(r01)))+(((pz)*(r21)))+(((py)*(r11))));
npz=((((py)*(r12)))+(((pz)*(r22)))+(((px)*(r02))));
rxp0_0=(((((IkReal)(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+((((IkReal)(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((py)*(r00)))+((((IkReal)(-1.00000000000000))*(px)*(r10))));
rxp1_0=((((pz)*(r11)))+((((IkReal)(-1.00000000000000))*(py)*(r21))));
rxp1_1=(((((IkReal)(-1.00000000000000))*(pz)*(r01)))+(((px)*(r21))));
rxp1_2=((((py)*(r01)))+((((IkReal)(-1.00000000000000))*(px)*(r11))));
rxp2_0=(((((IkReal)(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+((((IkReal)(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((py)*(r02)))+((((IkReal)(-1.00000000000000))*(px)*(r12))));
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
cj2array[0]=(((IkReal)(-1.00020467195054))+((((IkReal)(4.17697858254232))*(pp))));
if( cj2array[0] >= -1-IKFAST_SINCOS_THRESH && cj2array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j2valid[0] = j2valid[1] = true;
    j2array[0] = IKacos(cj2array[0]);
    sj2array[0] = IKsin(j2array[0]);
    cj2array[1] = cj2array[0];
    j2array[1] = -j2array[0];
    sj2array[1] = -sj2array[0];
}
else if( isnan(cj2array[0]) )
{
    // probably any value will work
    j2valid[0] = true;
    cj2array[0] = 1; sj2array[0] = 0; j2array[0] = 0;
}
int ij2;
for(ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
int iij2;
for(iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];

{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
if( IKabs((((IkReal)(-1.00000000000000))*(px))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(py))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x42=IKatan2((((IkReal)(-1.00000000000000))*(px)), (((IkReal)(-1.00000000000000))*(py)));
j0array[0]=(((IkReal)(-1.00000000000000))*(x42));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
j0array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x42))));
sj0array[1]=IKsin(j0array[1]);
cj0array[1]=IKcos(j0array[1]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
if( j0array[1] > IKPI )
{
    j0array[1]-=IK2PI;
}
else if( j0array[1] < -IKPI )
{    j0array[1]+=IK2PI;
}
j0valid[1] = true;
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

{
IkReal dummyeval[1];
IkReal gconst0;
IkReal x43=(((IkReal)(699.000000000000))*(cj2));
IkReal x44=((cj0)*(py));
IkReal x45=((px)*(sj0));
gconst0=IKsign((((((IkReal)(-699.000000000000))*(pz)*(sj2)))+((((IkReal)(-685.000000000000))*(x45)))+((((IkReal)(685.000000000000))*(x44)))+((((IkReal)(-1.00000000000000))*(x43)*(x45)))+(((x43)*(x44)))));
IkReal x46=((cj0)*(py));
IkReal x47=(((IkReal)(1.02043795620438))*(cj2));
IkReal x48=((px)*(sj0));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*(x48)))+(x46)+((((IkReal)(-1.00000000000000))*(x47)*(x48)))+((((IkReal)(-1.02043795620438))*(pz)*(sj2)))+(((x46)*(x47))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal x49=(((IkReal)(1.02043795620438))*(sj2));
dummyeval[0]=(((((IkReal)(1.02043795620438))*(cj2)*(pz)))+(((cj0)*(py)*(x49)))+(pz)+((((IkReal)(-1.00000000000000))*(px)*(sj0)*(x49))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[3];
evalcond[0]=((IKabs(pz))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j2)), (IkReal)(6.28318530717959)))))));
evalcond[1]=(((IkReal)(0.478864000000000))+((((IkReal)(-1.00000000000000))*(pp))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(cj0)*(px)))+((((IkReal)(-1.00000000000000))*(py)*(sj0))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
sj1array[0]=(((((IkReal)(-1.44508670520231))*(cj0)*(py)))+((((IkReal)(1.44508670520231))*(px)*(sj0))));
if( sj1array[0] >= -1-IKFAST_SINCOS_THRESH && sj1array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j1valid[0] = j1valid[1] = true;
    j1array[0] = IKasin(sj1array[0]);
    cj1array[0] = IKcos(j1array[0]);
    sj1array[1] = sj1array[0];
    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
    cj1array[1] = -cj1array[0];
}
else if( isnan(sj1array[0]) )
{
    // probably any value will work
    j1valid[0] = true;
    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
}
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x50=IKsin(j1);
IkReal x51=IKcos(j1);
IkReal x52=((px)*(sj0));
IkReal x53=((cj0)*(py));
IkReal x54=(((IkReal)(0.685000000000000))*(x50));
evalcond[0]=(((IkReal)(-0.692000000000000))*(x51));
evalcond[1]=(((IkReal)(-0.692000000000000))+((((IkReal)(-1.00000000000000))*(x50)*(x53)))+(((x50)*(x52))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x51)*(x53)))+(((x51)*(x52))));
evalcond[3]=(((IkReal)(0.00484400000000000))+(((x52)*(x54)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-1.00000000000000))*(x53)*(x54))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j2, (IkReal)(6.28318530717959))))))+(IKabs(pz)));
evalcond[1]=(((IkReal)(4.90000000000000e-5))+((((IkReal)(-1.00000000000000))*(pp))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(cj0)*(px)))+((((IkReal)(-1.00000000000000))*(py)*(sj0))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  )
{
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
sj1array[0]=(((((IkReal)(142.857142857143))*(cj0)*(py)))+((((IkReal)(-142.857142857143))*(px)*(sj0))));
if( sj1array[0] >= -1-IKFAST_SINCOS_THRESH && sj1array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j1valid[0] = j1valid[1] = true;
    j1array[0] = IKasin(sj1array[0]);
    cj1array[0] = IKcos(j1array[0]);
    sj1array[1] = sj1array[0];
    j1array[1] = j1array[0] > 0 ? (IKPI-j1array[0]) : (-IKPI-j1array[0]);
    cj1array[1] = -cj1array[0];
}
else if( isnan(sj1array[0]) )
{
    // probably any value will work
    j1valid[0] = true;
    cj1array[0] = 1; sj1array[0] = 0; j1array[0] = 0;
}
int ij1;
for(ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x359=IKsin(j1);
IkReal x360=IKcos(j1);
IkReal x361=((px)*(sj0));
IkReal x362=((cj0)*(py));
IkReal x363=(((IkReal)(0.685000000000000))*(x359));
evalcond[0]=(((IkReal)(0.00700000000000000))*(x360));
evalcond[1]=(((IkReal)(0.00700000000000000))+(((x359)*(x361)))+((((IkReal)(-1.00000000000000))*(x359)*(x362))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x360)*(x362)))+(((x360)*(x361))));
evalcond[3]=(((IkReal)(0.00484400000000000))+((((IkReal)(-1.00000000000000))*(x362)*(x363)))+((((IkReal)(-1.00000000000000))*(pp)))+(((x361)*(x363))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x364=((cj2)*(pz));
IkReal x365=(((IkReal)(2000.00000000000))*(pz));
IkReal x366=((px)*(sj0));
IkReal x367=((cj0)*(py)*(sj2));
if( IKabs(((((IKabs((((((IkReal)(699.000000000000))*(x364)))+((((IkReal)(685.000000000000))*(pz)))+((((IkReal)(699.000000000000))*(x367)))+((((IkReal)(-699.000000000000))*(sj2)*(x366))))) != 0)?((IkReal)1/((((((IkReal)(699.000000000000))*(x364)))+((((IkReal)(685.000000000000))*(pz)))+((((IkReal)(699.000000000000))*(x367)))+((((IkReal)(-699.000000000000))*(sj2)*(x366)))))):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(cj0)*(py)*(x365)))+(((x365)*(x366)))+((((IkReal)(-244.300500000000))*(cj2)*(sj2)))+((((IkReal)(-239.407500000000))*(sj2))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs((((((IkReal)(-1398000.00000000))*(x367)))+((((IkReal)(-1398000.00000000))*(x364)))+((((IkReal)(-1370000.00000000))*(pz)))+((((IkReal)(1398000.00000000))*(sj2)*(x366))))) != 0)?((IkReal)1/((((((IkReal)(-1398000.00000000))*(x367)))+((((IkReal)(-1398000.00000000))*(x364)))+((((IkReal)(-1370000.00000000))*(pz)))+((((IkReal)(1398000.00000000))*(sj2)*(x366)))))):(IkReal)1.0e30))*((((((IkReal)(488601.000000000))*((sj2)*(sj2))))+((((IkReal)(-4000000.00000000))*((pz)*(pz)))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs((((((IkReal)(699.000000000000))*(x364)))+((((IkReal)(685.000000000000))*(pz)))+((((IkReal)(699.000000000000))*(x367)))+((((IkReal)(-699.000000000000))*(sj2)*(x366))))) != 0)?((IkReal)1/((((((IkReal)(699.000000000000))*(x364)))+((((IkReal)(685.000000000000))*(pz)))+((((IkReal)(699.000000000000))*(x367)))+((((IkReal)(-699.000000000000))*(sj2)*(x366)))))):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(cj0)*(py)*(x365)))+(((x365)*(x366)))+((((IkReal)(-244.300500000000))*(cj2)*(sj2)))+((((IkReal)(-239.407500000000))*(sj2)))))))+IKsqr(((((IKabs((((((IkReal)(-1398000.00000000))*(x367)))+((((IkReal)(-1398000.00000000))*(x364)))+((((IkReal)(-1370000.00000000))*(pz)))+((((IkReal)(1398000.00000000))*(sj2)*(x366))))) != 0)?((IkReal)1/((((((IkReal)(-1398000.00000000))*(x367)))+((((IkReal)(-1398000.00000000))*(x364)))+((((IkReal)(-1370000.00000000))*(pz)))+((((IkReal)(1398000.00000000))*(sj2)*(x366)))))):(IkReal)1.0e30))*((((((IkReal)(488601.000000000))*((sj2)*(sj2))))+((((IkReal)(-4000000.00000000))*((pz)*(pz))))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IKabs((((((IkReal)(699.000000000000))*(x364)))+((((IkReal)(685.000000000000))*(pz)))+((((IkReal)(699.000000000000))*(x367)))+((((IkReal)(-699.000000000000))*(sj2)*(x366))))) != 0)?((IkReal)1/((((((IkReal)(699.000000000000))*(x364)))+((((IkReal)(685.000000000000))*(pz)))+((((IkReal)(699.000000000000))*(x367)))+((((IkReal)(-699.000000000000))*(sj2)*(x366)))))):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(cj0)*(py)*(x365)))+(((x365)*(x366)))+((((IkReal)(-244.300500000000))*(cj2)*(sj2)))+((((IkReal)(-239.407500000000))*(sj2)))))), ((((IKabs((((((IkReal)(-1398000.00000000))*(x367)))+((((IkReal)(-1398000.00000000))*(x364)))+((((IkReal)(-1370000.00000000))*(pz)))+((((IkReal)(1398000.00000000))*(sj2)*(x366))))) != 0)?((IkReal)1/((((((IkReal)(-1398000.00000000))*(x367)))+((((IkReal)(-1398000.00000000))*(x364)))+((((IkReal)(-1370000.00000000))*(pz)))+((((IkReal)(1398000.00000000))*(sj2)*(x366)))))):(IkReal)1.0e30))*((((((IkReal)(488601.000000000))*((sj2)*(sj2))))+((((IkReal)(-4000000.00000000))*((pz)*(pz))))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x368=IKcos(j1);
IkReal x369=IKsin(j1);
IkReal x370=((px)*(sj0));
IkReal x371=(((IkReal)(0.349500000000000))*(cj2));
IkReal x372=(((IkReal)(0.349500000000000))*(sj2));
IkReal x373=((cj0)*(py));
IkReal x374=(((IkReal)(0.685000000000000))*(x369));
IkReal x375=(((IkReal)(1.00000000000000))*(x369));
IkReal x376=((pz)*(x368));
evalcond[0]=((((x369)*(x372)))+((((IkReal)(-0.342500000000000))*(x368)))+((((IkReal)(-1.00000000000000))*(x368)*(x371)))+(pz));
evalcond[1]=(((IkReal)(-0.342500000000000))+(x376)+((((IkReal)(-1.00000000000000))*(x371)))+((((IkReal)(-1.00000000000000))*(x373)*(x375)))+(((x369)*(x370))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x372)))+((((IkReal)(-1.00000000000000))*(pz)*(x375)))+(((x368)*(x370)))+((((IkReal)(-1.00000000000000))*(x368)*(x373))));
evalcond[3]=(((IkReal)(0.00484400000000000))+((((IkReal)(-1.00000000000000))*(x373)*(x374)))+((((IkReal)(0.685000000000000))*(x376)))+((((IkReal)(-1.00000000000000))*(pp)))+(((x370)*(x374))));
evalcond[4]=((x370)+((((IkReal)(-1.00000000000000))*(x373)))+((((IkReal)(-1.00000000000000))*(x368)*(x372)))+((((IkReal)(-1.00000000000000))*(x369)*(x371)))+((((IkReal)(-0.342500000000000))*(x369))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x377=(((IkReal)(2000.00000000000))*(pz));
if( IKabs(((gconst0)*((((IkReal)(-234.612500000000))+((((IkReal)(-478.815000000000))*(cj2)))+(((pz)*(x377)))+((((IkReal)(-244.300500000000))*((cj2)*(cj2)))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*((((((IkReal)(-244.300500000000))*(cj2)*(sj2)))+((((IkReal)(-239.407500000000))*(sj2)))+((((IkReal)(-1.00000000000000))*(px)*(sj0)*(x377)))+(((cj0)*(py)*(x377))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst0)*((((IkReal)(-234.612500000000))+((((IkReal)(-478.815000000000))*(cj2)))+(((pz)*(x377)))+((((IkReal)(-244.300500000000))*((cj2)*(cj2))))))), ((gconst0)*((((((IkReal)(-244.300500000000))*(cj2)*(sj2)))+((((IkReal)(-239.407500000000))*(sj2)))+((((IkReal)(-1.00000000000000))*(px)*(sj0)*(x377)))+(((cj0)*(py)*(x377)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x378=IKcos(j1);
IkReal x379=IKsin(j1);
IkReal x380=((px)*(sj0));
IkReal x381=(((IkReal)(0.349500000000000))*(cj2));
IkReal x382=(((IkReal)(0.349500000000000))*(sj2));
IkReal x383=((cj0)*(py));
IkReal x384=(((IkReal)(0.685000000000000))*(x379));
IkReal x385=(((IkReal)(1.00000000000000))*(x379));
IkReal x386=((pz)*(x378));
evalcond[0]=(((((IkReal)(-0.342500000000000))*(x378)))+((((IkReal)(-1.00000000000000))*(x378)*(x381)))+(pz)+(((x379)*(x382))));
evalcond[1]=(((IkReal)(-0.342500000000000))+((((IkReal)(-1.00000000000000))*(x383)*(x385)))+(x386)+((((IkReal)(-1.00000000000000))*(x381)))+(((x379)*(x380))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x378)*(x383)))+((((IkReal)(-1.00000000000000))*(x382)))+((((IkReal)(-1.00000000000000))*(pz)*(x385)))+(((x378)*(x380))));
evalcond[3]=(((IkReal)(0.00484400000000000))+((((IkReal)(-1.00000000000000))*(x383)*(x384)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(0.685000000000000))*(x386)))+(((x380)*(x384))));
evalcond[4]=((x380)+((((IkReal)(-0.342500000000000))*(x379)))+((((IkReal)(-1.00000000000000))*(x378)*(x382)))+((((IkReal)(-1.00000000000000))*(x379)*(x381)))+((((IkReal)(-1.00000000000000))*(x383))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}
}
}
}
}
}
return IkSolutionList_GetNumSolutions(solutions)>0;
}


IKFAST_API const char* GetKinematicsHash() { return "fbf1c03411dff69733dd5dc78c12308f"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }


#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList solutions;
    IkSolutionList_Init( &solutions );
    IkReal vfree[IKFAST_NUM_FREE_VARS];
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    size_t i = 0;
    for(i = 0; i < countof(vfree); ++i)
        vfree[i] = atof(argv[13+i]);
    int bSuccess = ComputeIk(eetrans, eerot, countof(vfree) > 0 ? vfree : NULL, &solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)IkSolutionList_GetNumSolutions(&solutions));
    IkReal solvalues[IKFAST_NUM_JOINTS];
    for(i = 0; i < IkSolutionList_GetNumSolutions(&solutions); ++i) 
    {
        int sol_count;
        int free_count;
        IkSolution * sol = IkSolutionList_GetSolution(&solutions, i);
        IkSolution_GetSolution(sol, solvalues, &sol_count, vfree);
        const int *vsolfree = IkSolution_GetFree( sol, &free_count );
        printf("sol%d (free=%d): ", i, free_count);
        size_t j = 0;
        for( j = 0; j < sol_count; ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
