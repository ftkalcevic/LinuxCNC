/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// C version for linuxcnc adapted by \author Frank Tkalcevic
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 62 generated on 2019-11-04 20:05:07.633214
///
///    /usr/local/bin/openrave.py --database inversekinematics --robot=./moveolike2.xml --iktype=Transform6D --perftiming=1000 --freejoint=GripperTranslate --outputlang=c 
///
/// To compile with gcc:
///     gcc ik.c -lm
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp

#define IKFAST_HAS_LIBRARY
#define IKFAST_NUM_DOF 4
#define IKFAST_NUM_JOINTS 7
#define IKFAST_NUM_FREE_VARS 1

// For a standalone binary
#ifndef IKFAST_NO_MAIN
    #define j0 math_h_j0
    #define j1 math_h_j1

    #include <math.h>
    #include <complex.h>
    #include <stdlib.h>
    #include <stdio.h>

    #undef j0
    #undef j1

    #define rtapi_exit  exit
    #define rtapi_print printf
#endif

#include "ikfast_c.h" // found inside share/openrave-X.Y/python/ikfast_c.h

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==62);

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { rtapi_print( "ikfast exception: " __FILE__ ":" IKFAST_STRINGIZE(__LINE__) ": " IKFAST_STRINGIZE(_PRETTY_FUNCTION__) ": Assertion '"  #b "' failed" ); rtapi_exit(-1); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
void zgetrf_ (const int* m, const int* n, double complex * a, const int* lda, int* ipiv, int* info);
void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);


static inline double IKabs(double f) { return fabs(f); }

static inline double IKsqr(double f) { return f*f; }

static inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

static inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
static inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

static inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
static inline double IKsin(double f) { return sin(f); }
static inline double IKcos(double f) { return cos(f); }
static inline double IKtan(double f) { return tan(f); }
static inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
static inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}


static inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

// Forward declaration even if they aren't used
static inline void polyroots1(IkReal rawcoeffs[1+1], IkReal rawroots[1], int *numroots );
static inline void polyroots2(IkReal rawcoeffs[2+1], IkReal rawroots[2], int *numroots );
static inline void polyroots3(IkReal rawcoeffs[3+1], IkReal rawroots[3], int *numroots );
static inline void polyroots4(IkReal rawcoeffs[4+1], IkReal rawroots[4], int *numroots );
static inline void polyroots5(IkReal rawcoeffs[5+1], IkReal rawroots[5], int *numroots );
static inline void polyroots6(IkReal rawcoeffs[6+1], IkReal rawroots[6], int *numroots );
static inline void polyroots7(IkReal rawcoeffs[7+1], IkReal rawroots[7], int *numroots );
static inline void polyroots8(IkReal rawcoeffs[8+1], IkReal rawroots[8], int *numroots );


static const struct JointInfo
{
    double limitMin;
    double limitMax;
    int jointType;
} JointInfo[] =
{
{ .limitMin=-90.0, .limitMax=90.0, .jointType=1 },
{ .limitMin=-120.0, .limitMax=120.0, .jointType=1 },
{ .limitMin=-115.0, .limitMax=125.0, .jointType=1 },
{ .limitMin=-540.0, .limitMax=540.0, .jointType=1 },
{ .limitMin=-135.0, .limitMax=135.0, .jointType=1 },
{ .limitMin=-180.0, .limitMax=180.0, .jointType=1 },
{ .limitMin=0.0, .limitMax=50.0, .jointType=17 },
};
static IkReal j0,cj0,sj0,htj0,j1,cj1,sj1,htj1,j2,cj2,sj2,htj2,j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,j6,cj6,sj6,htj6,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
static unsigned char _ij0[2], _nj0,_ij1[2], _nj1,_ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5,_ij6[2], _nj6;

static inline void rotationfunction0(IkSolutionList* solutions) {
int rotationiter = 0;
for(rotationiter = 0; rotationiter < 1; ++rotationiter) {
IkReal x88=(((IkReal)(1.00000000000000))*(sj1));
IkReal x89=((cj1)*(sj2));
IkReal x90=((cj0)*(r10));
IkReal x91=((cj0)*(r12));
IkReal x92=(((IkReal)(1.00000000000000))*(sj0));
IkReal x93=((cj0)*(r11));
IkReal x94=((r00)*(x92));
IkReal x95=(((((IkReal)(-1.00000000000000))*(sj2)*(x88)))+(((cj1)*(cj2))));
IkReal x96=((((cj2)*(sj1)))+(x89));
IkReal x97=(((((IkReal)(-1.00000000000000))*(x89)))+((((IkReal)(-1.00000000000000))*(cj2)*(x88))));
IkReal x98=((x92)*(x95));
IkReal x99=((cj0)*(x97));
new_r00=((((r10)*(sj0)))+(((cj0)*(r00))));
new_r01=((((r11)*(sj0)))+(((cj0)*(r01))));
new_r02=((((cj0)*(r02)))+(((r12)*(sj0))));
new_r10=(((((IkReal)(-1.00000000000000))*(x94)*(x95)))+(((x90)*(x95)))+(((r20)*(x96))));
new_r11=((((r21)*(x96)))+(((x93)*(x95)))+((((IkReal)(-1.00000000000000))*(r01)*(x98))));
new_r12=(((((IkReal)(-1.00000000000000))*(r02)*(x98)))+(((r22)*(x96)))+(((x91)*(x95))));
new_r20=((((r20)*(x95)))+(((x90)*(x97)))+((((IkReal)(-1.00000000000000))*(x94)*(x97))));
new_r21=((((x93)*(x97)))+(((r21)*(x95)))+((((IkReal)(-1.00000000000000))*(r01)*(x92)*(x97))));
new_r22=((((r22)*(x95)))+((((IkReal)(-1.00000000000000))*(r02)*(x92)*(x97)))+(((x91)*(x97))));
{
IkReal j4array[2], cj4array[2], sj4array[2];
bool j4valid[2]={false};
_nj4 = 2;
cj4array[0]=new_r22;
if( cj4array[0] >= -1-IKFAST_SINCOS_THRESH && cj4array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j4valid[0] = j4valid[1] = true;
    j4array[0] = IKacos(cj4array[0]);
    sj4array[0] = IKsin(j4array[0]);
    cj4array[1] = cj4array[0];
    j4array[1] = -j4array[0];
    sj4array[1] = -sj4array[0];
}
else if( isnan(cj4array[0]) )
{
    // probably any value will work
    j4valid[0] = true;
    cj4array[0] = 1; sj4array[0] = 0; j4array[0] = 0;
}
int ij4;
for(ij4 = 0; ij4 < 2; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
int iij4;
for(iij4 = ij4+1; iij4 < 2; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];

{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(sj4);
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(sj4);
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(sj4);
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[12];
IkReal x100=(((IkReal)(-1.00000000000000))+(new_r22));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959))));
evalcond[1]=x100;
evalcond[2]=x100;
evalcond[3]=new_r12;
evalcond[4]=new_r02;
evalcond[5]=new_r20;
evalcond[6]=new_r21;
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=new_r20;
evalcond[10]=new_r21;
evalcond[11]=x100;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
IkReal j5mul = 1;
j5=0;
IkReal j3mul=(IkReal)(-1.00000000000000);
if( IKabs((((IkReal)(-1.00000000000000))*(new_r01))) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r00) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r01)))+IKsqr(new_r00)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3=IKatan2((((IkReal)(-1.00000000000000))*(new_r01)), new_r00);
{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].fmul = j3mul;
vinfos[3].freeind = 0;
vinfos[3].maxsolutions = 0;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].fmul = j5mul;
vinfos[5].freeind = 0;
vinfos[5].maxsolutions = 0;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[1];
vfree[0] = 5;
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 1);
}

} else
{
IkReal x101=(((IkReal)(1.00000000000000))+(new_r22));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959))));
evalcond[1]=x101;
evalcond[2]=x101;
evalcond[3]=new_r12;
evalcond[4]=new_r02;
evalcond[5]=new_r20;
evalcond[6]=new_r21;
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=(((IkReal)(-1.00000000000000))*(new_r20));
evalcond[10]=(((IkReal)(-1.00000000000000))*(new_r21));
evalcond[11]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
{
IkReal j3array[2], cj3array[2], sj3array[2];
bool j3valid[2]={false};
_nj3 = 2;
if( IKabs(new_r02) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r12) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x102=IKatan2(new_r02, new_r12);
j3array[0]=(((IkReal)(-1.00000000000000))*(x102));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
j3array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x102))));
sj3array[1]=IKsin(j3array[1]);
cj3array[1]=IKcos(j3array[1]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
if( j3array[1] > IKPI )
{
    j3array[1]-=IK2PI;
}
else if( j3array[1] < -IKPI )
{    j3array[1]+=IK2PI;
}
j3valid[1] = true;
int ij3;
for(ij3 = 0; ij3 < 2; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 2; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[1];
evalcond[0]=((((new_r12)*(IKcos(j3))))+((((IkReal)(-1.00000000000000))*(new_r02)*(IKsin(j3)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst17;
gconst17=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst18;
gconst18=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst18)*(((((new_r11)*(sj3)))+(((cj3)*(new_r10))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst18)*((((((IkReal)(-1.00000000000000))*(new_r10)*(sj3)))+(((cj3)*(new_r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst18)*(((((new_r11)*(sj3)))+(((cj3)*(new_r10)))))), ((gconst18)*((((((IkReal)(-1.00000000000000))*(new_r10)*(sj3)))+(((cj3)*(new_r11)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x103=IKsin(j5);
IkReal x104=IKcos(j5);
IkReal x105=(((IkReal)(1.00000000000000))*(sj3));
IkReal x106=((cj3)*(x103));
IkReal x107=(((IkReal)(1.00000000000000))*(x104));
IkReal x108=((x104)*(x105));
evalcond[0]=((((new_r11)*(sj3)))+(x103)+(((cj3)*(new_r01))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x107)))+(((new_r10)*(sj3)))+(((cj3)*(new_r00))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x108)))+(new_r01)+(x106));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(cj3)*(x107)))+((((IkReal)(-1.00000000000000))*(x103)*(x105)))+(new_r00));
evalcond[4]=((((sj3)*(x103)))+(((cj3)*(x104)))+(new_r11));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x105)))+(((cj3)*(new_r10)))+(x103));
evalcond[6]=((((cj3)*(new_r11)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x105)))+(x104));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x108)))+(x106)+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst17)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*((((((IkReal)(-1.00000000000000))*(new_r01)*(sj3)))+(((cj3)*(new_r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst17)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01)))))), ((gconst17)*((((((IkReal)(-1.00000000000000))*(new_r01)*(sj3)))+(((cj3)*(new_r11)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x109=IKsin(j5);
IkReal x110=IKcos(j5);
IkReal x111=(((IkReal)(1.00000000000000))*(sj3));
IkReal x112=((cj3)*(x109));
IkReal x113=(((IkReal)(1.00000000000000))*(x110));
IkReal x114=((x110)*(x111));
evalcond[0]=((((new_r11)*(sj3)))+(x109)+(((cj3)*(new_r01))));
evalcond[1]=((((new_r10)*(sj3)))+((((IkReal)(-1.00000000000000))*(x113)))+(((cj3)*(new_r00))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x114)))+(new_r01)+(x112));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x109)*(x111)))+((((IkReal)(-1.00000000000000))*(cj3)*(x113)))+(new_r00));
evalcond[4]=((((cj3)*(x110)))+(((sj3)*(x109)))+(new_r11));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x111)))+(((cj3)*(new_r10)))+(x109));
evalcond[6]=((((cj3)*(new_r11)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x111)))+(x110));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x114)))+(x112)+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst3)*(new_r02))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(gconst3)*(new_r12))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst3)*(new_r02)), (((IkReal)(-1.00000000000000))*(gconst3)*(new_r12)));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
int ij3;
for(ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x115=IKsin(j3);
IkReal x116=IKcos(j3);
IkReal x117=(((IkReal)(1.00000000000000))*(sj4));
IkReal x118=((new_r12)*(x116));
IkReal x119=((sj4)*(x115));
IkReal x120=(((IkReal)(1.00000000000000))*(new_r02)*(x115));
evalcond[0]=((((sj4)*(x116)))+(new_r12));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x115)*(x117)))+(new_r02));
evalcond[2]=((((new_r12)*(x115)))+(((new_r02)*(x116))));
evalcond[3]=((sj4)+((((IkReal)(-1.00000000000000))*(x120)))+(x118));
evalcond[4]=((((new_r22)*(sj4)))+(((cj4)*(x118)))+((((IkReal)(-1.00000000000000))*(cj4)*(x120))));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(new_r10)*(x116)*(x117)))+(((cj4)*(new_r20)))+(((new_r00)*(x119))));
evalcond[6]=((((new_r01)*(x119)))+((((IkReal)(-1.00000000000000))*(new_r11)*(x116)*(x117)))+(((cj4)*(new_r21))));
evalcond[7]=(((IkReal)(-1.00000000000000))+(((cj4)*(new_r22)))+(((new_r02)*(x119)))+((((IkReal)(-1.00000000000000))*(x117)*(x118))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(sj4);
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj4;
dummyeval[1]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj3;
dummyeval[1]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[16];
IkReal x121=(((((IkReal)(-1.00000000000000))*(cj4)))+(new_r22));
IkReal x122=(((IkReal)(1.00000000000000))*(cj4));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j3)), (IkReal)(6.28318530717959))));
evalcond[1]=x121;
evalcond[2]=x121;
evalcond[3]=new_r12;
evalcond[4]=(((((IkReal)(-1.00000000000000))*(sj4)))+(new_r02));
evalcond[5]=new_r12;
evalcond[6]=new_r12;
evalcond[7]=((sj4)+((((IkReal)(-1.00000000000000))*(new_r02))));
evalcond[8]=((((new_r22)*(sj4)))+((((IkReal)(-1.00000000000000))*(new_r02)*(x122))));
evalcond[9]=((((new_r00)*(sj4)))+(((cj4)*(new_r20))));
evalcond[10]=((((new_r01)*(sj4)))+(((cj4)*(new_r21))));
evalcond[11]=(((IkReal)(-1.00000000000000))+(((cj4)*(new_r22)))+(((new_r02)*(sj4))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs((((IkReal)(-1.00000000000000))*(new_r11))) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r10) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r11)))+IKsqr(new_r10)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2((((IkReal)(-1.00000000000000))*(new_r11)), new_r10);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x123=IKsin(j5);
IkReal x124=IKcos(j5);
IkReal x125=(((IkReal)(1.00000000000000))*(cj4));
IkReal x126=(((IkReal)(1.00000000000000))*(x124));
IkReal x127=(((IkReal)(1.00000000000000))*(x123));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x127))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x126))));
evalcond[2]=((x123)+(new_r11));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x126)))+(new_r10));
evalcond[4]=((new_r01)+(((cj4)*(x124))));
evalcond[5]=((((cj4)*(x123)))+(new_r00));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x125)))+(((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(x127))));
evalcond[7]=((((new_r21)*(sj4)))+((((IkReal)(-1.00000000000000))*(x126)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x125))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x128=(((((IkReal)(-1.00000000000000))*(cj4)))+(new_r22));
IkReal x129=((sj4)+(new_r02));
IkReal x130=(((IkReal)(1.00000000000000))*(sj4));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j3)), (IkReal)(6.28318530717959))));
evalcond[1]=x128;
evalcond[2]=x128;
evalcond[3]=new_r12;
evalcond[4]=x129;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x129;
evalcond[7]=((((new_r22)*(sj4)))+(((cj4)*(new_r02))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x130)))+(((cj4)*(new_r20))));
evalcond[9]=((((cj4)*(new_r21)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x130))));
evalcond[10]=(((IkReal)(-1.00000000000000))+(((cj4)*(new_r22)))+((((IkReal)(-1.00000000000000))*(new_r02)*(x130))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(sj4);
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[15];
IkReal x131=(((IkReal)(1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r12;
evalcond[4]=x131;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x131;
evalcond[7]=new_r01;
evalcond[8]=new_r00;
evalcond[9]=new_r00;
evalcond[10]=new_r01;
evalcond[11]=new_r22;
evalcond[12]=(((IkReal)(-1.00000000000000))*(new_r00));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r01));
evalcond[14]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r02))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r20) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r21) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r20)+IKsqr(new_r21)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r20, new_r21);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x132=IKsin(j5);
IkReal x133=(((IkReal)(1.00000000000000))*(IKcos(j5)));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x132)))+(new_r20));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x133))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x132));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(new_r10)))+((((IkReal)(-1.00000000000000))*(x133))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x134=(((IkReal)(1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r12;
evalcond[4]=x134;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x134;
evalcond[7]=new_r01;
evalcond[8]=new_r00;
evalcond[9]=new_r00;
evalcond[10]=new_r01;
evalcond[11]=new_r22;
evalcond[12]=(((IkReal)(-1.00000000000000))*(new_r00));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r01));
evalcond[14]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r02))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r20) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r21) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r20)+IKsqr(new_r21)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r20, new_r21);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x135=IKsin(j5);
IkReal x136=(((IkReal)(1.00000000000000))*(IKcos(j5)));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x135)))+(new_r20));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x136))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x135));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x136)))+((((IkReal)(-1.00000000000000))*(new_r10))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x137=(((IkReal)(-1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r12;
evalcond[4]=x137;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x137;
evalcond[7]=new_r01;
evalcond[8]=new_r00;
evalcond[9]=new_r00;
evalcond[10]=new_r01;
evalcond[11]=(((IkReal)(-1.00000000000000))*(new_r22));
evalcond[12]=new_r00;
evalcond[13]=new_r01;
evalcond[14]=x137;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr((((IkReal)(-1.00000000000000))*(new_r21)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r11, (((IkReal)(-1.00000000000000))*(new_r21)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x138=IKsin(j5);
IkReal x139=IKcos(j5);
evalcond[0]=((new_r20)+(x138));
evalcond[1]=((new_r21)+(x139));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x138));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(new_r10)))+((((IkReal)(-1.00000000000000))*(x139))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x140=(((IkReal)(-1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r12;
evalcond[4]=x140;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x140;
evalcond[7]=new_r01;
evalcond[8]=new_r00;
evalcond[9]=new_r00;
evalcond[10]=new_r01;
evalcond[11]=(((IkReal)(-1.00000000000000))*(new_r22));
evalcond[12]=new_r00;
evalcond[13]=new_r01;
evalcond[14]=x140;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr((((IkReal)(-1.00000000000000))*(new_r21)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r11, (((IkReal)(-1.00000000000000))*(new_r21)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x141=IKsin(j5);
IkReal x142=IKcos(j5);
evalcond[0]=((new_r20)+(x141));
evalcond[1]=((new_r21)+(x142));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x141));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x142)))+((((IkReal)(-1.00000000000000))*(new_r10))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs(((new_r01)*(((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr(((new_r01)*(((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r11, ((new_r01)*(((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x143=IKsin(j5);
IkReal x144=IKcos(j5);
IkReal x145=(((IkReal)(1.00000000000000))*(cj4));
IkReal x146=(((IkReal)(1.00000000000000))*(x144));
IkReal x147=(((IkReal)(1.00000000000000))*(x143));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x147))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(sj4)*(x146)))+(new_r21));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x143));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x146)))+((((IkReal)(-1.00000000000000))*(new_r10))));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(x144)*(x145)))+(new_r01));
evalcond[5]=((new_r00)+((((IkReal)(-1.00000000000000))*(x143)*(x145))));
evalcond[6]=((((new_r20)*(sj4)))+(((cj4)*(new_r00)))+((((IkReal)(-1.00000000000000))*(x147))));
evalcond[7]=((((new_r21)*(sj4)))+((((IkReal)(-1.00000000000000))*(x146)))+(((cj4)*(new_r01))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs(((new_r21)*(((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr(((new_r21)*(((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r11, ((new_r21)*(((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x148=IKsin(j5);
IkReal x149=IKcos(j5);
IkReal x150=(((IkReal)(1.00000000000000))*(cj4));
IkReal x151=(((IkReal)(1.00000000000000))*(x149));
IkReal x152=(((IkReal)(1.00000000000000))*(x148));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x152))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x151))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x148));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x151)))+((((IkReal)(-1.00000000000000))*(new_r10))));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(x149)*(x150)))+(new_r01));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(x148)*(x150)))+(new_r00));
evalcond[6]=((((new_r20)*(sj4)))+(((cj4)*(new_r00)))+((((IkReal)(-1.00000000000000))*(x152))));
evalcond[7]=((((new_r21)*(sj4)))+(((cj4)*(new_r01)))+((((IkReal)(-1.00000000000000))*(x151))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst6)*(new_r20))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(new_r21))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst6)*(new_r20)), ((gconst6)*(new_r21)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x153=IKsin(j5);
IkReal x154=IKcos(j5);
IkReal x155=(((IkReal)(1.00000000000000))*(cj4));
IkReal x156=(((IkReal)(1.00000000000000))*(x154));
IkReal x157=(((IkReal)(1.00000000000000))*(x153));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x157))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x156))));
evalcond[2]=((x153)+((((IkReal)(-1.00000000000000))*(new_r11))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x156)))+((((IkReal)(-1.00000000000000))*(new_r10))));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(x154)*(x155)))+(new_r01));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(x153)*(x155)))+(new_r00));
evalcond[6]=((((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(x157)))+(((cj4)*(new_r00))));
evalcond[7]=((((new_r21)*(sj4)))+((((IkReal)(-1.00000000000000))*(x156)))+(((cj4)*(new_r01))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
IkReal x158=(((IkReal)(-1.00000000000000))+(new_r22));
IkReal x159=((((new_r12)*(sj3)))+(((cj3)*(new_r02))));
IkReal x160=((((cj3)*(new_r12)))+((((IkReal)(-1.00000000000000))*(new_r02)*(sj3))));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959))));
evalcond[1]=x158;
evalcond[2]=x158;
evalcond[3]=new_r12;
evalcond[4]=new_r02;
evalcond[5]=new_r20;
evalcond[6]=new_r21;
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=x159;
evalcond[10]=x159;
evalcond[11]=x160;
evalcond[12]=x160;
evalcond[13]=new_r20;
evalcond[14]=new_r21;
evalcond[15]=x158;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  && IKabs(evalcond[15]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst8)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*((((((IkReal)(-1.00000000000000))*(cj3)*(new_r11)))+(((new_r01)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst8)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01)))))), ((gconst8)*((((((IkReal)(-1.00000000000000))*(cj3)*(new_r11)))+(((new_r01)*(sj3)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x161=IKsin(j5);
IkReal x162=IKcos(j5);
IkReal x163=(((IkReal)(1.00000000000000))*(sj3));
IkReal x164=((sj3)*(x161));
IkReal x165=(((IkReal)(1.00000000000000))*(x162));
IkReal x166=(((IkReal)(1.00000000000000))*(x161));
IkReal x167=((cj3)*(x165));
evalcond[0]=((((new_r11)*(sj3)))+(x161)+(((cj3)*(new_r01))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x165)))+(((new_r10)*(sj3)))+(((cj3)*(new_r00))));
evalcond[2]=((((sj3)*(x162)))+(((cj3)*(x161)))+(new_r01));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x167)))+(x164)+(new_r00));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(x167)))+(x164)+(new_r11));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(x166)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x163)))+(((cj3)*(new_r10))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(x165)))+(((cj3)*(new_r11)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x163))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(cj3)*(x166)))+((((IkReal)(-1.00000000000000))*(x162)*(x163)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst7)*(((((new_r00)*(sj3)))+(((cj3)*(new_r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*((((((IkReal)(-1.00000000000000))*(cj3)*(new_r00)))+(((new_r01)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst7)*(((((new_r00)*(sj3)))+(((cj3)*(new_r01)))))), ((gconst7)*((((((IkReal)(-1.00000000000000))*(cj3)*(new_r00)))+(((new_r01)*(sj3)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x168=IKsin(j5);
IkReal x169=IKcos(j5);
IkReal x170=(((IkReal)(1.00000000000000))*(sj3));
IkReal x171=((sj3)*(x168));
IkReal x172=(((IkReal)(1.00000000000000))*(x169));
IkReal x173=(((IkReal)(1.00000000000000))*(x168));
IkReal x174=((cj3)*(x172));
evalcond[0]=((((new_r11)*(sj3)))+(x168)+(((cj3)*(new_r01))));
evalcond[1]=((((new_r10)*(sj3)))+((((IkReal)(-1.00000000000000))*(x172)))+(((cj3)*(new_r00))));
evalcond[2]=((((cj3)*(x168)))+(((sj3)*(x169)))+(new_r01));
evalcond[3]=((x171)+(new_r00)+((((IkReal)(-1.00000000000000))*(x174))));
evalcond[4]=((x171)+((((IkReal)(-1.00000000000000))*(x174)))+(new_r11));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x170)))+((((IkReal)(-1.00000000000000))*(x173)))+(((cj3)*(new_r10))));
evalcond[6]=((((cj3)*(new_r11)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x170)))+((((IkReal)(-1.00000000000000))*(x172))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(cj3)*(x173)))+((((IkReal)(-1.00000000000000))*(x169)*(x170)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
IkReal x175=(((IkReal)(1.00000000000000))+(new_r22));
IkReal x176=((cj3)*(new_r12));
IkReal x177=((new_r02)*(sj3));
IkReal x178=((((new_r12)*(sj3)))+(((cj3)*(new_r02))));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959))));
evalcond[1]=x175;
evalcond[2]=x175;
evalcond[3]=new_r12;
evalcond[4]=new_r02;
evalcond[5]=new_r20;
evalcond[6]=new_r21;
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=x178;
evalcond[10]=x178;
evalcond[11]=((x176)+((((IkReal)(-1.00000000000000))*(x177))));
evalcond[12]=((x177)+((((IkReal)(-1.00000000000000))*(x176))));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r20));
evalcond[14]=(((IkReal)(-1.00000000000000))*(new_r21));
evalcond[15]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  && IKabs(evalcond[15]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst10)*(((((new_r11)*(sj3)))+(((cj3)*(new_r10))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*((((((IkReal)(-1.00000000000000))*(new_r10)*(sj3)))+(((cj3)*(new_r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst10)*(((((new_r11)*(sj3)))+(((cj3)*(new_r10)))))), ((gconst10)*((((((IkReal)(-1.00000000000000))*(new_r10)*(sj3)))+(((cj3)*(new_r11)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x179=IKsin(j5);
IkReal x180=IKcos(j5);
IkReal x181=(((IkReal)(1.00000000000000))*(sj3));
IkReal x182=((cj3)*(x179));
IkReal x183=(((IkReal)(1.00000000000000))*(x180));
IkReal x184=((x180)*(x181));
evalcond[0]=((x179)+(((new_r11)*(sj3)))+(((cj3)*(new_r01))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x183)))+(((new_r10)*(sj3)))+(((cj3)*(new_r00))));
evalcond[2]=((x182)+((((IkReal)(-1.00000000000000))*(x184)))+(new_r01));
evalcond[3]=((new_r00)+((((IkReal)(-1.00000000000000))*(x179)*(x181)))+((((IkReal)(-1.00000000000000))*(cj3)*(x183))));
evalcond[4]=((((sj3)*(x179)))+(((cj3)*(x180)))+(new_r11));
evalcond[5]=((x179)+((((IkReal)(-1.00000000000000))*(new_r00)*(x181)))+(((cj3)*(new_r10))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(new_r01)*(x181)))+(((cj3)*(new_r11)))+(x180));
evalcond[7]=((x182)+((((IkReal)(-1.00000000000000))*(x184)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst9)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*((((((IkReal)(-1.00000000000000))*(new_r01)*(sj3)))+(((cj3)*(new_r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst9)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01)))))), ((gconst9)*((((((IkReal)(-1.00000000000000))*(new_r01)*(sj3)))+(((cj3)*(new_r11)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x185=IKsin(j5);
IkReal x186=IKcos(j5);
IkReal x187=(((IkReal)(1.00000000000000))*(sj3));
IkReal x188=((cj3)*(x185));
IkReal x189=(((IkReal)(1.00000000000000))*(x186));
IkReal x190=((x186)*(x187));
evalcond[0]=((((new_r11)*(sj3)))+(x185)+(((cj3)*(new_r01))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x189)))+(((new_r10)*(sj3)))+(((cj3)*(new_r00))));
evalcond[2]=((x188)+(new_r01)+((((IkReal)(-1.00000000000000))*(x190))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x185)*(x187)))+(new_r00)+((((IkReal)(-1.00000000000000))*(cj3)*(x189))));
evalcond[4]=((((cj3)*(x186)))+(((sj3)*(x185)))+(new_r11));
evalcond[5]=((x185)+(((cj3)*(new_r10)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x187))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(new_r01)*(x187)))+(((cj3)*(new_r11)))+(x186));
evalcond[7]=((x188)+((((IkReal)(-1.00000000000000))*(x190)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x191=((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30);
if( IKabs(((x191)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(cj4)*(new_r21)*(sj3)))+((((IkReal)(-1.00000000000000))*(new_r01)*(sj4))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((new_r21)*(x191))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x191)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(cj4)*(new_r21)*(sj3)))+((((IkReal)(-1.00000000000000))*(new_r01)*(sj4)))))))+IKsqr(((new_r21)*(x191)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x191)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(cj4)*(new_r21)*(sj3)))+((((IkReal)(-1.00000000000000))*(new_r01)*(sj4)))))), ((new_r21)*(x191)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[12];
IkReal x192=IKsin(j5);
IkReal x193=IKcos(j5);
IkReal x194=((cj4)*(sj3));
IkReal x195=((cj3)*(new_r10));
IkReal x196=(((IkReal)(1.00000000000000))*(new_r01));
IkReal x197=((cj3)*(new_r11));
IkReal x198=(((IkReal)(1.00000000000000))*(new_r00));
IkReal x199=(((IkReal)(1.00000000000000))*(x193));
IkReal x200=((cj4)*(x192));
IkReal x201=(((IkReal)(1.00000000000000))*(x192));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x201))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(sj4)*(x199)))+(new_r21));
evalcond[2]=((((new_r11)*(sj3)))+(x192)+(((cj3)*(new_r01))));
evalcond[3]=((((new_r10)*(sj3)))+((((IkReal)(-1.00000000000000))*(x199)))+(((cj3)*(new_r00))));
evalcond[4]=((((x193)*(x194)))+(new_r01)+(((cj3)*(x192))));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(cj3)*(x199)))+(((x192)*(x194)))+(new_r00));
evalcond[6]=((((sj3)*(x192)))+((((IkReal)(-1.00000000000000))*(cj3)*(cj4)*(x199)))+(new_r11));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(sj3)*(x198)))+(x195)+((((IkReal)(-1.00000000000000))*(x200))));
evalcond[8]=((x197)+((((IkReal)(-1.00000000000000))*(cj4)*(x199)))+((((IkReal)(-1.00000000000000))*(sj3)*(x196))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(sj3)*(x199)))+((((IkReal)(-1.00000000000000))*(cj3)*(x200)))+(new_r10));
evalcond[10]=((((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(x194)*(x198)))+(((cj4)*(x195)))+((((IkReal)(-1.00000000000000))*(x201))));
evalcond[11]=((((new_r21)*(sj4)))+(((cj4)*(x197)))+((((IkReal)(-1.00000000000000))*(x199)))+((((IkReal)(-1.00000000000000))*(x194)*(x196))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x202=((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30);
if( IKabs(((new_r20)*(x202))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x202)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((new_r00)*(sj4)))+(((cj4)*(new_r20)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((new_r20)*(x202)))+IKsqr(((x202)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((new_r00)*(sj4)))+(((cj4)*(new_r20)*(sj3)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((new_r20)*(x202)), ((x202)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((new_r00)*(sj4)))+(((cj4)*(new_r20)*(sj3)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[12];
IkReal x203=IKsin(j5);
IkReal x204=IKcos(j5);
IkReal x205=((cj4)*(sj3));
IkReal x206=((cj3)*(new_r10));
IkReal x207=(((IkReal)(1.00000000000000))*(new_r01));
IkReal x208=((cj3)*(new_r11));
IkReal x209=(((IkReal)(1.00000000000000))*(new_r00));
IkReal x210=(((IkReal)(1.00000000000000))*(x204));
IkReal x211=((cj4)*(x203));
IkReal x212=(((IkReal)(1.00000000000000))*(x203));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x212))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(sj4)*(x210)))+(new_r21));
evalcond[2]=((((new_r11)*(sj3)))+(x203)+(((cj3)*(new_r01))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x210)))+(((new_r10)*(sj3)))+(((cj3)*(new_r00))));
evalcond[4]=((((cj3)*(x203)))+(((x204)*(x205)))+(new_r01));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(cj3)*(x210)))+(new_r00)+(((x203)*(x205))));
evalcond[6]=((((sj3)*(x203)))+((((IkReal)(-1.00000000000000))*(cj3)*(cj4)*(x210)))+(new_r11));
evalcond[7]=((x206)+((((IkReal)(-1.00000000000000))*(sj3)*(x209)))+((((IkReal)(-1.00000000000000))*(x211))));
evalcond[8]=((x208)+((((IkReal)(-1.00000000000000))*(cj4)*(x210)))+((((IkReal)(-1.00000000000000))*(sj3)*(x207))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(sj3)*(x210)))+((((IkReal)(-1.00000000000000))*(cj3)*(x211)))+(new_r10));
evalcond[10]=((((cj4)*(x206)))+((((IkReal)(-1.00000000000000))*(x205)*(x209)))+(((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(x212))));
evalcond[11]=((((new_r21)*(sj4)))+((((IkReal)(-1.00000000000000))*(x210)))+((((IkReal)(-1.00000000000000))*(x205)*(x207)))+(((cj4)*(x208))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst5)*(new_r20))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(new_r21))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst5)*(new_r20)), ((gconst5)*(new_r21)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[12];
IkReal x213=IKsin(j5);
IkReal x214=IKcos(j5);
IkReal x215=((cj4)*(sj3));
IkReal x216=((cj3)*(new_r10));
IkReal x217=(((IkReal)(1.00000000000000))*(new_r01));
IkReal x218=((cj3)*(new_r11));
IkReal x219=(((IkReal)(1.00000000000000))*(new_r00));
IkReal x220=(((IkReal)(1.00000000000000))*(x214));
IkReal x221=((cj4)*(x213));
IkReal x222=(((IkReal)(1.00000000000000))*(x213));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x222))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x220))));
evalcond[2]=((x213)+(((new_r11)*(sj3)))+(((cj3)*(new_r01))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x220)))+(((new_r10)*(sj3)))+(((cj3)*(new_r00))));
evalcond[4]=((((cj3)*(x213)))+(new_r01)+(((x214)*(x215))));
evalcond[5]=((((x213)*(x215)))+(new_r00)+((((IkReal)(-1.00000000000000))*(cj3)*(x220))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(cj3)*(cj4)*(x220)))+(new_r11)+(((sj3)*(x213))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x221)))+(x216)+((((IkReal)(-1.00000000000000))*(sj3)*(x219))));
evalcond[8]=((x218)+((((IkReal)(-1.00000000000000))*(sj3)*(x217)))+((((IkReal)(-1.00000000000000))*(cj4)*(x220))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(cj3)*(x221)))+(new_r10)+((((IkReal)(-1.00000000000000))*(sj3)*(x220))));
evalcond[10]=(((((IkReal)(-1.00000000000000))*(x215)*(x219)))+(((new_r20)*(sj4)))+(((cj4)*(x216)))+((((IkReal)(-1.00000000000000))*(x222))));
evalcond[11]=(((((IkReal)(-1.00000000000000))*(x220)))+((((IkReal)(-1.00000000000000))*(x215)*(x217)))+(((new_r21)*(sj4)))+(((cj4)*(x218))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst2)*(new_r02))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(gconst2)*(new_r12))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst2)*(new_r02)), (((IkReal)(-1.00000000000000))*(gconst2)*(new_r12)));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
int ij3;
for(ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x223=IKsin(j3);
IkReal x224=IKcos(j3);
IkReal x225=(((IkReal)(1.00000000000000))*(sj4));
IkReal x226=((new_r12)*(x224));
IkReal x227=((sj4)*(x223));
IkReal x228=(((IkReal)(1.00000000000000))*(new_r02)*(x223));
evalcond[0]=((((sj4)*(x224)))+(new_r12));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x223)*(x225)))+(new_r02));
evalcond[2]=((((new_r12)*(x223)))+(((new_r02)*(x224))));
evalcond[3]=((sj4)+(x226)+((((IkReal)(-1.00000000000000))*(x228))));
evalcond[4]=((((new_r22)*(sj4)))+(((cj4)*(x226)))+((((IkReal)(-1.00000000000000))*(cj4)*(x228))));
evalcond[5]=((((new_r00)*(x227)))+((((IkReal)(-1.00000000000000))*(new_r10)*(x224)*(x225)))+(((cj4)*(new_r20))));
evalcond[6]=((((new_r01)*(x227)))+(((cj4)*(new_r21)))+((((IkReal)(-1.00000000000000))*(new_r11)*(x224)*(x225))));
evalcond[7]=(((IkReal)(-1.00000000000000))+(((cj4)*(new_r22)))+((((IkReal)(-1.00000000000000))*(x225)*(x226)))+(((new_r02)*(x227))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(sj4);
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj4;
dummyeval[1]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj3;
dummyeval[1]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[16];
IkReal x229=(((((IkReal)(-1.00000000000000))*(cj4)))+(new_r22));
IkReal x230=(((IkReal)(1.00000000000000))*(cj4));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j3)), (IkReal)(6.28318530717959))));
evalcond[1]=x229;
evalcond[2]=x229;
evalcond[3]=new_r12;
evalcond[4]=(((((IkReal)(-1.00000000000000))*(sj4)))+(new_r02));
evalcond[5]=new_r12;
evalcond[6]=new_r12;
evalcond[7]=((sj4)+((((IkReal)(-1.00000000000000))*(new_r02))));
evalcond[8]=((((new_r22)*(sj4)))+((((IkReal)(-1.00000000000000))*(new_r02)*(x230))));
evalcond[9]=((((new_r00)*(sj4)))+(((cj4)*(new_r20))));
evalcond[10]=((((new_r01)*(sj4)))+(((cj4)*(new_r21))));
evalcond[11]=(((IkReal)(-1.00000000000000))+(((cj4)*(new_r22)))+(((new_r02)*(sj4))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs((((IkReal)(-1.00000000000000))*(new_r11))) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r10) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r11)))+IKsqr(new_r10)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2((((IkReal)(-1.00000000000000))*(new_r11)), new_r10);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x231=IKsin(j5);
IkReal x232=IKcos(j5);
IkReal x233=(((IkReal)(1.00000000000000))*(cj4));
IkReal x234=(((IkReal)(1.00000000000000))*(x232));
IkReal x235=(((IkReal)(1.00000000000000))*(x231));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x235))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(sj4)*(x234)))+(new_r21));
evalcond[2]=((x231)+(new_r11));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x234)))+(new_r10));
evalcond[4]=((((cj4)*(x232)))+(new_r01));
evalcond[5]=((new_r00)+(((cj4)*(x231))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(x235)))+(((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x233))));
evalcond[7]=((((new_r21)*(sj4)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x233)))+((((IkReal)(-1.00000000000000))*(x234))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x236=(((((IkReal)(-1.00000000000000))*(cj4)))+(new_r22));
IkReal x237=((sj4)+(new_r02));
IkReal x238=(((IkReal)(1.00000000000000))*(sj4));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j3)), (IkReal)(6.28318530717959))));
evalcond[1]=x236;
evalcond[2]=x236;
evalcond[3]=new_r12;
evalcond[4]=x237;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x237;
evalcond[7]=((((new_r22)*(sj4)))+(((cj4)*(new_r02))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x238)))+(((cj4)*(new_r20))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(new_r01)*(x238)))+(((cj4)*(new_r21))));
evalcond[10]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r02)*(x238)))+(((cj4)*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(sj4);
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[15];
IkReal x239=(((IkReal)(1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r12;
evalcond[4]=x239;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x239;
evalcond[7]=new_r01;
evalcond[8]=new_r00;
evalcond[9]=new_r00;
evalcond[10]=new_r01;
evalcond[11]=new_r22;
evalcond[12]=(((IkReal)(-1.00000000000000))*(new_r00));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r01));
evalcond[14]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r02))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r20) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r21) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r20)+IKsqr(new_r21)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r20, new_r21);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x240=IKsin(j5);
IkReal x241=(((IkReal)(1.00000000000000))*(IKcos(j5)));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(x240))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x241))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x240));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x241)))+((((IkReal)(-1.00000000000000))*(new_r10))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x242=(((IkReal)(1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r12;
evalcond[4]=x242;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x242;
evalcond[7]=new_r01;
evalcond[8]=new_r00;
evalcond[9]=new_r00;
evalcond[10]=new_r01;
evalcond[11]=new_r22;
evalcond[12]=(((IkReal)(-1.00000000000000))*(new_r00));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r01));
evalcond[14]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r02))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r20) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r21) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r20)+IKsqr(new_r21)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r20, new_r21);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x243=IKsin(j5);
IkReal x244=(((IkReal)(1.00000000000000))*(IKcos(j5)));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x243)))+(new_r20));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x244)))+(new_r21));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x243));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x244)))+((((IkReal)(-1.00000000000000))*(new_r10))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x245=(((IkReal)(-1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r12;
evalcond[4]=x245;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x245;
evalcond[7]=new_r01;
evalcond[8]=new_r00;
evalcond[9]=new_r00;
evalcond[10]=new_r01;
evalcond[11]=(((IkReal)(-1.00000000000000))*(new_r22));
evalcond[12]=new_r00;
evalcond[13]=new_r01;
evalcond[14]=x245;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr((((IkReal)(-1.00000000000000))*(new_r21)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r11, (((IkReal)(-1.00000000000000))*(new_r21)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x246=IKsin(j5);
IkReal x247=IKcos(j5);
evalcond[0]=((new_r20)+(x246));
evalcond[1]=((new_r21)+(x247));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x246));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x247)))+((((IkReal)(-1.00000000000000))*(new_r10))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x248=(((IkReal)(-1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r12;
evalcond[4]=x248;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x248;
evalcond[7]=new_r01;
evalcond[8]=new_r00;
evalcond[9]=new_r00;
evalcond[10]=new_r01;
evalcond[11]=(((IkReal)(-1.00000000000000))*(new_r22));
evalcond[12]=new_r00;
evalcond[13]=new_r01;
evalcond[14]=x248;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr((((IkReal)(-1.00000000000000))*(new_r21)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r11, (((IkReal)(-1.00000000000000))*(new_r21)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x249=IKsin(j5);
IkReal x250=IKcos(j5);
evalcond[0]=((new_r20)+(x249));
evalcond[1]=((new_r21)+(x250));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x249));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x250)))+((((IkReal)(-1.00000000000000))*(new_r10))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs(((new_r01)*(((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr(((new_r01)*(((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r11, ((new_r01)*(((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x251=IKsin(j5);
IkReal x252=IKcos(j5);
IkReal x253=(((IkReal)(1.00000000000000))*(cj4));
IkReal x254=(((IkReal)(1.00000000000000))*(x252));
IkReal x255=(((IkReal)(1.00000000000000))*(x251));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x255))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(sj4)*(x254)))+(new_r21));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x251));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x254)))+((((IkReal)(-1.00000000000000))*(new_r10))));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(x252)*(x253)))+(new_r01));
evalcond[5]=((new_r00)+((((IkReal)(-1.00000000000000))*(x251)*(x253))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(x255)))+(((new_r20)*(sj4)))+(((cj4)*(new_r00))));
evalcond[7]=((((new_r21)*(sj4)))+((((IkReal)(-1.00000000000000))*(x254)))+(((cj4)*(new_r01))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs(((new_r21)*(((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr(((new_r21)*(((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r11, ((new_r21)*(((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x256=IKsin(j5);
IkReal x257=IKcos(j5);
IkReal x258=(((IkReal)(1.00000000000000))*(cj4));
IkReal x259=(((IkReal)(1.00000000000000))*(x257));
IkReal x260=(((IkReal)(1.00000000000000))*(x256));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x260))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x259))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x256));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x259)))+((((IkReal)(-1.00000000000000))*(new_r10))));
evalcond[4]=((new_r01)+((((IkReal)(-1.00000000000000))*(x257)*(x258))));
evalcond[5]=((new_r00)+((((IkReal)(-1.00000000000000))*(x256)*(x258))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(x260)))+(((new_r20)*(sj4)))+(((cj4)*(new_r00))));
evalcond[7]=((((new_r21)*(sj4)))+(((cj4)*(new_r01)))+((((IkReal)(-1.00000000000000))*(x259))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst6)*(new_r20))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(new_r21))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst6)*(new_r20)), ((gconst6)*(new_r21)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x261=IKsin(j5);
IkReal x262=IKcos(j5);
IkReal x263=(((IkReal)(1.00000000000000))*(cj4));
IkReal x264=(((IkReal)(1.00000000000000))*(x262));
IkReal x265=(((IkReal)(1.00000000000000))*(x261));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x265))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x264))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x261));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x264)))+((((IkReal)(-1.00000000000000))*(new_r10))));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(x262)*(x263)))+(new_r01));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(x261)*(x263)))+(new_r00));
evalcond[6]=((((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(x265)))+(((cj4)*(new_r00))));
evalcond[7]=((((new_r21)*(sj4)))+(((cj4)*(new_r01)))+((((IkReal)(-1.00000000000000))*(x264))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
IkReal x266=(((IkReal)(-1.00000000000000))+(new_r22));
IkReal x267=((((new_r12)*(sj3)))+(((cj3)*(new_r02))));
IkReal x268=((((cj3)*(new_r12)))+((((IkReal)(-1.00000000000000))*(new_r02)*(sj3))));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959))));
evalcond[1]=x266;
evalcond[2]=x266;
evalcond[3]=new_r12;
evalcond[4]=new_r02;
evalcond[5]=new_r20;
evalcond[6]=new_r21;
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=x267;
evalcond[10]=x267;
evalcond[11]=x268;
evalcond[12]=x268;
evalcond[13]=new_r20;
evalcond[14]=new_r21;
evalcond[15]=x266;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  && IKabs(evalcond[15]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst8)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*((((((IkReal)(-1.00000000000000))*(cj3)*(new_r11)))+(((new_r01)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst8)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01)))))), ((gconst8)*((((((IkReal)(-1.00000000000000))*(cj3)*(new_r11)))+(((new_r01)*(sj3)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x269=IKsin(j5);
IkReal x270=IKcos(j5);
IkReal x271=(((IkReal)(1.00000000000000))*(sj3));
IkReal x272=((sj3)*(x269));
IkReal x273=(((IkReal)(1.00000000000000))*(x270));
IkReal x274=(((IkReal)(1.00000000000000))*(x269));
IkReal x275=((cj3)*(x273));
evalcond[0]=((((new_r11)*(sj3)))+(x269)+(((cj3)*(new_r01))));
evalcond[1]=((((new_r10)*(sj3)))+((((IkReal)(-1.00000000000000))*(x273)))+(((cj3)*(new_r00))));
evalcond[2]=((((sj3)*(x270)))+(((cj3)*(x269)))+(new_r01));
evalcond[3]=((x272)+(new_r00)+((((IkReal)(-1.00000000000000))*(x275))));
evalcond[4]=((x272)+((((IkReal)(-1.00000000000000))*(x275)))+(new_r11));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x271)))+((((IkReal)(-1.00000000000000))*(x274)))+(((cj3)*(new_r10))));
evalcond[6]=((((cj3)*(new_r11)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x271)))+((((IkReal)(-1.00000000000000))*(x273))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x270)*(x271)))+((((IkReal)(-1.00000000000000))*(cj3)*(x274)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst7)*(((((new_r00)*(sj3)))+(((cj3)*(new_r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*((((((IkReal)(-1.00000000000000))*(cj3)*(new_r00)))+(((new_r01)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst7)*(((((new_r00)*(sj3)))+(((cj3)*(new_r01)))))), ((gconst7)*((((((IkReal)(-1.00000000000000))*(cj3)*(new_r00)))+(((new_r01)*(sj3)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x276=IKsin(j5);
IkReal x277=IKcos(j5);
IkReal x278=(((IkReal)(1.00000000000000))*(sj3));
IkReal x279=((sj3)*(x276));
IkReal x280=(((IkReal)(1.00000000000000))*(x277));
IkReal x281=(((IkReal)(1.00000000000000))*(x276));
IkReal x282=((cj3)*(x280));
evalcond[0]=((((new_r11)*(sj3)))+(x276)+(((cj3)*(new_r01))));
evalcond[1]=((((new_r10)*(sj3)))+((((IkReal)(-1.00000000000000))*(x280)))+(((cj3)*(new_r00))));
evalcond[2]=((((cj3)*(x276)))+(((sj3)*(x277)))+(new_r01));
evalcond[3]=((x279)+(new_r00)+((((IkReal)(-1.00000000000000))*(x282))));
evalcond[4]=((x279)+((((IkReal)(-1.00000000000000))*(x282)))+(new_r11));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x278)))+(((cj3)*(new_r10)))+((((IkReal)(-1.00000000000000))*(x281))));
evalcond[6]=((((cj3)*(new_r11)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x278)))+((((IkReal)(-1.00000000000000))*(x280))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x277)*(x278)))+((((IkReal)(-1.00000000000000))*(cj3)*(x281)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
IkReal x283=(((IkReal)(1.00000000000000))+(new_r22));
IkReal x284=((cj3)*(new_r12));
IkReal x285=((new_r02)*(sj3));
IkReal x286=((((new_r12)*(sj3)))+(((cj3)*(new_r02))));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959))));
evalcond[1]=x283;
evalcond[2]=x283;
evalcond[3]=new_r12;
evalcond[4]=new_r02;
evalcond[5]=new_r20;
evalcond[6]=new_r21;
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=x286;
evalcond[10]=x286;
evalcond[11]=(((((IkReal)(-1.00000000000000))*(x285)))+(x284));
evalcond[12]=((x285)+((((IkReal)(-1.00000000000000))*(x284))));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r20));
evalcond[14]=(((IkReal)(-1.00000000000000))*(new_r21));
evalcond[15]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  && IKabs(evalcond[15]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst10)*(((((new_r11)*(sj3)))+(((cj3)*(new_r10))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*((((((IkReal)(-1.00000000000000))*(new_r10)*(sj3)))+(((cj3)*(new_r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst10)*(((((new_r11)*(sj3)))+(((cj3)*(new_r10)))))), ((gconst10)*((((((IkReal)(-1.00000000000000))*(new_r10)*(sj3)))+(((cj3)*(new_r11)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x287=IKsin(j5);
IkReal x288=IKcos(j5);
IkReal x289=(((IkReal)(1.00000000000000))*(sj3));
IkReal x290=((cj3)*(x287));
IkReal x291=(((IkReal)(1.00000000000000))*(x288));
IkReal x292=((x288)*(x289));
evalcond[0]=((x287)+(((new_r11)*(sj3)))+(((cj3)*(new_r01))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x291)))+(((new_r10)*(sj3)))+(((cj3)*(new_r00))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x292)))+(x290)+(new_r01));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x287)*(x289)))+((((IkReal)(-1.00000000000000))*(cj3)*(x291)))+(new_r00));
evalcond[4]=((((cj3)*(x288)))+(((sj3)*(x287)))+(new_r11));
evalcond[5]=((x287)+((((IkReal)(-1.00000000000000))*(new_r00)*(x289)))+(((cj3)*(new_r10))));
evalcond[6]=((x288)+(((cj3)*(new_r11)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x289))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x292)))+(x290)+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst9)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*((((((IkReal)(-1.00000000000000))*(new_r01)*(sj3)))+(((cj3)*(new_r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst9)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01)))))), ((gconst9)*((((((IkReal)(-1.00000000000000))*(new_r01)*(sj3)))+(((cj3)*(new_r11)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x293=IKsin(j5);
IkReal x294=IKcos(j5);
IkReal x295=(((IkReal)(1.00000000000000))*(sj3));
IkReal x296=((cj3)*(x293));
IkReal x297=(((IkReal)(1.00000000000000))*(x294));
IkReal x298=((x294)*(x295));
evalcond[0]=((((new_r11)*(sj3)))+(x293)+(((cj3)*(new_r01))));
evalcond[1]=((((new_r10)*(sj3)))+((((IkReal)(-1.00000000000000))*(x297)))+(((cj3)*(new_r00))));
evalcond[2]=((x296)+((((IkReal)(-1.00000000000000))*(x298)))+(new_r01));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(cj3)*(x297)))+(new_r00)+((((IkReal)(-1.00000000000000))*(x293)*(x295))));
evalcond[4]=((((cj3)*(x294)))+(((sj3)*(x293)))+(new_r11));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x295)))+(x293)+(((cj3)*(new_r10))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(new_r01)*(x295)))+(((cj3)*(new_r11)))+(x294));
evalcond[7]=((x296)+((((IkReal)(-1.00000000000000))*(x298)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x299=((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30);
if( IKabs(((x299)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(cj4)*(new_r21)*(sj3)))+((((IkReal)(-1.00000000000000))*(new_r01)*(sj4))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((new_r21)*(x299))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x299)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(cj4)*(new_r21)*(sj3)))+((((IkReal)(-1.00000000000000))*(new_r01)*(sj4)))))))+IKsqr(((new_r21)*(x299)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x299)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(cj4)*(new_r21)*(sj3)))+((((IkReal)(-1.00000000000000))*(new_r01)*(sj4)))))), ((new_r21)*(x299)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[12];
IkReal x300=IKsin(j5);
IkReal x301=IKcos(j5);
IkReal x302=((cj4)*(sj3));
IkReal x303=((cj3)*(new_r10));
IkReal x304=(((IkReal)(1.00000000000000))*(new_r01));
IkReal x305=((cj3)*(new_r11));
IkReal x306=(((IkReal)(1.00000000000000))*(new_r00));
IkReal x307=(((IkReal)(1.00000000000000))*(x301));
IkReal x308=((cj4)*(x300));
IkReal x309=(((IkReal)(1.00000000000000))*(x300));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x309))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(sj4)*(x307)))+(new_r21));
evalcond[2]=((x300)+(((new_r11)*(sj3)))+(((cj3)*(new_r01))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x307)))+(((new_r10)*(sj3)))+(((cj3)*(new_r00))));
evalcond[4]=((((x301)*(x302)))+(((cj3)*(x300)))+(new_r01));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(cj3)*(x307)))+(((x300)*(x302)))+(new_r00));
evalcond[6]=((((sj3)*(x300)))+((((IkReal)(-1.00000000000000))*(cj3)*(cj4)*(x307)))+(new_r11));
evalcond[7]=((x303)+((((IkReal)(-1.00000000000000))*(x308)))+((((IkReal)(-1.00000000000000))*(sj3)*(x306))));
evalcond[8]=((x305)+((((IkReal)(-1.00000000000000))*(sj3)*(x304)))+((((IkReal)(-1.00000000000000))*(cj4)*(x307))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(cj3)*(x308)))+((((IkReal)(-1.00000000000000))*(sj3)*(x307)))+(new_r10));
evalcond[10]=(((((IkReal)(-1.00000000000000))*(x302)*(x306)))+(((new_r20)*(sj4)))+(((cj4)*(x303)))+((((IkReal)(-1.00000000000000))*(x309))));
evalcond[11]=((((new_r21)*(sj4)))+((((IkReal)(-1.00000000000000))*(x302)*(x304)))+(((cj4)*(x305)))+((((IkReal)(-1.00000000000000))*(x307))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x310=((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30);
if( IKabs(((new_r20)*(x310))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x310)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((new_r00)*(sj4)))+(((cj4)*(new_r20)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((new_r20)*(x310)))+IKsqr(((x310)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((new_r00)*(sj4)))+(((cj4)*(new_r20)*(sj3)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((new_r20)*(x310)), ((x310)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((new_r00)*(sj4)))+(((cj4)*(new_r20)*(sj3)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[12];
IkReal x311=IKsin(j5);
IkReal x312=IKcos(j5);
IkReal x313=((cj4)*(sj3));
IkReal x314=((cj3)*(new_r10));
IkReal x315=(((IkReal)(1.00000000000000))*(new_r01));
IkReal x316=((cj3)*(new_r11));
IkReal x317=(((IkReal)(1.00000000000000))*(new_r00));
IkReal x318=(((IkReal)(1.00000000000000))*(x312));
IkReal x319=((cj4)*(x311));
IkReal x320=(((IkReal)(1.00000000000000))*(x311));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x320))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x318))));
evalcond[2]=((((new_r11)*(sj3)))+(x311)+(((cj3)*(new_r01))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x318)))+(((new_r10)*(sj3)))+(((cj3)*(new_r00))));
evalcond[4]=((((cj3)*(x311)))+(((x312)*(x313)))+(new_r01));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(cj3)*(x318)))+(((x311)*(x313)))+(new_r00));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(cj3)*(cj4)*(x318)))+(((sj3)*(x311)))+(new_r11));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x319)))+((((IkReal)(-1.00000000000000))*(sj3)*(x317)))+(x314));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(sj3)*(x315)))+(x316)+((((IkReal)(-1.00000000000000))*(cj4)*(x318))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(sj3)*(x318)))+((((IkReal)(-1.00000000000000))*(cj3)*(x319)))+(new_r10));
evalcond[10]=((((cj4)*(x314)))+(((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(x320)))+((((IkReal)(-1.00000000000000))*(x313)*(x317))));
evalcond[11]=((((new_r21)*(sj4)))+((((IkReal)(-1.00000000000000))*(x318)))+(((cj4)*(x316)))+((((IkReal)(-1.00000000000000))*(x313)*(x315))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst5)*(new_r20))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(new_r21))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst5)*(new_r20)), ((gconst5)*(new_r21)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[12];
IkReal x321=IKsin(j5);
IkReal x322=IKcos(j5);
IkReal x323=((cj4)*(sj3));
IkReal x324=((cj3)*(new_r10));
IkReal x325=(((IkReal)(1.00000000000000))*(new_r01));
IkReal x326=((cj3)*(new_r11));
IkReal x327=(((IkReal)(1.00000000000000))*(new_r00));
IkReal x328=(((IkReal)(1.00000000000000))*(x322));
IkReal x329=((cj4)*(x321));
IkReal x330=(((IkReal)(1.00000000000000))*(x321));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x330))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x328))));
evalcond[2]=((((new_r11)*(sj3)))+(x321)+(((cj3)*(new_r01))));
evalcond[3]=((((new_r10)*(sj3)))+((((IkReal)(-1.00000000000000))*(x328)))+(((cj3)*(new_r00))));
evalcond[4]=((((x322)*(x323)))+(((cj3)*(x321)))+(new_r01));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(cj3)*(x328)))+(((x321)*(x323)))+(new_r00));
evalcond[6]=((((sj3)*(x321)))+((((IkReal)(-1.00000000000000))*(cj3)*(cj4)*(x328)))+(new_r11));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(sj3)*(x327)))+(x324)+((((IkReal)(-1.00000000000000))*(x329))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(sj3)*(x325)))+((((IkReal)(-1.00000000000000))*(cj4)*(x328)))+(x326));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(sj3)*(x328)))+((((IkReal)(-1.00000000000000))*(cj3)*(x329)))+(new_r10));
evalcond[10]=((((new_r20)*(sj4)))+(((cj4)*(x324)))+((((IkReal)(-1.00000000000000))*(x323)*(x327)))+((((IkReal)(-1.00000000000000))*(x330))));
evalcond[11]=((((new_r21)*(sj4)))+(((cj4)*(x326)))+((((IkReal)(-1.00000000000000))*(x323)*(x325)))+((((IkReal)(-1.00000000000000))*(x328))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst4)*(new_r20))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(new_r21))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst4)*(new_r20)), ((gconst4)*(new_r21)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x331=(((IkReal)(1.00000000000000))*(sj4));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(x331)*(IKsin(j5)))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x331)*(IKcos(j5)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst11;
gconst11=IKsign(sj4);
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign(sj4);
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[12];
IkReal x332=(((IkReal)(-1.00000000000000))+(new_r22));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959))));
evalcond[1]=x332;
evalcond[2]=x332;
evalcond[3]=new_r12;
evalcond[4]=new_r02;
evalcond[5]=new_r20;
evalcond[6]=new_r21;
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=new_r20;
evalcond[10]=new_r21;
evalcond[11]=x332;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst13;
gconst13=IKsign((((((IkReal)(-1.00000000000000))*(new_r02)*(new_r11)))+(((new_r01)*(new_r12)))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*(new_r02)*(new_r11)))+(((new_r01)*(new_r12))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign(((((new_r12)*(sj5)))+((((IkReal)(-1.00000000000000))*(cj5)*(new_r02)))));
dummyeval[0]=((((new_r12)*(sj5)))+((((IkReal)(-1.00000000000000))*(cj5)*(new_r02))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x333=((gconst14)*(new_r01));
if( IKabs(((new_r02)*(x333))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r12)*(x333))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((new_r02)*(x333)), (((IkReal)(-1.00000000000000))*(new_r12)*(x333)));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
int ij3;
for(ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[10];
IkReal x334=IKsin(j3);
IkReal x335=IKcos(j3);
IkReal x336=(((IkReal)(1.00000000000000))*(cj5));
IkReal x337=((sj5)*(x334));
IkReal x338=((cj5)*(x334));
IkReal x339=((sj5)*(x335));
IkReal x340=(((IkReal)(1.00000000000000))*(x334));
IkReal x341=((x335)*(x336));
evalcond[0]=((((new_r02)*(x335)))+(((new_r12)*(x334))));
evalcond[1]=((((new_r11)*(x334)))+(sj5)+(((new_r01)*(x335))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r02)*(x340)))+(((new_r12)*(x335))));
evalcond[3]=((((new_r10)*(x334)))+(((new_r00)*(x335)))+((((IkReal)(-1.00000000000000))*(x336))));
evalcond[4]=((x339)+(x338)+(new_r01));
evalcond[5]=((x337)+(new_r00)+((((IkReal)(-1.00000000000000))*(x341))));
evalcond[6]=((x337)+((((IkReal)(-1.00000000000000))*(x341)))+(new_r11));
evalcond[7]=((((new_r10)*(x335)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x340)))+((((IkReal)(-1.00000000000000))*(sj5))));
evalcond[8]=((((new_r11)*(x335)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x340)))+((((IkReal)(-1.00000000000000))*(x336))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(x339)))+((((IkReal)(-1.00000000000000))*(x334)*(x336)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x342=((gconst13)*(sj5));
if( IKabs(((new_r02)*(x342))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r12)*(x342))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((new_r02)*(x342)), (((IkReal)(-1.00000000000000))*(new_r12)*(x342)));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
int ij3;
for(ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[10];
IkReal x343=IKsin(j3);
IkReal x344=IKcos(j3);
IkReal x345=(((IkReal)(1.00000000000000))*(cj5));
IkReal x346=((sj5)*(x343));
IkReal x347=((cj5)*(x343));
IkReal x348=((sj5)*(x344));
IkReal x349=(((IkReal)(1.00000000000000))*(x343));
IkReal x350=((x344)*(x345));
evalcond[0]=((((new_r12)*(x343)))+(((new_r02)*(x344))));
evalcond[1]=((sj5)+(((new_r01)*(x344)))+(((new_r11)*(x343))));
evalcond[2]=((((new_r12)*(x344)))+((((IkReal)(-1.00000000000000))*(new_r02)*(x349))));
evalcond[3]=((((new_r00)*(x344)))+(((new_r10)*(x343)))+((((IkReal)(-1.00000000000000))*(x345))));
evalcond[4]=((x347)+(x348)+(new_r01));
evalcond[5]=((x346)+(new_r00)+((((IkReal)(-1.00000000000000))*(x350))));
evalcond[6]=((x346)+((((IkReal)(-1.00000000000000))*(x350)))+(new_r11));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x349)))+(((new_r10)*(x344)))+((((IkReal)(-1.00000000000000))*(sj5))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(new_r01)*(x349)))+((((IkReal)(-1.00000000000000))*(x345)))+(((new_r11)*(x344))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(x348)))+((((IkReal)(-1.00000000000000))*(x343)*(x345)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
IkReal x351=(((IkReal)(1.00000000000000))+(new_r22));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959))));
evalcond[1]=x351;
evalcond[2]=x351;
evalcond[3]=new_r12;
evalcond[4]=new_r02;
evalcond[5]=new_r20;
evalcond[6]=new_r21;
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=(((IkReal)(-1.00000000000000))*(new_r20));
evalcond[10]=(((IkReal)(-1.00000000000000))*(new_r21));
evalcond[11]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign((((((IkReal)(-1.00000000000000))*(new_r02)*(new_r11)))+(((new_r01)*(new_r12)))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*(new_r02)*(new_r11)))+(((new_r01)*(new_r12))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst16;
gconst16=IKsign(((((cj5)*(new_r12)))+((((IkReal)(-1.00000000000000))*(new_r02)*(sj5)))));
dummyeval[0]=((((cj5)*(new_r12)))+((((IkReal)(-1.00000000000000))*(new_r02)*(sj5))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x352=((gconst16)*(new_r11));
if( IKabs(((new_r02)*(x352))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r12)*(x352))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((new_r02)*(x352)), (((IkReal)(-1.00000000000000))*(new_r12)*(x352)));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
int ij3;
for(ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[10];
IkReal x353=IKsin(j3);
IkReal x354=IKcos(j3);
IkReal x355=(((IkReal)(1.00000000000000))*(cj5));
IkReal x356=((sj5)*(x354));
IkReal x357=(((IkReal)(1.00000000000000))*(x353));
IkReal x358=((x353)*(x355));
evalcond[0]=((((new_r02)*(x354)))+(((new_r12)*(x353))));
evalcond[1]=((((new_r01)*(x354)))+(sj5)+(((new_r11)*(x353))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r02)*(x357)))+(((new_r12)*(x354))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x355)))+(((new_r00)*(x354)))+(((new_r10)*(x353))));
evalcond[4]=((x356)+(new_r01)+((((IkReal)(-1.00000000000000))*(x358))));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(x354)*(x355)))+(new_r00)+((((IkReal)(-1.00000000000000))*(sj5)*(x357))));
evalcond[6]=((((sj5)*(x353)))+(((cj5)*(x354)))+(new_r11));
evalcond[7]=((((new_r10)*(x354)))+(sj5)+((((IkReal)(-1.00000000000000))*(new_r00)*(x357))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(new_r01)*(x357)))+(cj5)+(((new_r11)*(x354))));
evalcond[9]=((x356)+((((IkReal)(-1.00000000000000))*(x358)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x359=((gconst15)*(sj5));
if( IKabs(((new_r02)*(x359))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r12)*(x359))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((new_r02)*(x359)), (((IkReal)(-1.00000000000000))*(new_r12)*(x359)));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
int ij3;
for(ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[10];
IkReal x360=IKsin(j3);
IkReal x361=IKcos(j3);
IkReal x362=(((IkReal)(1.00000000000000))*(cj5));
IkReal x363=((sj5)*(x361));
IkReal x364=(((IkReal)(1.00000000000000))*(x360));
IkReal x365=((x360)*(x362));
evalcond[0]=((((new_r02)*(x361)))+(((new_r12)*(x360))));
evalcond[1]=((sj5)+(((new_r01)*(x361)))+(((new_r11)*(x360))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r02)*(x364)))+(((new_r12)*(x361))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x362)))+(((new_r10)*(x360)))+(((new_r00)*(x361))));
evalcond[4]=((x363)+(new_r01)+((((IkReal)(-1.00000000000000))*(x365))));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(sj5)*(x364)))+(new_r00)+((((IkReal)(-1.00000000000000))*(x361)*(x362))));
evalcond[6]=((((sj5)*(x360)))+(((cj5)*(x361)))+(new_r11));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x364)))+(sj5)+(((new_r10)*(x361))));
evalcond[8]=((cj5)+((((IkReal)(-1.00000000000000))*(new_r01)*(x364)))+(((new_r11)*(x361))));
evalcond[9]=((x363)+((((IkReal)(-1.00000000000000))*(x365)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst12)*(new_r02))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(gconst12)*(new_r12))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst12)*(new_r02)), (((IkReal)(-1.00000000000000))*(gconst12)*(new_r12)));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
int ij3;
for(ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[18];
IkReal x366=IKsin(j3);
IkReal x367=IKcos(j3);
IkReal x368=(((IkReal)(1.00000000000000))*(cj5));
IkReal x369=(((IkReal)(1.00000000000000))*(cj4));
IkReal x370=((new_r11)*(x367));
IkReal x371=((sj4)*(x366));
IkReal x372=((sj5)*(x367));
IkReal x373=((cj4)*(x367));
IkReal x374=((sj4)*(x367));
IkReal x375=((new_r00)*(x366));
IkReal x376=((cj4)*(x366));
IkReal x377=((new_r01)*(x366));
IkReal x378=((new_r02)*(x366));
evalcond[0]=((x374)+(new_r12));
evalcond[1]=((new_r02)+((((IkReal)(-1.00000000000000))*(x371))));
evalcond[2]=((((new_r12)*(x366)))+(((new_r02)*(x367))));
evalcond[3]=((((new_r11)*(x366)))+(sj5)+(((new_r01)*(x367))));
evalcond[4]=((sj4)+(((new_r12)*(x367)))+((((IkReal)(-1.00000000000000))*(x378))));
evalcond[5]=((((new_r10)*(x366)))+((((IkReal)(-1.00000000000000))*(x368)))+(((new_r00)*(x367))));
evalcond[6]=((x372)+(new_r01)+(((cj5)*(x376))));
evalcond[7]=((((sj5)*(x376)))+(new_r00)+((((IkReal)(-1.00000000000000))*(x367)*(x368))));
evalcond[8]=((((sj5)*(x366)))+((((IkReal)(-1.00000000000000))*(x368)*(x373)))+(new_r11));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(x375)))+(((new_r10)*(x367)))+((((IkReal)(-1.00000000000000))*(sj5)*(x369))));
evalcond[10]=((x370)+((((IkReal)(-1.00000000000000))*(cj4)*(x368)))+((((IkReal)(-1.00000000000000))*(x377))));
evalcond[11]=(((((IkReal)(-1.00000000000000))*(x369)*(x372)))+(new_r10)+((((IkReal)(-1.00000000000000))*(x366)*(x368))));
evalcond[12]=((((new_r22)*(sj4)))+((((IkReal)(-1.00000000000000))*(x369)*(x378)))+(((new_r12)*(x373))));
evalcond[13]=(((((IkReal)(-1.00000000000000))*(new_r10)*(x374)))+(((new_r00)*(x371)))+(((cj4)*(new_r20))));
evalcond[14]=(((((IkReal)(-1.00000000000000))*(sj4)*(x370)))+(((new_r01)*(x371)))+(((cj4)*(new_r21))));
evalcond[15]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r12)*(x374)))+(((new_r02)*(x371)))+(((cj4)*(new_r22))));
evalcond[16]=((((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(x369)*(x375)))+(((new_r10)*(x373)))+((((IkReal)(-1.00000000000000))*(sj5))));
evalcond[17]=((((new_r21)*(sj4)))+(((cj4)*(x370)))+((((IkReal)(-1.00000000000000))*(x368)))+((((IkReal)(-1.00000000000000))*(x369)*(x377))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  || IKabs(evalcond[12]) > 0.000001  || IKabs(evalcond[13]) > 0.000001  || IKabs(evalcond[14]) > 0.000001  || IKabs(evalcond[15]) > 0.000001  || IKabs(evalcond[16]) > 0.000001  || IKabs(evalcond[17]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst11)*(new_r02))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(gconst11)*(new_r12))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst11)*(new_r02)), (((IkReal)(-1.00000000000000))*(gconst11)*(new_r12)));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
int ij3;
for(ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[18];
IkReal x379=IKsin(j3);
IkReal x380=IKcos(j3);
IkReal x381=(((IkReal)(1.00000000000000))*(cj5));
IkReal x382=(((IkReal)(1.00000000000000))*(cj4));
IkReal x383=((new_r11)*(x380));
IkReal x384=((sj4)*(x379));
IkReal x385=((sj5)*(x380));
IkReal x386=((cj4)*(x380));
IkReal x387=((sj4)*(x380));
IkReal x388=((new_r00)*(x379));
IkReal x389=((cj4)*(x379));
IkReal x390=((new_r01)*(x379));
IkReal x391=((new_r02)*(x379));
evalcond[0]=((x387)+(new_r12));
evalcond[1]=((new_r02)+((((IkReal)(-1.00000000000000))*(x384))));
evalcond[2]=((((new_r12)*(x379)))+(((new_r02)*(x380))));
evalcond[3]=((((new_r11)*(x379)))+(sj5)+(((new_r01)*(x380))));
evalcond[4]=((sj4)+(((new_r12)*(x380)))+((((IkReal)(-1.00000000000000))*(x391))));
evalcond[5]=((((new_r00)*(x380)))+((((IkReal)(-1.00000000000000))*(x381)))+(((new_r10)*(x379))));
evalcond[6]=((((cj5)*(x389)))+(x385)+(new_r01));
evalcond[7]=((((sj5)*(x389)))+((((IkReal)(-1.00000000000000))*(x380)*(x381)))+(new_r00));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(x381)*(x386)))+(((sj5)*(x379)))+(new_r11));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(sj5)*(x382)))+(((new_r10)*(x380)))+((((IkReal)(-1.00000000000000))*(x388))));
evalcond[10]=((x383)+((((IkReal)(-1.00000000000000))*(cj4)*(x381)))+((((IkReal)(-1.00000000000000))*(x390))));
evalcond[11]=(((((IkReal)(-1.00000000000000))*(x382)*(x385)))+((((IkReal)(-1.00000000000000))*(x379)*(x381)))+(new_r10));
evalcond[12]=((((new_r22)*(sj4)))+(((new_r12)*(x386)))+((((IkReal)(-1.00000000000000))*(x382)*(x391))));
evalcond[13]=(((((IkReal)(-1.00000000000000))*(new_r10)*(x387)))+(((new_r00)*(x384)))+(((cj4)*(new_r20))));
evalcond[14]=((((new_r01)*(x384)))+(((cj4)*(new_r21)))+((((IkReal)(-1.00000000000000))*(sj4)*(x383))));
evalcond[15]=(((IkReal)(-1.00000000000000))+(((cj4)*(new_r22)))+((((IkReal)(-1.00000000000000))*(new_r12)*(x387)))+(((new_r02)*(x384))));
evalcond[16]=((((new_r20)*(sj4)))+(((new_r10)*(x386)))+((((IkReal)(-1.00000000000000))*(x382)*(x388)))+((((IkReal)(-1.00000000000000))*(sj5))));
evalcond[17]=((((cj4)*(x383)))+(((new_r21)*(sj4)))+((((IkReal)(-1.00000000000000))*(x381)))+((((IkReal)(-1.00000000000000))*(x382)*(x390))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  || IKabs(evalcond[12]) > 0.000001  || IKabs(evalcond[13]) > 0.000001  || IKabs(evalcond[14]) > 0.000001  || IKabs(evalcond[15]) > 0.000001  || IKabs(evalcond[16]) > 0.000001  || IKabs(evalcond[17]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}
}
}

}

}
}
}
}
}/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45;
x0=IKsin(j[0]);
x1=IKcos(j[2]);
x2=IKsin(j[1]);
x3=IKcos(j[1]);
x4=IKsin(j[2]);
x5=IKcos(j[3]);
x6=IKcos(j[0]);
x7=IKsin(j[3]);
x8=IKsin(j[4]);
x9=IKcos(j[4]);
x10=IKsin(j[5]);
x11=IKcos(j[5]);
x12=(((IkReal)(0.120000000000000))*(x0));
x13=(((IkReal)(0.120000000000000))*(x4));
x14=(((IkReal)(0.348000000000000))*(x2));
x15=(((IkReal)(1.00000000000000))*(x5));
x16=(((IkReal)(1.00000000000000))*(x2));
x17=(((IkReal)(1.00000000000000))*(x8));
x18=((x6)*(x7));
x19=((x0)*(x2));
x20=((x1)*(x6));
x21=((x5)*(x8));
x22=((x1)*(x2));
x23=((x0)*(x3));
x24=((x0)*(x7));
x25=((x3)*(x4));
x26=((x1)*(x3));
x27=(((IkReal)(1.00000000000000))*(x18));
x28=(((IkReal)(1.00000000000000))*(x24));
x29=((x25)+(x22));
x30=(((((IkReal)(-1.00000000000000))*(x16)*(x4)))+(x26));
x31=((x30)*(x8));
x32=((x29)*(x7));
x33=(((((IkReal)(-1.00000000000000))*(x1)*(x23)))+(((x19)*(x4))));
x34=((((x23)*(x4)))+(((x1)*(x19))));
x35=((((x20)*(x3)))+((((IkReal)(-1.00000000000000))*(x16)*(x4)*(x6))));
x36=((x29)*(x5)*(x9));
x37=((x33)*(x5));
x38=(((((IkReal)(-1.00000000000000))*(x25)*(x6)))+((((IkReal)(-1.00000000000000))*(x16)*(x20))));
x39=((x35)*(x5));
x40=((x38)*(x9));
x41=((x38)*(x8));
x42=((((x5)*(x6)))+(((x33)*(x7))));
x43=((((x35)*(x7)))+(((x0)*(x5))));
x44=((((x30)*(x9)))+(((x21)*((((((IkReal)(-1.00000000000000))*(x25)))+((((IkReal)(-1.00000000000000))*(x1)*(x16))))))));
x45=((((x8)*(((x27)+((((IkReal)(-1.00000000000000))*(x15)*(x33)))))))+(((x34)*(x9))));
eerot[0]=((((x10)*(((((x34)*(x8)))+(((x9)*((((((IkReal)(-1.00000000000000))*(x18)))+(x37)))))))))+(((x11)*(x42))));
eerot[1]=x45;
eerot[2]=((((x10)*(x42)))+((((IkReal)(-1.00000000000000))*(x11)*((((((IkReal)(1.00000000000000))*(x9)*(((x37)+((((IkReal)(-1.00000000000000))*(x27)))))))+(((x17)*(x34))))))));
eetrans[0]=(((((IkReal)(0.348000000000000))*(x23)*(x4)))+(((x0)*(x1)*(x14)))+(((x9)*(((((x12)*(x22)))+(((x12)*(x25)))))))+(((j[6])*(x45)))+((((IkReal)(0.337500000000000))*(x19)))+(((x8)*((((((IkReal)(0.120000000000000))*(x18)))+((((IkReal)(-0.120000000000000))*(x37))))))));
eerot[3]=((((x10)*(((x41)+(((x9)*((((((IkReal)(-1.00000000000000))*(x28)))+(x39)))))))))+(((x11)*(x43))));
eerot[4]=((((x8)*(((x28)+((((IkReal)(-1.00000000000000))*(x15)*(x35)))))))+(x40));
eerot[5]=((((x10)*(x43)))+((((IkReal)(-1.00000000000000))*(x11)*((((((IkReal)(1.00000000000000))*(x9)*((((((IkReal)(-1.00000000000000))*(x24)))+(x39)))))+((((IkReal)(1.00000000000000))*(x41))))))));
eetrans[1]=(((((IkReal)(-0.337500000000000))*(x2)*(x6)))+((((IkReal)(-1.00000000000000))*(x14)*(x20)))+(((x9)*((((((IkReal)(-0.120000000000000))*(x2)*(x20)))+((((IkReal)(-1.00000000000000))*(x13)*(x3)*(x6)))))))+(((x8)*((((((IkReal)(-0.120000000000000))*(x39)))+(((x12)*(x7)))))))+((((IkReal)(-0.348000000000000))*(x25)*(x6)))+(((j[6])*(((((x8)*(((x28)+((((IkReal)(-1.00000000000000))*(x39)))))))+(x40))))));
eerot[6]=((((x10)*(((x31)+(x36)))))+(((x11)*(x32))));
eerot[7]=x44;
eerot[8]=((((x10)*(x32)))+(((x11)*((((((IkReal)(-1.00000000000000))*(x15)*(x29)*(x9)))+((((IkReal)(-1.00000000000000))*(x17)*(x30))))))));
IkReal x46=(((IkReal)(1.00000000000000))*(x13));
eetrans[2]=(((IkReal)(0.261900000000000))+((((IkReal)(0.337500000000000))*(x3)))+((((IkReal)(-1.00000000000000))*(x14)*(x4)))+((((IkReal)(0.348000000000000))*(x26)))+(((x21)*((((((IkReal)(-1.00000000000000))*(x3)*(x46)))+((((IkReal)(-0.120000000000000))*(x22)))))))+(((x9)*((((((IkReal)(0.120000000000000))*(x26)))+((((IkReal)(-1.00000000000000))*(x2)*(x46)))))))+(((j[6])*(x44))));
}

IKFAST_API int GetNumFreeParameters() { return 1; }
IKFAST_API int* GetFreeParameters() { static int freeparams[] = {6}; return freeparams; }
IKFAST_API int GetNumJoints() { return IKFAST_NUM_JOINTS; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

int ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionList * solutions) {
j0=NAN; _ij0[0] = -1; _ij0[1] = -1; _nj0 = -1; j1=NAN; _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j2=NAN; _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=NAN; _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=NAN; _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=NAN; _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1;  _ij6[0] = -1; _ij6[1] = -1; _nj6 = 0; 
int dummyiter;
for(dummyiter = 0; dummyiter < 1; ++dummyiter) {
    IkSolutionList_Clear(solutions);
j6=pfree[0]; cj6=cos(pfree[0]); sj6=sin(pfree[0]);
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=r00;
new_r01=(((IkReal)(-1.00000000000000))*(r02));
new_r02=r01;
new_px=(((((IkReal)(-0.120000000000000))*(r01)))+(px));
new_r10=r10;
new_r11=(((IkReal)(-1.00000000000000))*(r12));
new_r12=r11;
new_py=((py)+((((IkReal)(-0.120000000000000))*(r11))));
new_r20=r20;
new_r21=(((IkReal)(-1.00000000000000))*(r22));
new_r22=r21;
new_pz=(((IkReal)(-0.261900000000000))+(pz)+((((IkReal)(-0.120000000000000))*(r21))));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((pz)*(pz))+((py)*(py)));
npx=((((py)*(r10)))+(((pz)*(r20)))+(((px)*(r00))));
npy=((((px)*(r01)))+(((pz)*(r21)))+(((py)*(r11))));
npz=((((py)*(r12)))+(((pz)*(r22)))+(((px)*(r02))));
rxp0_0=(((((IkReal)(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+((((IkReal)(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((py)*(r00)))+((((IkReal)(-1.00000000000000))*(px)*(r10))));
rxp1_0=((((pz)*(r11)))+((((IkReal)(-1.00000000000000))*(py)*(r21))));
rxp1_1=(((((IkReal)(-1.00000000000000))*(pz)*(r01)))+(((px)*(r21))));
rxp1_2=((((py)*(r01)))+((((IkReal)(-1.00000000000000))*(px)*(r11))));
rxp2_0=(((((IkReal)(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+((((IkReal)(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((py)*(r02)))+((((IkReal)(-1.00000000000000))*(px)*(r12))));
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
cj2array[0]=(((IkReal)(-1.00046934865900))+((((IkReal)(4.25713069391230))*((j6)*(j6))))+((((IkReal)(-8.51426138782461))*(j6)*(npz)))+((((IkReal)(4.25713069391230))*(pp))));
if( cj2array[0] >= -1-IKFAST_SINCOS_THRESH && cj2array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j2valid[0] = j2valid[1] = true;
    j2array[0] = IKacos(cj2array[0]);
    sj2array[0] = IKsin(j2array[0]);
    cj2array[1] = cj2array[0];
    j2array[1] = -j2array[0];
    sj2array[1] = -sj2array[0];
}
else if( isnan(cj2array[0]) )
{
    // probably any value will work
    j2valid[0] = true;
    cj2array[0] = 1; sj2array[0] = 0; j2array[0] = 0;
}
int ij2;
for(ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
int iij2;
for(iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];

{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
if( IKabs(((((j6)*(r02)))+((((IkReal)(-1.00000000000000))*(px))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((j6)*(r12)))+((((IkReal)(-1.00000000000000))*(py))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x47=IKatan2(((((j6)*(r02)))+((((IkReal)(-1.00000000000000))*(px)))), ((((j6)*(r12)))+((((IkReal)(-1.00000000000000))*(py)))));
j0array[0]=(((IkReal)(-1.00000000000000))*(x47));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
j0array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x47))));
sj0array[1]=IKsin(j0array[1]);
cj0array[1]=IKcos(j0array[1]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
if( j0array[1] > IKPI )
{
    j0array[1]-=IK2PI;
}
else if( j0array[1] < -IKPI )
{    j0array[1]+=IK2PI;
}
j0valid[1] = true;
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

{
IkReal dummyeval[1];
IkReal gconst0;
gconst0=IKsign((((IkReal)(-7119.14062500000))+((((IkReal)(-14681.2500000000))*(cj2)))+((((IkReal)(-7569.00000000000))*((cj2)*(cj2))))+((((IkReal)(-7569.00000000000))*((sj2)*(sj2))))));
dummyeval[0]=(((IkReal)(-1.00000000000000))+((((IkReal)(-2.06222222222222))*(cj2)))+((((IkReal)(-1.06319012345679))*((cj2)*(cj2))))+((((IkReal)(-1.06319012345679))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x48=(((IkReal)(87.0000000000000))*(j6));
IkReal x49=((cj0)*(cj2));
IkReal x50=(((IkReal)(84.3750000000000))*(cj0));
IkReal x51=(((IkReal)(84.3750000000000))*(sj0));
IkReal x52=((cj2)*(sj0));
gconst1=IKsign(((((j6)*(r02)*(x51)))+((((IkReal)(-87.0000000000000))*(px)*(x52)))+((((IkReal)(87.0000000000000))*(py)*(x49)))+(((py)*(x50)))+(((r22)*(sj2)*(x48)))+(((r02)*(x48)*(x52)))+((((IkReal)(-1.00000000000000))*(r12)*(x48)*(x49)))+((((IkReal)(-1.00000000000000))*(j6)*(r12)*(x50)))+((((IkReal)(-1.00000000000000))*(px)*(x51)))+((((IkReal)(-87.0000000000000))*(pz)*(sj2)))));
IkReal x53=(((IkReal)(1.03111111111111))*(sj2));
IkReal x54=((j6)*(r02));
IkReal x55=(((IkReal)(1.03111111111111))*(cj2));
IkReal x56=((cj0)*(py));
IkReal x57=((cj0)*(j6)*(r12));
IkReal x58=((sj0)*(x55));
dummyeval[0]=((x56)+((((IkReal)(-1.00000000000000))*(px)*(x58)))+((((IkReal)(-1.00000000000000))*(px)*(sj0)))+(((sj0)*(x54)))+((((IkReal)(-1.00000000000000))*(x57)))+(((x54)*(x58)))+((((IkReal)(-1.00000000000000))*(pz)*(x53)))+(((j6)*(r22)*(x53)))+((((IkReal)(-1.00000000000000))*(x55)*(x57)))+(((x55)*(x56))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal x59=(((IkReal)(1.03111111111111))*(sj2));
IkReal x60=(((IkReal)(1.03111111111111))*(cj2));
IkReal x61=((j6)*(r22));
dummyeval[0]=((((cj0)*(py)*(x59)))+((((IkReal)(-1.00000000000000))*(x60)*(x61)))+((((IkReal)(-1.00000000000000))*(cj0)*(j6)*(r12)*(x59)))+(((j6)*(r02)*(sj0)*(x59)))+(pz)+((((IkReal)(-1.00000000000000))*(px)*(sj0)*(x59)))+((((IkReal)(-1.00000000000000))*(x61)))+(((pz)*(x60))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x62=(j6)*(j6);
IkReal x63=(((IkReal)(250.000000000000))*(j6));
IkReal x64=((cj0)*(pz));
IkReal x65=((cj2)*(pz));
IkReal x66=((px)*(sj0));
IkReal x67=((cj0)*(py));
IkReal x68=(((IkReal)(21750.0000000000))*(sj2));
IkReal x69=((r02)*(sj0));
IkReal x70=(((IkReal)(87.0000000000000))*(sj2));
IkReal x71=((j6)*(r22));
IkReal x72=((cj0)*(r12));
IkReal x73=(((IkReal)(250.000000000000))*(r22)*(x62));
if( IKabs(((((IKabs((((((IkReal)(-87.0000000000000))*(cj2)*(x71)))+((((IkReal)(-1.00000000000000))*(x66)*(x70)))+((((IkReal)(-84.3750000000000))*(x71)))+(((j6)*(x69)*(x70)))+((((IkReal)(-1.00000000000000))*(j6)*(x70)*(x72)))+((((IkReal)(87.0000000000000))*(x65)))+((((IkReal)(84.3750000000000))*(pz)))+(((x67)*(x70))))) != 0)?((IkReal)1/((((((IkReal)(-87.0000000000000))*(cj2)*(x71)))+((((IkReal)(-1.00000000000000))*(x66)*(x70)))+((((IkReal)(-84.3750000000000))*(x71)))+(((j6)*(x69)*(x70)))+((((IkReal)(-1.00000000000000))*(j6)*(x70)*(x72)))+((((IkReal)(87.0000000000000))*(x65)))+((((IkReal)(84.3750000000000))*(pz)))+(((x67)*(x70)))))):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(pz)*(x63)*(x69)))+((((IkReal)(-1.00000000000000))*(r22)*(x63)*(x66)))+((((IkReal)(-1.00000000000000))*(x72)*(x73)))+((((IkReal)(-30.2760000000000))*(cj2)*(sj2)))+((((IkReal)(-29.3625000000000))*(sj2)))+((((IkReal)(-250.000000000000))*(py)*(x64)))+(((x69)*(x73)))+((((IkReal)(250.000000000000))*(pz)*(x66)))+(((r22)*(x63)*(x67)))+(((r12)*(x63)*(x64))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((j6)*(x68)*(x72)))+(((x66)*(x68)))+((((IkReal)(21750.0000000000))*(cj2)*(x71)))+((((IkReal)(-1.00000000000000))*(j6)*(x68)*(x69)))+((((IkReal)(-21750.0000000000))*(x65)))+((((IkReal)(-1.00000000000000))*(x67)*(x68)))+((((IkReal)(-21093.7500000000))*(pz)))+((((IkReal)(21093.7500000000))*(x71))))) != 0)?((IkReal)1/(((((j6)*(x68)*(x72)))+(((x66)*(x68)))+((((IkReal)(21750.0000000000))*(cj2)*(x71)))+((((IkReal)(-1.00000000000000))*(j6)*(x68)*(x69)))+((((IkReal)(-21750.0000000000))*(x65)))+((((IkReal)(-1.00000000000000))*(x67)*(x68)))+((((IkReal)(-21093.7500000000))*(pz)))+((((IkReal)(21093.7500000000))*(x71)))))):(IkReal)1.0e30))*((((((IkReal)(125000.000000000))*(pz)*(x71)))+((((IkReal)(7569.00000000000))*((sj2)*(sj2))))+((((IkReal)(-62500.0000000000))*(x62)*((r22)*(r22))))+((((IkReal)(-62500.0000000000))*((pz)*(pz)))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs((((((IkReal)(-87.0000000000000))*(cj2)*(x71)))+((((IkReal)(-1.00000000000000))*(x66)*(x70)))+((((IkReal)(-84.3750000000000))*(x71)))+(((j6)*(x69)*(x70)))+((((IkReal)(-1.00000000000000))*(j6)*(x70)*(x72)))+((((IkReal)(87.0000000000000))*(x65)))+((((IkReal)(84.3750000000000))*(pz)))+(((x67)*(x70))))) != 0)?((IkReal)1/((((((IkReal)(-87.0000000000000))*(cj2)*(x71)))+((((IkReal)(-1.00000000000000))*(x66)*(x70)))+((((IkReal)(-84.3750000000000))*(x71)))+(((j6)*(x69)*(x70)))+((((IkReal)(-1.00000000000000))*(j6)*(x70)*(x72)))+((((IkReal)(87.0000000000000))*(x65)))+((((IkReal)(84.3750000000000))*(pz)))+(((x67)*(x70)))))):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(pz)*(x63)*(x69)))+((((IkReal)(-1.00000000000000))*(r22)*(x63)*(x66)))+((((IkReal)(-1.00000000000000))*(x72)*(x73)))+((((IkReal)(-30.2760000000000))*(cj2)*(sj2)))+((((IkReal)(-29.3625000000000))*(sj2)))+((((IkReal)(-250.000000000000))*(py)*(x64)))+(((x69)*(x73)))+((((IkReal)(250.000000000000))*(pz)*(x66)))+(((r22)*(x63)*(x67)))+(((r12)*(x63)*(x64)))))))+IKsqr(((((IKabs(((((j6)*(x68)*(x72)))+(((x66)*(x68)))+((((IkReal)(21750.0000000000))*(cj2)*(x71)))+((((IkReal)(-1.00000000000000))*(j6)*(x68)*(x69)))+((((IkReal)(-21750.0000000000))*(x65)))+((((IkReal)(-1.00000000000000))*(x67)*(x68)))+((((IkReal)(-21093.7500000000))*(pz)))+((((IkReal)(21093.7500000000))*(x71))))) != 0)?((IkReal)1/(((((j6)*(x68)*(x72)))+(((x66)*(x68)))+((((IkReal)(21750.0000000000))*(cj2)*(x71)))+((((IkReal)(-1.00000000000000))*(j6)*(x68)*(x69)))+((((IkReal)(-21750.0000000000))*(x65)))+((((IkReal)(-1.00000000000000))*(x67)*(x68)))+((((IkReal)(-21093.7500000000))*(pz)))+((((IkReal)(21093.7500000000))*(x71)))))):(IkReal)1.0e30))*((((((IkReal)(125000.000000000))*(pz)*(x71)))+((((IkReal)(7569.00000000000))*((sj2)*(sj2))))+((((IkReal)(-62500.0000000000))*(x62)*((r22)*(r22))))+((((IkReal)(-62500.0000000000))*((pz)*(pz))))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IKabs((((((IkReal)(-87.0000000000000))*(cj2)*(x71)))+((((IkReal)(-1.00000000000000))*(x66)*(x70)))+((((IkReal)(-84.3750000000000))*(x71)))+(((j6)*(x69)*(x70)))+((((IkReal)(-1.00000000000000))*(j6)*(x70)*(x72)))+((((IkReal)(87.0000000000000))*(x65)))+((((IkReal)(84.3750000000000))*(pz)))+(((x67)*(x70))))) != 0)?((IkReal)1/((((((IkReal)(-87.0000000000000))*(cj2)*(x71)))+((((IkReal)(-1.00000000000000))*(x66)*(x70)))+((((IkReal)(-84.3750000000000))*(x71)))+(((j6)*(x69)*(x70)))+((((IkReal)(-1.00000000000000))*(j6)*(x70)*(x72)))+((((IkReal)(87.0000000000000))*(x65)))+((((IkReal)(84.3750000000000))*(pz)))+(((x67)*(x70)))))):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(pz)*(x63)*(x69)))+((((IkReal)(-1.00000000000000))*(r22)*(x63)*(x66)))+((((IkReal)(-1.00000000000000))*(x72)*(x73)))+((((IkReal)(-30.2760000000000))*(cj2)*(sj2)))+((((IkReal)(-29.3625000000000))*(sj2)))+((((IkReal)(-250.000000000000))*(py)*(x64)))+(((x69)*(x73)))+((((IkReal)(250.000000000000))*(pz)*(x66)))+(((r22)*(x63)*(x67)))+(((r12)*(x63)*(x64)))))), ((((IKabs(((((j6)*(x68)*(x72)))+(((x66)*(x68)))+((((IkReal)(21750.0000000000))*(cj2)*(x71)))+((((IkReal)(-1.00000000000000))*(j6)*(x68)*(x69)))+((((IkReal)(-21750.0000000000))*(x65)))+((((IkReal)(-1.00000000000000))*(x67)*(x68)))+((((IkReal)(-21093.7500000000))*(pz)))+((((IkReal)(21093.7500000000))*(x71))))) != 0)?((IkReal)1/(((((j6)*(x68)*(x72)))+(((x66)*(x68)))+((((IkReal)(21750.0000000000))*(cj2)*(x71)))+((((IkReal)(-1.00000000000000))*(j6)*(x68)*(x69)))+((((IkReal)(-21750.0000000000))*(x65)))+((((IkReal)(-1.00000000000000))*(x67)*(x68)))+((((IkReal)(-21093.7500000000))*(pz)))+((((IkReal)(21093.7500000000))*(x71)))))):(IkReal)1.0e30))*((((((IkReal)(125000.000000000))*(pz)*(x71)))+((((IkReal)(7569.00000000000))*((sj2)*(sj2))))+((((IkReal)(-62500.0000000000))*(x62)*((r22)*(r22))))+((((IkReal)(-62500.0000000000))*((pz)*(pz))))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x74=IKcos(j1);
IkReal x75=IKsin(j1);
IkReal x76=((cj0)*(r12));
IkReal x77=((r02)*(sj0));
IkReal x78=((px)*(sj0));
IkReal x79=((j6)*(r22));
IkReal x80=(((IkReal)(0.348000000000000))*(sj2));
IkReal x81=(((IkReal)(0.348000000000000))*(cj2));
IkReal x82=((cj0)*(py));
IkReal x83=((j6)*(x75));
IkReal x84=(((IkReal)(0.675000000000000))*(x74));
IkReal x85=(((IkReal)(1.00000000000000))*(x74));
IkReal x86=(((IkReal)(1.00000000000000))*(x75));
IkReal x87=(((IkReal)(0.675000000000000))*(x75));
evalcond[0]=((((x75)*(x80)))+((((IkReal)(-1.00000000000000))*(x74)*(x81)))+(pz)+((((IkReal)(-0.337500000000000))*(x74)))+((((IkReal)(-1.00000000000000))*(x79))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x74)*(x80)))+((((IkReal)(-1.00000000000000))*(x82)))+(((j6)*(x76)))+((((IkReal)(-1.00000000000000))*(x75)*(x81)))+(x78)+((((IkReal)(-1.00000000000000))*(j6)*(x77)))+((((IkReal)(-0.337500000000000))*(x75))));
evalcond[2]=((((j6)*(x74)*(x76)))+(((x74)*(x78)))+(((x75)*(x79)))+((((IkReal)(-1.00000000000000))*(x80)))+((((IkReal)(-1.00000000000000))*(j6)*(x77)*(x85)))+((((IkReal)(-1.00000000000000))*(x82)*(x85)))+((((IkReal)(-1.00000000000000))*(pz)*(x86))));
evalcond[3]=(((IkReal)(-0.337500000000000))+(((x76)*(x83)))+((((IkReal)(-1.00000000000000))*(x77)*(x83)))+(((pz)*(x74)))+((((IkReal)(-1.00000000000000))*(x79)*(x85)))+((((IkReal)(-1.00000000000000))*(x81)))+((((IkReal)(-1.00000000000000))*(x82)*(x86)))+(((x75)*(x78))));
evalcond[4]=(((IkReal)(0.00719775000000000))+((((IkReal)(2.00000000000000))*(j6)*(npz)))+((((IkReal)(-1.00000000000000))*(pp)))+(((x78)*(x87)))+(((pz)*(x84)))+((((IkReal)(-1.00000000000000))*(x82)*(x87)))+((((IkReal)(0.675000000000000))*(x76)*(x83)))+((((IkReal)(-0.675000000000000))*(x77)*(x83)))+((((IkReal)(-1.00000000000000))*((j6)*(j6))))+((((IkReal)(-1.00000000000000))*(x79)*(x84))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x392=(j6)*(j6);
IkReal x393=(((IkReal)(250.000000000000))*(j6));
IkReal x394=((cj0)*(pz));
IkReal x395=((r22)*(sj0));
IkReal x396=((cj0)*(r22));
IkReal x397=((pz)*(sj0));
IkReal x398=(((IkReal)(250.000000000000))*(x392));
if( IKabs(((gconst1)*((((IkReal)(-28.4765625000000))+((((IkReal)(-500.000000000000))*(j6)*(pz)*(r22)))+((((IkReal)(-58.7250000000000))*(cj2)))+(((x398)*((r22)*(r22))))+((((IkReal)(-30.2760000000000))*((cj2)*(cj2))))+((((IkReal)(250.000000000000))*((pz)*(pz)))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*((((((IkReal)(-1.00000000000000))*(r12)*(x393)*(x394)))+(((r02)*(x393)*(x397)))+((((IkReal)(-30.2760000000000))*(cj2)*(sj2)))+((((IkReal)(-29.3625000000000))*(sj2)))+((((IkReal)(-1.00000000000000))*(r02)*(x395)*(x398)))+((((IkReal)(250.000000000000))*(py)*(x394)))+((((IkReal)(-1.00000000000000))*(py)*(x393)*(x396)))+(((px)*(x393)*(x395)))+((((IkReal)(-250.000000000000))*(px)*(x397)))+(((r12)*(x396)*(x398))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst1)*((((IkReal)(-28.4765625000000))+((((IkReal)(-500.000000000000))*(j6)*(pz)*(r22)))+((((IkReal)(-58.7250000000000))*(cj2)))+(((x398)*((r22)*(r22))))+((((IkReal)(-30.2760000000000))*((cj2)*(cj2))))+((((IkReal)(250.000000000000))*((pz)*(pz))))))), ((gconst1)*((((((IkReal)(-1.00000000000000))*(r12)*(x393)*(x394)))+(((r02)*(x393)*(x397)))+((((IkReal)(-30.2760000000000))*(cj2)*(sj2)))+((((IkReal)(-29.3625000000000))*(sj2)))+((((IkReal)(-1.00000000000000))*(r02)*(x395)*(x398)))+((((IkReal)(250.000000000000))*(py)*(x394)))+((((IkReal)(-1.00000000000000))*(py)*(x393)*(x396)))+(((px)*(x393)*(x395)))+((((IkReal)(-250.000000000000))*(px)*(x397)))+(((r12)*(x396)*(x398)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x399=IKcos(j1);
IkReal x400=IKsin(j1);
IkReal x401=((cj0)*(r12));
IkReal x402=((r02)*(sj0));
IkReal x403=((px)*(sj0));
IkReal x404=((j6)*(r22));
IkReal x405=(((IkReal)(0.348000000000000))*(sj2));
IkReal x406=(((IkReal)(0.348000000000000))*(cj2));
IkReal x407=((cj0)*(py));
IkReal x408=((j6)*(x400));
IkReal x409=(((IkReal)(0.675000000000000))*(x399));
IkReal x410=(((IkReal)(1.00000000000000))*(x399));
IkReal x411=(((IkReal)(1.00000000000000))*(x400));
IkReal x412=(((IkReal)(0.675000000000000))*(x400));
evalcond[0]=(((((IkReal)(-0.337500000000000))*(x399)))+(((x400)*(x405)))+((((IkReal)(-1.00000000000000))*(x399)*(x406)))+((((IkReal)(-1.00000000000000))*(x404)))+(pz));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x399)*(x405)))+((((IkReal)(-1.00000000000000))*(x407)))+(((j6)*(x401)))+((((IkReal)(-0.337500000000000))*(x400)))+((((IkReal)(-1.00000000000000))*(j6)*(x402)))+(x403)+((((IkReal)(-1.00000000000000))*(x400)*(x406))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x405)))+(((j6)*(x399)*(x401)))+(((x399)*(x403)))+((((IkReal)(-1.00000000000000))*(pz)*(x411)))+((((IkReal)(-1.00000000000000))*(j6)*(x402)*(x410)))+(((x400)*(x404)))+((((IkReal)(-1.00000000000000))*(x407)*(x410))));
evalcond[3]=(((IkReal)(-0.337500000000000))+((((IkReal)(-1.00000000000000))*(x407)*(x411)))+((((IkReal)(-1.00000000000000))*(x404)*(x410)))+(((pz)*(x399)))+(((x401)*(x408)))+(((x400)*(x403)))+((((IkReal)(-1.00000000000000))*(x406)))+((((IkReal)(-1.00000000000000))*(x402)*(x408))));
evalcond[4]=(((IkReal)(0.00719775000000000))+((((IkReal)(2.00000000000000))*(j6)*(npz)))+((((IkReal)(-0.675000000000000))*(x402)*(x408)))+((((IkReal)(0.675000000000000))*(x401)*(x408)))+((((IkReal)(-1.00000000000000))*(x404)*(x409)))+(((pz)*(x409)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-1.00000000000000))*(x407)*(x412)))+(((x403)*(x412)))+((((IkReal)(-1.00000000000000))*((j6)*(j6)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x413=(((IkReal)(21750.0000000000))*(cj2));
IkReal x414=((px)*(sj0));
IkReal x415=(((IkReal)(21750.0000000000))*(sj2));
IkReal x416=((cj0)*(py));
IkReal x417=((j6)*(r22));
IkReal x418=((cj0)*(j6)*(r12));
IkReal x419=((j6)*(r02)*(sj0));
if( IKabs(((gconst0)*(((((x413)*(x419)))+((((IkReal)(-1.00000000000000))*(x413)*(x418)))+(((pz)*(x415)))+((((IkReal)(-21093.7500000000))*(x414)))+((((IkReal)(-1.00000000000000))*(x415)*(x417)))+((((IkReal)(21093.7500000000))*(x419)))+((((IkReal)(-1.00000000000000))*(x413)*(x414)))+((((IkReal)(-21093.7500000000))*(x418)))+(((x413)*(x416)))+((((IkReal)(21093.7500000000))*(x416))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((x415)*(x419)))+(((x415)*(x416)))+((((IkReal)(21093.7500000000))*(x417)))+((((IkReal)(-1.00000000000000))*(x414)*(x415)))+(((x413)*(x417)))+((((IkReal)(-21093.7500000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x415)*(x418)))+((((IkReal)(-1.00000000000000))*(pz)*(x413))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst0)*(((((x413)*(x419)))+((((IkReal)(-1.00000000000000))*(x413)*(x418)))+(((pz)*(x415)))+((((IkReal)(-21093.7500000000))*(x414)))+((((IkReal)(-1.00000000000000))*(x415)*(x417)))+((((IkReal)(21093.7500000000))*(x419)))+((((IkReal)(-1.00000000000000))*(x413)*(x414)))+((((IkReal)(-21093.7500000000))*(x418)))+(((x413)*(x416)))+((((IkReal)(21093.7500000000))*(x416)))))), ((gconst0)*(((((x415)*(x419)))+(((x415)*(x416)))+((((IkReal)(21093.7500000000))*(x417)))+((((IkReal)(-1.00000000000000))*(x414)*(x415)))+(((x413)*(x417)))+((((IkReal)(-21093.7500000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x415)*(x418)))+((((IkReal)(-1.00000000000000))*(pz)*(x413)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x420=IKcos(j1);
IkReal x421=IKsin(j1);
IkReal x422=((cj0)*(r12));
IkReal x423=((r02)*(sj0));
IkReal x424=((px)*(sj0));
IkReal x425=((j6)*(r22));
IkReal x426=(((IkReal)(0.348000000000000))*(sj2));
IkReal x427=(((IkReal)(0.348000000000000))*(cj2));
IkReal x428=((cj0)*(py));
IkReal x429=((j6)*(x421));
IkReal x430=(((IkReal)(0.675000000000000))*(x420));
IkReal x431=(((IkReal)(1.00000000000000))*(x420));
IkReal x432=(((IkReal)(1.00000000000000))*(x421));
IkReal x433=(((IkReal)(0.675000000000000))*(x421));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x420)*(x427)))+(((x421)*(x426)))+((((IkReal)(-0.337500000000000))*(x420)))+(pz)+((((IkReal)(-1.00000000000000))*(x425))));
evalcond[1]=((x424)+((((IkReal)(-1.00000000000000))*(x420)*(x426)))+((((IkReal)(-1.00000000000000))*(x421)*(x427)))+(((j6)*(x422)))+((((IkReal)(-0.337500000000000))*(x421)))+((((IkReal)(-1.00000000000000))*(j6)*(x423)))+((((IkReal)(-1.00000000000000))*(x428))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x426)))+((((IkReal)(-1.00000000000000))*(pz)*(x432)))+(((x420)*(x424)))+(((j6)*(x420)*(x422)))+(((x421)*(x425)))+((((IkReal)(-1.00000000000000))*(x428)*(x431)))+((((IkReal)(-1.00000000000000))*(j6)*(x423)*(x431))));
evalcond[3]=(((IkReal)(-0.337500000000000))+(((x421)*(x424)))+(((pz)*(x420)))+((((IkReal)(-1.00000000000000))*(x425)*(x431)))+((((IkReal)(-1.00000000000000))*(x428)*(x432)))+((((IkReal)(-1.00000000000000))*(x423)*(x429)))+(((x422)*(x429)))+((((IkReal)(-1.00000000000000))*(x427))));
evalcond[4]=(((IkReal)(0.00719775000000000))+(((pz)*(x430)))+((((IkReal)(2.00000000000000))*(j6)*(npz)))+((((IkReal)(-0.675000000000000))*(x423)*(x429)))+(((x424)*(x433)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-1.00000000000000))*(x428)*(x433)))+((((IkReal)(0.675000000000000))*(x422)*(x429)))+((((IkReal)(-1.00000000000000))*(x425)*(x430)))+((((IkReal)(-1.00000000000000))*((j6)*(j6)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}
}
}
}
}
}
return IkSolutionList_GetNumSolutions(solutions)>0;
}


IKFAST_API const char* GetKinematicsHash() { return "56079441c0c1e4fb7b1d2552419324ce"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }


#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList solutions;
    IkSolutionList_Init( &solutions );
    IkReal vfree[IKFAST_NUM_FREE_VARS];
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    size_t i = 0;
    for(i = 0; i < countof(vfree); ++i)
        vfree[i] = atof(argv[13+i]);
    int bSuccess = ComputeIk(eetrans, eerot, countof(vfree) > 0 ? vfree : NULL, &solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)IkSolutionList_GetNumSolutions(&solutions));
    IkReal solvalues[IKFAST_NUM_JOINTS];
    for(i = 0; i < IkSolutionList_GetNumSolutions(&solutions); ++i) 
    {
        int sol_count;
        int free_count;
        IkSolution * sol = IkSolutionList_GetSolution(&solutions, i);
        IkSolution_GetSolution(sol, solvalues, &sol_count, vfree);
        const int *vsolfree = IkSolution_GetFree( sol, &free_count );
        printf("sol%d (free=%d): ", i, free_count);
        size_t j = 0;
        for( j = 0; j < sol_count; ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
