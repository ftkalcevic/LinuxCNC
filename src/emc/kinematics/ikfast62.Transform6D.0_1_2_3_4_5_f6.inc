/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// C version for linuxcnc adapted by \author Frank Tkalcevic
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 62 generated on 2019-10-08 17:52:33.636304
///
///    /usr/local/bin/openrave.py --database inversekinematics --robot=./moveolike2.xml --iktype=Transform6D --perftiming=1000 --freejoint=GripperTranslate --outputlang=c 
///
/// To compile with gcc:
///     gcc ik.c -lm
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp

#define IKFAST_HAS_LIBRARY
#define IKFAST_NUM_DOF 4
#define IKFAST_NUM_JOINTS 7
#define IKFAST_NUM_FREE_VARS 1

// For a standalone binary
#ifndef IKFAST_NO_MAIN
    #define j0 math_h_j0
    #define j1 math_h_j1

    #include <math.h>
    #include <complex.h>
    #include <stdlib.h>
    #include <stdio.h>

    #undef j0
    #undef j1

    #define rtapi_exit  exit
    #define rtapi_print printf
#endif

#include "ikfast_c.h" // found inside share/openrave-X.Y/python/ikfast_c.h

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==62);

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { rtapi_print( "ikfast exception: " __FILE__ ":" IKFAST_STRINGIZE(__LINE__) ": " IKFAST_STRINGIZE(_PRETTY_FUNCTION__) ": Assertion '"  #b "' failed" ); rtapi_exit(-1); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
void zgetrf_ (const int* m, const int* n, double complex * a, const int* lda, int* ipiv, int* info);
void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);


static inline double IKabs(double f) { return fabs(f); }

static inline double IKsqr(double f) { return f*f; }

static inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

static inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
static inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

static inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
static inline double IKsin(double f) { return sin(f); }
static inline double IKcos(double f) { return cos(f); }
static inline double IKtan(double f) { return tan(f); }
static inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
static inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}


static inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

// Forward declaration even if they aren't used
static inline void polyroots1(IkReal rawcoeffs[1+1], IkReal rawroots[1], int *numroots );
static inline void polyroots2(IkReal rawcoeffs[2+1], IkReal rawroots[2], int *numroots );
static inline void polyroots3(IkReal rawcoeffs[3+1], IkReal rawroots[3], int *numroots );
static inline void polyroots4(IkReal rawcoeffs[4+1], IkReal rawroots[4], int *numroots );
static inline void polyroots5(IkReal rawcoeffs[5+1], IkReal rawroots[5], int *numroots );
static inline void polyroots6(IkReal rawcoeffs[6+1], IkReal rawroots[6], int *numroots );
static inline void polyroots7(IkReal rawcoeffs[7+1], IkReal rawroots[7], int *numroots );
static inline void polyroots8(IkReal rawcoeffs[8+1], IkReal rawroots[8], int *numroots );


static const struct JointInfo
{
    double limitMin;
    double limitMax;
    int jointType;
} JointInfo[] =
{
{ .limitMin=-90.0, .limitMax=90.0, .jointType=1 },
{ .limitMin=-120.0, .limitMax=120.0, .jointType=1 },
{ .limitMin=-120.0, .limitMax=120.0, .jointType=1 },
{ .limitMin=-540.0, .limitMax=540.0, .jointType=1 },
{ .limitMin=-90.0, .limitMax=90.0, .jointType=1 },
{ .limitMin=-180.0, .limitMax=180.0, .jointType=1 },
{ .limitMin=0.0, .limitMax=50.0, .jointType=17 },
};
static IkReal j0,cj0,sj0,htj0,j1,cj1,sj1,htj1,j2,cj2,sj2,htj2,j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,j6,cj6,sj6,htj6,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
static unsigned char _ij0[2], _nj0,_ij1[2], _nj1,_ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5,_ij6[2], _nj6;

static inline void rotationfunction0(IkSolutionList* solutions) {
int rotationiter = 0;
for(rotationiter = 0; rotationiter < 1; ++rotationiter) {
IkReal x90=(((IkReal)(1.00000000000000))*(sj1));
IkReal x91=((cj1)*(sj2));
IkReal x92=((cj0)*(r10));
IkReal x93=((cj0)*(r12));
IkReal x94=(((IkReal)(1.00000000000000))*(sj0));
IkReal x95=((cj0)*(r11));
IkReal x96=((r00)*(x94));
IkReal x97=((((cj1)*(cj2)))+((((IkReal)(-1.00000000000000))*(sj2)*(x90))));
IkReal x98=((((cj2)*(sj1)))+(x91));
IkReal x99=(((((IkReal)(-1.00000000000000))*(x91)))+((((IkReal)(-1.00000000000000))*(cj2)*(x90))));
IkReal x100=((x94)*(x97));
IkReal x101=((cj0)*(x99));
new_r00=((((r10)*(sj0)))+(((cj0)*(r00))));
new_r01=((((r11)*(sj0)))+(((cj0)*(r01))));
new_r02=((((cj0)*(r02)))+(((r12)*(sj0))));
new_r10=((((r20)*(x98)))+((((IkReal)(-1.00000000000000))*(x96)*(x97)))+(((x92)*(x97))));
new_r11=((((x95)*(x97)))+((((IkReal)(-1.00000000000000))*(r01)*(x100)))+(((r21)*(x98))));
new_r12=((((x93)*(x97)))+((((IkReal)(-1.00000000000000))*(r02)*(x100)))+(((r22)*(x98))));
new_r20=(((((IkReal)(-1.00000000000000))*(x96)*(x99)))+(((x92)*(x99)))+(((r20)*(x97))));
new_r21=((((r21)*(x97)))+((((IkReal)(-1.00000000000000))*(r01)*(x94)*(x99)))+(((x95)*(x99))));
new_r22=((((x93)*(x99)))+((((IkReal)(-1.00000000000000))*(r02)*(x94)*(x99)))+(((r22)*(x97))));
{
IkReal j4array[2], cj4array[2], sj4array[2];
bool j4valid[2]={false};
_nj4 = 2;
cj4array[0]=new_r22;
if( cj4array[0] >= -1-IKFAST_SINCOS_THRESH && cj4array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j4valid[0] = j4valid[1] = true;
    j4array[0] = IKacos(cj4array[0]);
    sj4array[0] = IKsin(j4array[0]);
    cj4array[1] = cj4array[0];
    j4array[1] = -j4array[0];
    sj4array[1] = -sj4array[0];
}
else if( isnan(cj4array[0]) )
{
    // probably any value will work
    j4valid[0] = true;
    cj4array[0] = 1; sj4array[0] = 0; j4array[0] = 0;
}
int ij4;
for(ij4 = 0; ij4 < 2; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
int iij4;
for(iij4 = ij4+1; iij4 < 2; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];

{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(sj4);
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(sj4);
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(sj4);
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[12];
IkReal x102=(((IkReal)(-1.00000000000000))+(new_r22));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959))));
evalcond[1]=x102;
evalcond[2]=x102;
evalcond[3]=new_r12;
evalcond[4]=new_r02;
evalcond[5]=new_r20;
evalcond[6]=new_r21;
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=new_r20;
evalcond[10]=new_r21;
evalcond[11]=x102;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
IkReal j5mul = 1;
j5=0;
IkReal j3mul=(IkReal)(-1.00000000000000);
if( IKabs((((IkReal)(-1.00000000000000))*(new_r01))) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r00) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r01)))+IKsqr(new_r00)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3=IKatan2((((IkReal)(-1.00000000000000))*(new_r01)), new_r00);
{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].fmul = j3mul;
vinfos[3].freeind = 0;
vinfos[3].maxsolutions = 0;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].fmul = j5mul;
vinfos[5].freeind = 0;
vinfos[5].maxsolutions = 0;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[1];
vfree[0] = 5;
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 1);
}

} else
{
IkReal x103=(((IkReal)(1.00000000000000))+(new_r22));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959))));
evalcond[1]=x103;
evalcond[2]=x103;
evalcond[3]=new_r12;
evalcond[4]=new_r02;
evalcond[5]=new_r20;
evalcond[6]=new_r21;
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=(((IkReal)(-1.00000000000000))*(new_r20));
evalcond[10]=(((IkReal)(-1.00000000000000))*(new_r21));
evalcond[11]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
{
IkReal j3array[2], cj3array[2], sj3array[2];
bool j3valid[2]={false};
_nj3 = 2;
if( IKabs(new_r02) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r12) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x104=IKatan2(new_r02, new_r12);
j3array[0]=(((IkReal)(-1.00000000000000))*(x104));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
j3array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x104))));
sj3array[1]=IKsin(j3array[1]);
cj3array[1]=IKcos(j3array[1]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
if( j3array[1] > IKPI )
{
    j3array[1]-=IK2PI;
}
else if( j3array[1] < -IKPI )
{    j3array[1]+=IK2PI;
}
j3valid[1] = true;
int ij3;
for(ij3 = 0; ij3 < 2; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 2; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[1];
evalcond[0]=((((new_r12)*(IKcos(j3))))+((((IkReal)(-1.00000000000000))*(new_r02)*(IKsin(j3)))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst17;
gconst17=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst18;
gconst18=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst18)*(((((new_r11)*(sj3)))+(((cj3)*(new_r10))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst18)*((((((IkReal)(-1.00000000000000))*(new_r10)*(sj3)))+(((cj3)*(new_r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst18)*(((((new_r11)*(sj3)))+(((cj3)*(new_r10)))))), ((gconst18)*((((((IkReal)(-1.00000000000000))*(new_r10)*(sj3)))+(((cj3)*(new_r11)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x105=IKsin(j5);
IkReal x106=IKcos(j5);
IkReal x107=(((IkReal)(1.00000000000000))*(sj3));
IkReal x108=((cj3)*(x105));
IkReal x109=(((IkReal)(1.00000000000000))*(x106));
IkReal x110=((x106)*(x107));
evalcond[0]=((((new_r11)*(sj3)))+(x105)+(((cj3)*(new_r01))));
evalcond[1]=((((new_r10)*(sj3)))+((((IkReal)(-1.00000000000000))*(x109)))+(((cj3)*(new_r00))));
evalcond[2]=((new_r01)+(x108)+((((IkReal)(-1.00000000000000))*(x110))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x105)*(x107)))+((((IkReal)(-1.00000000000000))*(cj3)*(x109)))+(new_r00));
evalcond[4]=((((sj3)*(x105)))+(((cj3)*(x106)))+(new_r11));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x107)))+(((cj3)*(new_r10)))+(x105));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(new_r01)*(x107)))+(((cj3)*(new_r11)))+(x106));
evalcond[7]=((x108)+((((IkReal)(-1.00000000000000))*(x110)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst17)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*((((((IkReal)(-1.00000000000000))*(new_r01)*(sj3)))+(((cj3)*(new_r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst17)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01)))))), ((gconst17)*((((((IkReal)(-1.00000000000000))*(new_r01)*(sj3)))+(((cj3)*(new_r11)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x111=IKsin(j5);
IkReal x112=IKcos(j5);
IkReal x113=(((IkReal)(1.00000000000000))*(sj3));
IkReal x114=((cj3)*(x111));
IkReal x115=(((IkReal)(1.00000000000000))*(x112));
IkReal x116=((x112)*(x113));
evalcond[0]=((((new_r11)*(sj3)))+(x111)+(((cj3)*(new_r01))));
evalcond[1]=((((new_r10)*(sj3)))+((((IkReal)(-1.00000000000000))*(x115)))+(((cj3)*(new_r00))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x116)))+(new_r01)+(x114));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x111)*(x113)))+(new_r00)+((((IkReal)(-1.00000000000000))*(cj3)*(x115))));
evalcond[4]=((((sj3)*(x111)))+(((cj3)*(x112)))+(new_r11));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x113)))+(((cj3)*(new_r10)))+(x111));
evalcond[6]=((((cj3)*(new_r11)))+(x112)+((((IkReal)(-1.00000000000000))*(new_r01)*(x113))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x116)))+(x114)+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst3)*(new_r02))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(gconst3)*(new_r12))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst3)*(new_r02)), (((IkReal)(-1.00000000000000))*(gconst3)*(new_r12)));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
int ij3;
for(ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x117=IKsin(j3);
IkReal x118=IKcos(j3);
IkReal x119=(((IkReal)(1.00000000000000))*(sj4));
IkReal x120=((new_r12)*(x118));
IkReal x121=((sj4)*(x117));
IkReal x122=(((IkReal)(1.00000000000000))*(new_r02)*(x117));
evalcond[0]=((((sj4)*(x118)))+(new_r12));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x117)*(x119)))+(new_r02));
evalcond[2]=((((new_r02)*(x118)))+(((new_r12)*(x117))));
evalcond[3]=((sj4)+(x120)+((((IkReal)(-1.00000000000000))*(x122))));
evalcond[4]=((((new_r22)*(sj4)))+((((IkReal)(-1.00000000000000))*(cj4)*(x122)))+(((cj4)*(x120))));
evalcond[5]=((((new_r00)*(x121)))+((((IkReal)(-1.00000000000000))*(new_r10)*(x118)*(x119)))+(((cj4)*(new_r20))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(new_r11)*(x118)*(x119)))+(((cj4)*(new_r21)))+(((new_r01)*(x121))));
evalcond[7]=(((IkReal)(-1.00000000000000))+(((new_r02)*(x121)))+(((cj4)*(new_r22)))+((((IkReal)(-1.00000000000000))*(x119)*(x120))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(sj4);
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj4;
dummyeval[1]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj3;
dummyeval[1]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[16];
IkReal x123=(((((IkReal)(-1.00000000000000))*(cj4)))+(new_r22));
IkReal x124=(((IkReal)(1.00000000000000))*(cj4));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j3)), (IkReal)(6.28318530717959))));
evalcond[1]=x123;
evalcond[2]=x123;
evalcond[3]=new_r12;
evalcond[4]=(((((IkReal)(-1.00000000000000))*(sj4)))+(new_r02));
evalcond[5]=new_r12;
evalcond[6]=new_r12;
evalcond[7]=((sj4)+((((IkReal)(-1.00000000000000))*(new_r02))));
evalcond[8]=((((new_r22)*(sj4)))+((((IkReal)(-1.00000000000000))*(new_r02)*(x124))));
evalcond[9]=((((new_r00)*(sj4)))+(((cj4)*(new_r20))));
evalcond[10]=((((new_r01)*(sj4)))+(((cj4)*(new_r21))));
evalcond[11]=(((IkReal)(-1.00000000000000))+(((cj4)*(new_r22)))+(((new_r02)*(sj4))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs((((IkReal)(-1.00000000000000))*(new_r11))) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r10) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r11)))+IKsqr(new_r10)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2((((IkReal)(-1.00000000000000))*(new_r11)), new_r10);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x125=IKsin(j5);
IkReal x126=IKcos(j5);
IkReal x127=(((IkReal)(1.00000000000000))*(cj4));
IkReal x128=(((IkReal)(1.00000000000000))*(x126));
IkReal x129=(((IkReal)(1.00000000000000))*(x125));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x129))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(sj4)*(x128)))+(new_r21));
evalcond[2]=((x125)+(new_r11));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x128)))+(new_r10));
evalcond[4]=((((cj4)*(x126)))+(new_r01));
evalcond[5]=((((cj4)*(x125)))+(new_r00));
evalcond[6]=((((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(x129)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x127))));
evalcond[7]=((((new_r21)*(sj4)))+((((IkReal)(-1.00000000000000))*(x128)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x127))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x130=(((((IkReal)(-1.00000000000000))*(cj4)))+(new_r22));
IkReal x131=((sj4)+(new_r02));
IkReal x132=(((IkReal)(1.00000000000000))*(sj4));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j3)), (IkReal)(6.28318530717959))));
evalcond[1]=x130;
evalcond[2]=x130;
evalcond[3]=new_r12;
evalcond[4]=x131;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x131;
evalcond[7]=((((new_r22)*(sj4)))+(((cj4)*(new_r02))));
evalcond[8]=((((cj4)*(new_r20)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x132))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(new_r01)*(x132)))+(((cj4)*(new_r21))));
evalcond[10]=(((IkReal)(-1.00000000000000))+(((cj4)*(new_r22)))+((((IkReal)(-1.00000000000000))*(new_r02)*(x132))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(sj4);
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[15];
IkReal x133=(((IkReal)(1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r12;
evalcond[4]=x133;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x133;
evalcond[7]=new_r01;
evalcond[8]=new_r00;
evalcond[9]=new_r00;
evalcond[10]=new_r01;
evalcond[11]=new_r22;
evalcond[12]=(((IkReal)(-1.00000000000000))*(new_r00));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r01));
evalcond[14]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r02))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r20) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r21) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r20)+IKsqr(new_r21)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r20, new_r21);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x134=IKsin(j5);
IkReal x135=(((IkReal)(1.00000000000000))*(IKcos(j5)));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(x134))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x135)))+(new_r21));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x134));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x135)))+((((IkReal)(-1.00000000000000))*(new_r10))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x136=(((IkReal)(1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r12;
evalcond[4]=x136;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x136;
evalcond[7]=new_r01;
evalcond[8]=new_r00;
evalcond[9]=new_r00;
evalcond[10]=new_r01;
evalcond[11]=new_r22;
evalcond[12]=(((IkReal)(-1.00000000000000))*(new_r00));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r01));
evalcond[14]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r02))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r20) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r21) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r20)+IKsqr(new_r21)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r20, new_r21);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x137=IKsin(j5);
IkReal x138=(((IkReal)(1.00000000000000))*(IKcos(j5)));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(x137))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x138))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x137));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x138)))+((((IkReal)(-1.00000000000000))*(new_r10))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x139=(((IkReal)(-1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r12;
evalcond[4]=x139;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x139;
evalcond[7]=new_r01;
evalcond[8]=new_r00;
evalcond[9]=new_r00;
evalcond[10]=new_r01;
evalcond[11]=(((IkReal)(-1.00000000000000))*(new_r22));
evalcond[12]=new_r00;
evalcond[13]=new_r01;
evalcond[14]=x139;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr((((IkReal)(-1.00000000000000))*(new_r21)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r11, (((IkReal)(-1.00000000000000))*(new_r21)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x140=IKsin(j5);
IkReal x141=IKcos(j5);
evalcond[0]=((new_r20)+(x140));
evalcond[1]=((new_r21)+(x141));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x140));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x141)))+((((IkReal)(-1.00000000000000))*(new_r10))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x142=(((IkReal)(-1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r12;
evalcond[4]=x142;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x142;
evalcond[7]=new_r01;
evalcond[8]=new_r00;
evalcond[9]=new_r00;
evalcond[10]=new_r01;
evalcond[11]=(((IkReal)(-1.00000000000000))*(new_r22));
evalcond[12]=new_r00;
evalcond[13]=new_r01;
evalcond[14]=x142;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr((((IkReal)(-1.00000000000000))*(new_r21)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r11, (((IkReal)(-1.00000000000000))*(new_r21)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x143=IKsin(j5);
IkReal x144=IKcos(j5);
evalcond[0]=((new_r20)+(x143));
evalcond[1]=((new_r21)+(x144));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x143));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x144)))+((((IkReal)(-1.00000000000000))*(new_r10))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs(((new_r01)*(((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr(((new_r01)*(((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r11, ((new_r01)*(((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x145=IKsin(j5);
IkReal x146=IKcos(j5);
IkReal x147=(((IkReal)(1.00000000000000))*(cj4));
IkReal x148=(((IkReal)(1.00000000000000))*(x146));
IkReal x149=(((IkReal)(1.00000000000000))*(x145));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x149))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(sj4)*(x148)))+(new_r21));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x145));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x148)))+((((IkReal)(-1.00000000000000))*(new_r10))));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(x146)*(x147)))+(new_r01));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(x145)*(x147)))+(new_r00));
evalcond[6]=((((new_r20)*(sj4)))+(((cj4)*(new_r00)))+((((IkReal)(-1.00000000000000))*(x149))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x148)))+(((new_r21)*(sj4)))+(((cj4)*(new_r01))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs(((new_r21)*(((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr(((new_r21)*(((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r11, ((new_r21)*(((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x150=IKsin(j5);
IkReal x151=IKcos(j5);
IkReal x152=(((IkReal)(1.00000000000000))*(cj4));
IkReal x153=(((IkReal)(1.00000000000000))*(x151));
IkReal x154=(((IkReal)(1.00000000000000))*(x150));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x154))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(sj4)*(x153)))+(new_r21));
evalcond[2]=((x150)+((((IkReal)(-1.00000000000000))*(new_r11))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x153)))+((((IkReal)(-1.00000000000000))*(new_r10))));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(x151)*(x152)))+(new_r01));
evalcond[5]=((new_r00)+((((IkReal)(-1.00000000000000))*(x150)*(x152))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(x154)))+(((new_r20)*(sj4)))+(((cj4)*(new_r00))));
evalcond[7]=((((new_r21)*(sj4)))+(((cj4)*(new_r01)))+((((IkReal)(-1.00000000000000))*(x153))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst6)*(new_r20))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(new_r21))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst6)*(new_r20)), ((gconst6)*(new_r21)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x155=IKsin(j5);
IkReal x156=IKcos(j5);
IkReal x157=(((IkReal)(1.00000000000000))*(cj4));
IkReal x158=(((IkReal)(1.00000000000000))*(x156));
IkReal x159=(((IkReal)(1.00000000000000))*(x155));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x159))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x158))));
evalcond[2]=((x155)+((((IkReal)(-1.00000000000000))*(new_r11))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x158)))+((((IkReal)(-1.00000000000000))*(new_r10))));
evalcond[4]=((new_r01)+((((IkReal)(-1.00000000000000))*(x156)*(x157))));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(x155)*(x157)))+(new_r00));
evalcond[6]=((((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(x159)))+(((cj4)*(new_r00))));
evalcond[7]=((((new_r21)*(sj4)))+(((cj4)*(new_r01)))+((((IkReal)(-1.00000000000000))*(x158))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
IkReal x160=(((IkReal)(-1.00000000000000))+(new_r22));
IkReal x161=((((new_r12)*(sj3)))+(((cj3)*(new_r02))));
IkReal x162=((((cj3)*(new_r12)))+((((IkReal)(-1.00000000000000))*(new_r02)*(sj3))));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959))));
evalcond[1]=x160;
evalcond[2]=x160;
evalcond[3]=new_r12;
evalcond[4]=new_r02;
evalcond[5]=new_r20;
evalcond[6]=new_r21;
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=x161;
evalcond[10]=x161;
evalcond[11]=x162;
evalcond[12]=x162;
evalcond[13]=new_r20;
evalcond[14]=new_r21;
evalcond[15]=x160;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  && IKabs(evalcond[15]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst8)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*((((((IkReal)(-1.00000000000000))*(cj3)*(new_r11)))+(((new_r01)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst8)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01)))))), ((gconst8)*((((((IkReal)(-1.00000000000000))*(cj3)*(new_r11)))+(((new_r01)*(sj3)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x163=IKsin(j5);
IkReal x164=IKcos(j5);
IkReal x165=(((IkReal)(1.00000000000000))*(sj3));
IkReal x166=((sj3)*(x163));
IkReal x167=(((IkReal)(1.00000000000000))*(x164));
IkReal x168=(((IkReal)(1.00000000000000))*(x163));
IkReal x169=((cj3)*(x167));
evalcond[0]=((((new_r11)*(sj3)))+(x163)+(((cj3)*(new_r01))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x167)))+(((new_r10)*(sj3)))+(((cj3)*(new_r00))));
evalcond[2]=((((cj3)*(x163)))+(new_r01)+(((sj3)*(x164))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x169)))+(x166)+(new_r00));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(x169)))+(x166)+(new_r11));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(x168)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x165)))+(((cj3)*(new_r10))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(x167)))+(((cj3)*(new_r11)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x165))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(cj3)*(x168)))+((((IkReal)(-1.00000000000000))*(x164)*(x165)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst7)*(((((new_r00)*(sj3)))+(((cj3)*(new_r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*((((((IkReal)(-1.00000000000000))*(cj3)*(new_r00)))+(((new_r01)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst7)*(((((new_r00)*(sj3)))+(((cj3)*(new_r01)))))), ((gconst7)*((((((IkReal)(-1.00000000000000))*(cj3)*(new_r00)))+(((new_r01)*(sj3)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x170=IKsin(j5);
IkReal x171=IKcos(j5);
IkReal x172=(((IkReal)(1.00000000000000))*(sj3));
IkReal x173=((sj3)*(x170));
IkReal x174=(((IkReal)(1.00000000000000))*(x171));
IkReal x175=(((IkReal)(1.00000000000000))*(x170));
IkReal x176=((cj3)*(x174));
evalcond[0]=((x170)+(((new_r11)*(sj3)))+(((cj3)*(new_r01))));
evalcond[1]=((((new_r10)*(sj3)))+((((IkReal)(-1.00000000000000))*(x174)))+(((cj3)*(new_r00))));
evalcond[2]=((((sj3)*(x171)))+(((cj3)*(x170)))+(new_r01));
evalcond[3]=((x173)+(new_r00)+((((IkReal)(-1.00000000000000))*(x176))));
evalcond[4]=((x173)+((((IkReal)(-1.00000000000000))*(x176)))+(new_r11));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(x175)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x172)))+(((cj3)*(new_r10))));
evalcond[6]=((((cj3)*(new_r11)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x172)))+((((IkReal)(-1.00000000000000))*(x174))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x171)*(x172)))+((((IkReal)(-1.00000000000000))*(cj3)*(x175)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
IkReal x177=(((IkReal)(1.00000000000000))+(new_r22));
IkReal x178=((cj3)*(new_r12));
IkReal x179=((new_r02)*(sj3));
IkReal x180=((((new_r12)*(sj3)))+(((cj3)*(new_r02))));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959))));
evalcond[1]=x177;
evalcond[2]=x177;
evalcond[3]=new_r12;
evalcond[4]=new_r02;
evalcond[5]=new_r20;
evalcond[6]=new_r21;
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=x180;
evalcond[10]=x180;
evalcond[11]=((x178)+((((IkReal)(-1.00000000000000))*(x179))));
evalcond[12]=((x179)+((((IkReal)(-1.00000000000000))*(x178))));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r20));
evalcond[14]=(((IkReal)(-1.00000000000000))*(new_r21));
evalcond[15]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  && IKabs(evalcond[15]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst10)*(((((new_r11)*(sj3)))+(((cj3)*(new_r10))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*((((((IkReal)(-1.00000000000000))*(new_r10)*(sj3)))+(((cj3)*(new_r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst10)*(((((new_r11)*(sj3)))+(((cj3)*(new_r10)))))), ((gconst10)*((((((IkReal)(-1.00000000000000))*(new_r10)*(sj3)))+(((cj3)*(new_r11)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x181=IKsin(j5);
IkReal x182=IKcos(j5);
IkReal x183=(((IkReal)(1.00000000000000))*(sj3));
IkReal x184=((cj3)*(x181));
IkReal x185=(((IkReal)(1.00000000000000))*(x182));
IkReal x186=((x182)*(x183));
evalcond[0]=((((new_r11)*(sj3)))+(x181)+(((cj3)*(new_r01))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x185)))+(((new_r10)*(sj3)))+(((cj3)*(new_r00))));
evalcond[2]=((x184)+((((IkReal)(-1.00000000000000))*(x186)))+(new_r01));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(cj3)*(x185)))+(new_r00)+((((IkReal)(-1.00000000000000))*(x181)*(x183))));
evalcond[4]=((((sj3)*(x181)))+(new_r11)+(((cj3)*(x182))));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x183)))+(x181)+(((cj3)*(new_r10))));
evalcond[6]=((((cj3)*(new_r11)))+(x182)+((((IkReal)(-1.00000000000000))*(new_r01)*(x183))));
evalcond[7]=((x184)+((((IkReal)(-1.00000000000000))*(x186)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst9)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*((((((IkReal)(-1.00000000000000))*(new_r01)*(sj3)))+(((cj3)*(new_r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst9)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01)))))), ((gconst9)*((((((IkReal)(-1.00000000000000))*(new_r01)*(sj3)))+(((cj3)*(new_r11)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x187=IKsin(j5);
IkReal x188=IKcos(j5);
IkReal x189=(((IkReal)(1.00000000000000))*(sj3));
IkReal x190=((cj3)*(x187));
IkReal x191=(((IkReal)(1.00000000000000))*(x188));
IkReal x192=((x188)*(x189));
evalcond[0]=((((new_r11)*(sj3)))+(x187)+(((cj3)*(new_r01))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x191)))+(((new_r10)*(sj3)))+(((cj3)*(new_r00))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x192)))+(x190)+(new_r01));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(cj3)*(x191)))+((((IkReal)(-1.00000000000000))*(x187)*(x189)))+(new_r00));
evalcond[4]=((((cj3)*(x188)))+(((sj3)*(x187)))+(new_r11));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x189)))+(x187)+(((cj3)*(new_r10))));
evalcond[6]=((((cj3)*(new_r11)))+(x188)+((((IkReal)(-1.00000000000000))*(new_r01)*(x189))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x192)))+(x190)+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x193=((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30);
if( IKabs(((x193)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(cj4)*(new_r21)*(sj3)))+((((IkReal)(-1.00000000000000))*(new_r01)*(sj4))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((new_r21)*(x193))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x193)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(cj4)*(new_r21)*(sj3)))+((((IkReal)(-1.00000000000000))*(new_r01)*(sj4)))))))+IKsqr(((new_r21)*(x193)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x193)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(cj4)*(new_r21)*(sj3)))+((((IkReal)(-1.00000000000000))*(new_r01)*(sj4)))))), ((new_r21)*(x193)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[12];
IkReal x194=IKsin(j5);
IkReal x195=IKcos(j5);
IkReal x196=((cj4)*(sj3));
IkReal x197=((cj3)*(new_r10));
IkReal x198=(((IkReal)(1.00000000000000))*(new_r01));
IkReal x199=((cj3)*(new_r11));
IkReal x200=(((IkReal)(1.00000000000000))*(new_r00));
IkReal x201=(((IkReal)(1.00000000000000))*(x195));
IkReal x202=((cj4)*(x194));
IkReal x203=(((IkReal)(1.00000000000000))*(x194));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x203))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x201))));
evalcond[2]=((((new_r11)*(sj3)))+(x194)+(((cj3)*(new_r01))));
evalcond[3]=((((new_r10)*(sj3)))+((((IkReal)(-1.00000000000000))*(x201)))+(((cj3)*(new_r00))));
evalcond[4]=((((x195)*(x196)))+(((cj3)*(x194)))+(new_r01));
evalcond[5]=((((x194)*(x196)))+((((IkReal)(-1.00000000000000))*(cj3)*(x201)))+(new_r00));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(cj3)*(cj4)*(x201)))+(((sj3)*(x194)))+(new_r11));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x202)))+((((IkReal)(-1.00000000000000))*(sj3)*(x200)))+(x197));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(cj4)*(x201)))+((((IkReal)(-1.00000000000000))*(sj3)*(x198)))+(x199));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(cj3)*(x202)))+((((IkReal)(-1.00000000000000))*(sj3)*(x201)))+(new_r10));
evalcond[10]=((((cj4)*(x197)))+((((IkReal)(-1.00000000000000))*(x203)))+(((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(x196)*(x200))));
evalcond[11]=((((new_r21)*(sj4)))+(((cj4)*(x199)))+((((IkReal)(-1.00000000000000))*(x196)*(x198)))+((((IkReal)(-1.00000000000000))*(x201))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x204=((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30);
if( IKabs(((new_r20)*(x204))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x204)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((new_r00)*(sj4)))+(((cj4)*(new_r20)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((new_r20)*(x204)))+IKsqr(((x204)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((new_r00)*(sj4)))+(((cj4)*(new_r20)*(sj3)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((new_r20)*(x204)), ((x204)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((new_r00)*(sj4)))+(((cj4)*(new_r20)*(sj3)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[12];
IkReal x205=IKsin(j5);
IkReal x206=IKcos(j5);
IkReal x207=((cj4)*(sj3));
IkReal x208=((cj3)*(new_r10));
IkReal x209=(((IkReal)(1.00000000000000))*(new_r01));
IkReal x210=((cj3)*(new_r11));
IkReal x211=(((IkReal)(1.00000000000000))*(new_r00));
IkReal x212=(((IkReal)(1.00000000000000))*(x206));
IkReal x213=((cj4)*(x205));
IkReal x214=(((IkReal)(1.00000000000000))*(x205));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x214))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x212))));
evalcond[2]=((((new_r11)*(sj3)))+(x205)+(((cj3)*(new_r01))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x212)))+(((new_r10)*(sj3)))+(((cj3)*(new_r00))));
evalcond[4]=((((cj3)*(x205)))+(new_r01)+(((x206)*(x207))));
evalcond[5]=((((x205)*(x207)))+(new_r00)+((((IkReal)(-1.00000000000000))*(cj3)*(x212))));
evalcond[6]=((((sj3)*(x205)))+((((IkReal)(-1.00000000000000))*(cj3)*(cj4)*(x212)))+(new_r11));
evalcond[7]=((x208)+((((IkReal)(-1.00000000000000))*(x213)))+((((IkReal)(-1.00000000000000))*(sj3)*(x211))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(cj4)*(x212)))+(x210)+((((IkReal)(-1.00000000000000))*(sj3)*(x209))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(sj3)*(x212)))+((((IkReal)(-1.00000000000000))*(cj3)*(x213)))+(new_r10));
evalcond[10]=(((((IkReal)(-1.00000000000000))*(x214)))+(((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(x207)*(x211)))+(((cj4)*(x208))));
evalcond[11]=((((new_r21)*(sj4)))+(((cj4)*(x210)))+((((IkReal)(-1.00000000000000))*(x207)*(x209)))+((((IkReal)(-1.00000000000000))*(x212))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst5)*(new_r20))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(new_r21))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst5)*(new_r20)), ((gconst5)*(new_r21)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[12];
IkReal x215=IKsin(j5);
IkReal x216=IKcos(j5);
IkReal x217=((cj4)*(sj3));
IkReal x218=((cj3)*(new_r10));
IkReal x219=(((IkReal)(1.00000000000000))*(new_r01));
IkReal x220=((cj3)*(new_r11));
IkReal x221=(((IkReal)(1.00000000000000))*(new_r00));
IkReal x222=(((IkReal)(1.00000000000000))*(x216));
IkReal x223=((cj4)*(x215));
IkReal x224=(((IkReal)(1.00000000000000))*(x215));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x224))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x222))));
evalcond[2]=((x215)+(((new_r11)*(sj3)))+(((cj3)*(new_r01))));
evalcond[3]=((((new_r10)*(sj3)))+((((IkReal)(-1.00000000000000))*(x222)))+(((cj3)*(new_r00))));
evalcond[4]=((((cj3)*(x215)))+(new_r01)+(((x216)*(x217))));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(cj3)*(x222)))+(((x215)*(x217)))+(new_r00));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(cj3)*(cj4)*(x222)))+(((sj3)*(x215)))+(new_r11));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x223)))+(x218)+((((IkReal)(-1.00000000000000))*(sj3)*(x221))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(sj3)*(x219)))+(x220)+((((IkReal)(-1.00000000000000))*(cj4)*(x222))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(cj3)*(x223)))+((((IkReal)(-1.00000000000000))*(sj3)*(x222)))+(new_r10));
evalcond[10]=(((((IkReal)(-1.00000000000000))*(x224)))+(((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(x217)*(x221)))+(((cj4)*(x218))));
evalcond[11]=((((new_r21)*(sj4)))+((((IkReal)(-1.00000000000000))*(x222)))+((((IkReal)(-1.00000000000000))*(x217)*(x219)))+(((cj4)*(x220))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst2)*(new_r02))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(gconst2)*(new_r12))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst2)*(new_r02)), (((IkReal)(-1.00000000000000))*(gconst2)*(new_r12)));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
int ij3;
for(ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[8];
IkReal x225=IKsin(j3);
IkReal x226=IKcos(j3);
IkReal x227=(((IkReal)(1.00000000000000))*(sj4));
IkReal x228=((new_r12)*(x226));
IkReal x229=((sj4)*(x225));
IkReal x230=(((IkReal)(1.00000000000000))*(new_r02)*(x225));
evalcond[0]=((((sj4)*(x226)))+(new_r12));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x225)*(x227)))+(new_r02));
evalcond[2]=((((new_r02)*(x226)))+(((new_r12)*(x225))));
evalcond[3]=((sj4)+((((IkReal)(-1.00000000000000))*(x230)))+(x228));
evalcond[4]=((((new_r22)*(sj4)))+(((cj4)*(x228)))+((((IkReal)(-1.00000000000000))*(cj4)*(x230))));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(new_r10)*(x226)*(x227)))+(((new_r00)*(x229)))+(((cj4)*(new_r20))));
evalcond[6]=((((new_r01)*(x229)))+((((IkReal)(-1.00000000000000))*(new_r11)*(x226)*(x227)))+(((cj4)*(new_r21))));
evalcond[7]=(((IkReal)(-1.00000000000000))+(((cj4)*(new_r22)))+(((new_r02)*(x229)))+((((IkReal)(-1.00000000000000))*(x227)*(x228))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(sj4);
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj4;
dummyeval[1]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj3;
dummyeval[1]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[16];
IkReal x231=(((((IkReal)(-1.00000000000000))*(cj4)))+(new_r22));
IkReal x232=(((IkReal)(1.00000000000000))*(cj4));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j3)), (IkReal)(6.28318530717959))));
evalcond[1]=x231;
evalcond[2]=x231;
evalcond[3]=new_r12;
evalcond[4]=(((((IkReal)(-1.00000000000000))*(sj4)))+(new_r02));
evalcond[5]=new_r12;
evalcond[6]=new_r12;
evalcond[7]=((sj4)+((((IkReal)(-1.00000000000000))*(new_r02))));
evalcond[8]=((((new_r22)*(sj4)))+((((IkReal)(-1.00000000000000))*(new_r02)*(x232))));
evalcond[9]=((((new_r00)*(sj4)))+(((cj4)*(new_r20))));
evalcond[10]=((((new_r01)*(sj4)))+(((cj4)*(new_r21))));
evalcond[11]=(((IkReal)(-1.00000000000000))+(((cj4)*(new_r22)))+(((new_r02)*(sj4))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs((((IkReal)(-1.00000000000000))*(new_r11))) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r10) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((IkReal)(-1.00000000000000))*(new_r11)))+IKsqr(new_r10)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2((((IkReal)(-1.00000000000000))*(new_r11)), new_r10);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x233=IKsin(j5);
IkReal x234=IKcos(j5);
IkReal x235=(((IkReal)(1.00000000000000))*(cj4));
IkReal x236=(((IkReal)(1.00000000000000))*(x234));
IkReal x237=(((IkReal)(1.00000000000000))*(x233));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x237))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x236))));
evalcond[2]=((x233)+(new_r11));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x236)))+(new_r10));
evalcond[4]=((((cj4)*(x234)))+(new_r01));
evalcond[5]=((((cj4)*(x233)))+(new_r00));
evalcond[6]=((((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x235)))+((((IkReal)(-1.00000000000000))*(x237))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x236)))+(((new_r21)*(sj4)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x235))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x238=(((((IkReal)(-1.00000000000000))*(cj4)))+(new_r22));
IkReal x239=((sj4)+(new_r02));
IkReal x240=(((IkReal)(1.00000000000000))*(sj4));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j3)), (IkReal)(6.28318530717959))));
evalcond[1]=x238;
evalcond[2]=x238;
evalcond[3]=new_r12;
evalcond[4]=x239;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x239;
evalcond[7]=((((new_r22)*(sj4)))+(((cj4)*(new_r02))));
evalcond[8]=((((cj4)*(new_r20)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x240))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(new_r01)*(x240)))+(((cj4)*(new_r21))));
evalcond[10]=(((IkReal)(-1.00000000000000))+(((cj4)*(new_r22)))+((((IkReal)(-1.00000000000000))*(new_r02)*(x240))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(sj4);
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[15];
IkReal x241=(((IkReal)(1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r12;
evalcond[4]=x241;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x241;
evalcond[7]=new_r01;
evalcond[8]=new_r00;
evalcond[9]=new_r00;
evalcond[10]=new_r01;
evalcond[11]=new_r22;
evalcond[12]=(((IkReal)(-1.00000000000000))*(new_r00));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r01));
evalcond[14]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r02))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r20) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r21) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r20)+IKsqr(new_r21)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r20, new_r21);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x242=IKsin(j5);
IkReal x243=(((IkReal)(1.00000000000000))*(IKcos(j5)));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x242)))+(new_r20));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x243))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x242));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x243)))+((((IkReal)(-1.00000000000000))*(new_r10))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x244=(((IkReal)(1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(1.57079632679490))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r12;
evalcond[4]=x244;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x244;
evalcond[7]=new_r01;
evalcond[8]=new_r00;
evalcond[9]=new_r00;
evalcond[10]=new_r01;
evalcond[11]=new_r22;
evalcond[12]=(((IkReal)(-1.00000000000000))*(new_r00));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r01));
evalcond[14]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r02))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r20) < IKFAST_ATAN2_MAGTHRESH && IKabs(new_r21) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r20)+IKsqr(new_r21)-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r20, new_r21);
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x245=IKsin(j5);
IkReal x246=(((IkReal)(1.00000000000000))*(IKcos(j5)));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(x245))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(x246))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x245));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x246)))+((((IkReal)(-1.00000000000000))*(new_r10))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x247=(((IkReal)(-1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r12;
evalcond[4]=x247;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x247;
evalcond[7]=new_r01;
evalcond[8]=new_r00;
evalcond[9]=new_r00;
evalcond[10]=new_r01;
evalcond[11]=(((IkReal)(-1.00000000000000))*(new_r22));
evalcond[12]=new_r00;
evalcond[13]=new_r01;
evalcond[14]=x247;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr((((IkReal)(-1.00000000000000))*(new_r21)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r11, (((IkReal)(-1.00000000000000))*(new_r21)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x248=IKsin(j5);
IkReal x249=IKcos(j5);
evalcond[0]=((new_r20)+(x248));
evalcond[1]=((new_r21)+(x249));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x248));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x249)))+((((IkReal)(-1.00000000000000))*(new_r10))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
IkReal x250=(((IkReal)(-1.00000000000000))+(new_r02));
evalcond[0]=((IKabs((((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(4.71238898038469))+(j4)), (IkReal)(6.28318530717959))))))+(IKabs((((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959)))))));
evalcond[1]=new_r22;
evalcond[2]=new_r22;
evalcond[3]=new_r12;
evalcond[4]=x250;
evalcond[5]=(((IkReal)(-1.00000000000000))*(new_r12));
evalcond[6]=x250;
evalcond[7]=new_r01;
evalcond[8]=new_r00;
evalcond[9]=new_r00;
evalcond[10]=new_r01;
evalcond[11]=(((IkReal)(-1.00000000000000))*(new_r22));
evalcond[12]=new_r00;
evalcond[13]=new_r01;
evalcond[14]=x250;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r21))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr((((IkReal)(-1.00000000000000))*(new_r21)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r11, (((IkReal)(-1.00000000000000))*(new_r21)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[4];
IkReal x251=IKsin(j5);
IkReal x252=IKcos(j5);
evalcond[0]=((new_r20)+(x251));
evalcond[1]=((new_r21)+(x252));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x251));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x252)))+((((IkReal)(-1.00000000000000))*(new_r10))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs(((new_r01)*(((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr(((new_r01)*(((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r11, ((new_r01)*(((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x253=IKsin(j5);
IkReal x254=IKcos(j5);
IkReal x255=(((IkReal)(1.00000000000000))*(cj4));
IkReal x256=(((IkReal)(1.00000000000000))*(x254));
IkReal x257=(((IkReal)(1.00000000000000))*(x253));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x257))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x256))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x253));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x256)))+((((IkReal)(-1.00000000000000))*(new_r10))));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(x254)*(x255)))+(new_r01));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(x253)*(x255)))+(new_r00));
evalcond[6]=((((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(x257)))+(((cj4)*(new_r00))));
evalcond[7]=((((new_r21)*(sj4)))+((((IkReal)(-1.00000000000000))*(x256)))+(((cj4)*(new_r01))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(new_r11) < IKFAST_ATAN2_MAGTHRESH && IKabs(((new_r21)*(((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(new_r11)+IKsqr(((new_r21)*(((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(new_r11, ((new_r21)*(((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x258=IKsin(j5);
IkReal x259=IKcos(j5);
IkReal x260=(((IkReal)(1.00000000000000))*(cj4));
IkReal x261=(((IkReal)(1.00000000000000))*(x259));
IkReal x262=(((IkReal)(1.00000000000000))*(x258));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x262))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x261))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x258));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x261)))+((((IkReal)(-1.00000000000000))*(new_r10))));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(x259)*(x260)))+(new_r01));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(x258)*(x260)))+(new_r00));
evalcond[6]=((((new_r20)*(sj4)))+(((cj4)*(new_r00)))+((((IkReal)(-1.00000000000000))*(x262))));
evalcond[7]=((((new_r21)*(sj4)))+(((cj4)*(new_r01)))+((((IkReal)(-1.00000000000000))*(x261))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst6)*(new_r20))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(new_r21))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst6)*(new_r20)), ((gconst6)*(new_r21)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x263=IKsin(j5);
IkReal x264=IKcos(j5);
IkReal x265=(((IkReal)(1.00000000000000))*(cj4));
IkReal x266=(((IkReal)(1.00000000000000))*(x264));
IkReal x267=(((IkReal)(1.00000000000000))*(x263));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(sj4)*(x267)))+(new_r20));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x266))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r11)))+(x263));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x266)))+((((IkReal)(-1.00000000000000))*(new_r10))));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(x264)*(x265)))+(new_r01));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(x263)*(x265)))+(new_r00));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(x267)))+(((new_r20)*(sj4)))+(((cj4)*(new_r00))));
evalcond[7]=((((new_r21)*(sj4)))+((((IkReal)(-1.00000000000000))*(x266)))+(((cj4)*(new_r01))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
IkReal x268=(((IkReal)(-1.00000000000000))+(new_r22));
IkReal x269=((((new_r12)*(sj3)))+(((cj3)*(new_r02))));
IkReal x270=((((cj3)*(new_r12)))+((((IkReal)(-1.00000000000000))*(new_r02)*(sj3))));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959))));
evalcond[1]=x268;
evalcond[2]=x268;
evalcond[3]=new_r12;
evalcond[4]=new_r02;
evalcond[5]=new_r20;
evalcond[6]=new_r21;
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=x269;
evalcond[10]=x269;
evalcond[11]=x270;
evalcond[12]=x270;
evalcond[13]=new_r20;
evalcond[14]=new_r21;
evalcond[15]=x268;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  && IKabs(evalcond[15]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst8)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*((((((IkReal)(-1.00000000000000))*(cj3)*(new_r11)))+(((new_r01)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst8)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01)))))), ((gconst8)*((((((IkReal)(-1.00000000000000))*(cj3)*(new_r11)))+(((new_r01)*(sj3)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x271=IKsin(j5);
IkReal x272=IKcos(j5);
IkReal x273=(((IkReal)(1.00000000000000))*(sj3));
IkReal x274=((sj3)*(x271));
IkReal x275=(((IkReal)(1.00000000000000))*(x272));
IkReal x276=(((IkReal)(1.00000000000000))*(x271));
IkReal x277=((cj3)*(x275));
evalcond[0]=((((new_r11)*(sj3)))+(x271)+(((cj3)*(new_r01))));
evalcond[1]=((((new_r10)*(sj3)))+((((IkReal)(-1.00000000000000))*(x275)))+(((cj3)*(new_r00))));
evalcond[2]=((((cj3)*(x271)))+(new_r01)+(((sj3)*(x272))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x277)))+(x274)+(new_r00));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(x277)))+(x274)+(new_r11));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x273)))+((((IkReal)(-1.00000000000000))*(x276)))+(((cj3)*(new_r10))));
evalcond[6]=((((cj3)*(new_r11)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x273)))+((((IkReal)(-1.00000000000000))*(x275))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(cj3)*(x276)))+((((IkReal)(-1.00000000000000))*(x272)*(x273)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst7)*(((((new_r00)*(sj3)))+(((cj3)*(new_r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*((((((IkReal)(-1.00000000000000))*(cj3)*(new_r00)))+(((new_r01)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst7)*(((((new_r00)*(sj3)))+(((cj3)*(new_r01)))))), ((gconst7)*((((((IkReal)(-1.00000000000000))*(cj3)*(new_r00)))+(((new_r01)*(sj3)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x278=IKsin(j5);
IkReal x279=IKcos(j5);
IkReal x280=(((IkReal)(1.00000000000000))*(sj3));
IkReal x281=((sj3)*(x278));
IkReal x282=(((IkReal)(1.00000000000000))*(x279));
IkReal x283=(((IkReal)(1.00000000000000))*(x278));
IkReal x284=((cj3)*(x282));
evalcond[0]=((((new_r11)*(sj3)))+(x278)+(((cj3)*(new_r01))));
evalcond[1]=((((new_r10)*(sj3)))+((((IkReal)(-1.00000000000000))*(x282)))+(((cj3)*(new_r00))));
evalcond[2]=((((sj3)*(x279)))+(((cj3)*(x278)))+(new_r01));
evalcond[3]=((x281)+(new_r00)+((((IkReal)(-1.00000000000000))*(x284))));
evalcond[4]=((x281)+((((IkReal)(-1.00000000000000))*(x284)))+(new_r11));
evalcond[5]=((((cj3)*(new_r10)))+((((IkReal)(-1.00000000000000))*(x283)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x280))));
evalcond[6]=((((cj3)*(new_r11)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x280)))+((((IkReal)(-1.00000000000000))*(x282))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x279)*(x280)))+((((IkReal)(-1.00000000000000))*(cj3)*(x283)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
IkReal x285=(((IkReal)(1.00000000000000))+(new_r22));
IkReal x286=((cj3)*(new_r12));
IkReal x287=((new_r02)*(sj3));
IkReal x288=((((new_r12)*(sj3)))+(((cj3)*(new_r02))));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959))));
evalcond[1]=x285;
evalcond[2]=x285;
evalcond[3]=new_r12;
evalcond[4]=new_r02;
evalcond[5]=new_r20;
evalcond[6]=new_r21;
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=x288;
evalcond[10]=x288;
evalcond[11]=((x286)+((((IkReal)(-1.00000000000000))*(x287))));
evalcond[12]=(((((IkReal)(-1.00000000000000))*(x286)))+(x287));
evalcond[13]=(((IkReal)(-1.00000000000000))*(new_r20));
evalcond[14]=(((IkReal)(-1.00000000000000))*(new_r21));
evalcond[15]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  && IKabs(evalcond[12]) < 0.0000010000000000  && IKabs(evalcond[13]) < 0.0000010000000000  && IKabs(evalcond[14]) < 0.0000010000000000  && IKabs(evalcond[15]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign((((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3))))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*((cj3)*(cj3))))+((((IkReal)(-1.00000000000000))*((sj3)*(sj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst10)*(((((new_r11)*(sj3)))+(((cj3)*(new_r10))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*((((((IkReal)(-1.00000000000000))*(new_r10)*(sj3)))+(((cj3)*(new_r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst10)*(((((new_r11)*(sj3)))+(((cj3)*(new_r10)))))), ((gconst10)*((((((IkReal)(-1.00000000000000))*(new_r10)*(sj3)))+(((cj3)*(new_r11)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x289=IKsin(j5);
IkReal x290=IKcos(j5);
IkReal x291=(((IkReal)(1.00000000000000))*(sj3));
IkReal x292=((cj3)*(x289));
IkReal x293=(((IkReal)(1.00000000000000))*(x290));
IkReal x294=((x290)*(x291));
evalcond[0]=((x289)+(((new_r11)*(sj3)))+(((cj3)*(new_r01))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x293)))+(((new_r10)*(sj3)))+(((cj3)*(new_r00))));
evalcond[2]=((x292)+(new_r01)+((((IkReal)(-1.00000000000000))*(x294))));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(cj3)*(x293)))+((((IkReal)(-1.00000000000000))*(x289)*(x291)))+(new_r00));
evalcond[4]=((((cj3)*(x290)))+(((sj3)*(x289)))+(new_r11));
evalcond[5]=((x289)+(((cj3)*(new_r10)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x291))));
evalcond[6]=((((cj3)*(new_r11)))+(x290)+((((IkReal)(-1.00000000000000))*(new_r01)*(x291))));
evalcond[7]=((x292)+((((IkReal)(-1.00000000000000))*(x294)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst9)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*((((((IkReal)(-1.00000000000000))*(new_r01)*(sj3)))+(((cj3)*(new_r11))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst9)*(((((new_r11)*(sj3)))+(((cj3)*(new_r01)))))), ((gconst9)*((((((IkReal)(-1.00000000000000))*(new_r01)*(sj3)))+(((cj3)*(new_r11)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[8];
IkReal x295=IKsin(j5);
IkReal x296=IKcos(j5);
IkReal x297=(((IkReal)(1.00000000000000))*(sj3));
IkReal x298=((cj3)*(x295));
IkReal x299=(((IkReal)(1.00000000000000))*(x296));
IkReal x300=((x296)*(x297));
evalcond[0]=((((new_r11)*(sj3)))+(x295)+(((cj3)*(new_r01))));
evalcond[1]=((((new_r10)*(sj3)))+((((IkReal)(-1.00000000000000))*(x299)))+(((cj3)*(new_r00))));
evalcond[2]=((x298)+((((IkReal)(-1.00000000000000))*(x300)))+(new_r01));
evalcond[3]=(((((IkReal)(-1.00000000000000))*(x295)*(x297)))+(new_r00)+((((IkReal)(-1.00000000000000))*(cj3)*(x299))));
evalcond[4]=((((cj3)*(x296)))+(((sj3)*(x295)))+(new_r11));
evalcond[5]=((x295)+((((IkReal)(-1.00000000000000))*(new_r00)*(x297)))+(((cj3)*(new_r10))));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(new_r01)*(x297)))+(((cj3)*(new_r11)))+(x296));
evalcond[7]=((x298)+((((IkReal)(-1.00000000000000))*(x300)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x301=((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30);
if( IKabs(((x301)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(cj4)*(new_r21)*(sj3)))+((((IkReal)(-1.00000000000000))*(new_r01)*(sj4))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((new_r21)*(x301))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x301)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(cj4)*(new_r21)*(sj3)))+((((IkReal)(-1.00000000000000))*(new_r01)*(sj4)))))))+IKsqr(((new_r21)*(x301)))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x301)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*((((((IkReal)(-1.00000000000000))*(cj4)*(new_r21)*(sj3)))+((((IkReal)(-1.00000000000000))*(new_r01)*(sj4)))))), ((new_r21)*(x301)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[12];
IkReal x302=IKsin(j5);
IkReal x303=IKcos(j5);
IkReal x304=((cj4)*(sj3));
IkReal x305=((cj3)*(new_r10));
IkReal x306=(((IkReal)(1.00000000000000))*(new_r01));
IkReal x307=((cj3)*(new_r11));
IkReal x308=(((IkReal)(1.00000000000000))*(new_r00));
IkReal x309=(((IkReal)(1.00000000000000))*(x303));
IkReal x310=((cj4)*(x302));
IkReal x311=(((IkReal)(1.00000000000000))*(x302));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x311))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x309))));
evalcond[2]=((x302)+(((new_r11)*(sj3)))+(((cj3)*(new_r01))));
evalcond[3]=((((new_r10)*(sj3)))+((((IkReal)(-1.00000000000000))*(x309)))+(((cj3)*(new_r00))));
evalcond[4]=((((x303)*(x304)))+(((cj3)*(x302)))+(new_r01));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(cj3)*(x309)))+(((x302)*(x304)))+(new_r00));
evalcond[6]=((((sj3)*(x302)))+((((IkReal)(-1.00000000000000))*(cj3)*(cj4)*(x309)))+(new_r11));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x310)))+(x305)+((((IkReal)(-1.00000000000000))*(sj3)*(x308))));
evalcond[8]=((x307)+((((IkReal)(-1.00000000000000))*(cj4)*(x309)))+((((IkReal)(-1.00000000000000))*(sj3)*(x306))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(cj3)*(x310)))+((((IkReal)(-1.00000000000000))*(sj3)*(x309)))+(new_r10));
evalcond[10]=((((new_r20)*(sj4)))+(((cj4)*(x305)))+((((IkReal)(-1.00000000000000))*(x304)*(x308)))+((((IkReal)(-1.00000000000000))*(x311))));
evalcond[11]=((((new_r21)*(sj4)))+(((cj4)*(x307)))+((((IkReal)(-1.00000000000000))*(x304)*(x306)))+((((IkReal)(-1.00000000000000))*(x309))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x312=((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30);
if( IKabs(((new_r20)*(x312))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x312)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((new_r00)*(sj4)))+(((cj4)*(new_r20)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((new_r20)*(x312)))+IKsqr(((x312)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((new_r00)*(sj4)))+(((cj4)*(new_r20)*(sj3)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((new_r20)*(x312)), ((x312)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((new_r00)*(sj4)))+(((cj4)*(new_r20)*(sj3)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[12];
IkReal x313=IKsin(j5);
IkReal x314=IKcos(j5);
IkReal x315=((cj4)*(sj3));
IkReal x316=((cj3)*(new_r10));
IkReal x317=(((IkReal)(1.00000000000000))*(new_r01));
IkReal x318=((cj3)*(new_r11));
IkReal x319=(((IkReal)(1.00000000000000))*(new_r00));
IkReal x320=(((IkReal)(1.00000000000000))*(x314));
IkReal x321=((cj4)*(x313));
IkReal x322=(((IkReal)(1.00000000000000))*(x313));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(sj4)*(x322)))+(new_r20));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x320))));
evalcond[2]=((((new_r11)*(sj3)))+(x313)+(((cj3)*(new_r01))));
evalcond[3]=((((new_r10)*(sj3)))+((((IkReal)(-1.00000000000000))*(x320)))+(((cj3)*(new_r00))));
evalcond[4]=((((x314)*(x315)))+(((cj3)*(x313)))+(new_r01));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(cj3)*(x320)))+(new_r00)+(((x313)*(x315))));
evalcond[6]=((((sj3)*(x313)))+((((IkReal)(-1.00000000000000))*(cj3)*(cj4)*(x320)))+(new_r11));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x321)))+(x316)+((((IkReal)(-1.00000000000000))*(sj3)*(x319))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(cj4)*(x320)))+((((IkReal)(-1.00000000000000))*(sj3)*(x317)))+(x318));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(sj3)*(x320)))+((((IkReal)(-1.00000000000000))*(cj3)*(x321)))+(new_r10));
evalcond[10]=((((cj4)*(x316)))+(((new_r20)*(sj4)))+((((IkReal)(-1.00000000000000))*(x315)*(x319)))+((((IkReal)(-1.00000000000000))*(x322))));
evalcond[11]=((((new_r21)*(sj4)))+(((cj4)*(x318)))+((((IkReal)(-1.00000000000000))*(x315)*(x317)))+((((IkReal)(-1.00000000000000))*(x320))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst5)*(new_r20))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(new_r21))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst5)*(new_r20)), ((gconst5)*(new_r21)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[12];
IkReal x323=IKsin(j5);
IkReal x324=IKcos(j5);
IkReal x325=((cj4)*(sj3));
IkReal x326=((cj3)*(new_r10));
IkReal x327=(((IkReal)(1.00000000000000))*(new_r01));
IkReal x328=((cj3)*(new_r11));
IkReal x329=(((IkReal)(1.00000000000000))*(new_r00));
IkReal x330=(((IkReal)(1.00000000000000))*(x324));
IkReal x331=((cj4)*(x323));
IkReal x332=(((IkReal)(1.00000000000000))*(x323));
evalcond[0]=((new_r20)+((((IkReal)(-1.00000000000000))*(sj4)*(x332))));
evalcond[1]=((new_r21)+((((IkReal)(-1.00000000000000))*(sj4)*(x330))));
evalcond[2]=((((new_r11)*(sj3)))+(x323)+(((cj3)*(new_r01))));
evalcond[3]=((((new_r10)*(sj3)))+((((IkReal)(-1.00000000000000))*(x330)))+(((cj3)*(new_r00))));
evalcond[4]=((((cj3)*(x323)))+(((x324)*(x325)))+(new_r01));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(cj3)*(x330)))+(((x323)*(x325)))+(new_r00));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(cj3)*(cj4)*(x330)))+(new_r11)+(((sj3)*(x323))));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x331)))+(x326)+((((IkReal)(-1.00000000000000))*(sj3)*(x329))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(sj3)*(x327)))+((((IkReal)(-1.00000000000000))*(cj4)*(x330)))+(x328));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(cj3)*(x331)))+((((IkReal)(-1.00000000000000))*(sj3)*(x330)))+(new_r10));
evalcond[10]=((((new_r20)*(sj4)))+(((cj4)*(x326)))+((((IkReal)(-1.00000000000000))*(x325)*(x329)))+((((IkReal)(-1.00000000000000))*(x332))));
evalcond[11]=((((new_r21)*(sj4)))+(((cj4)*(x328)))+((((IkReal)(-1.00000000000000))*(x325)*(x327)))+((((IkReal)(-1.00000000000000))*(x330))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
if( IKabs(((gconst4)*(new_r20))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(new_r21))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst4)*(new_r20)), ((gconst4)*(new_r21)));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
int ij5;
for(ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
int iij5;
for(iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x333=(((IkReal)(1.00000000000000))*(sj4));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x333)*(IKsin(j5))))+(new_r20));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x333)*(IKcos(j5))))+(new_r21));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst11;
gconst11=IKsign(sj4);
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign(sj4);
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[12];
IkReal x334=(((IkReal)(-1.00000000000000))+(new_r22));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod((((IkReal)(3.14159265358979))+(j4)), (IkReal)(6.28318530717959))));
evalcond[1]=x334;
evalcond[2]=x334;
evalcond[3]=new_r12;
evalcond[4]=new_r02;
evalcond[5]=new_r20;
evalcond[6]=new_r21;
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=new_r20;
evalcond[10]=new_r21;
evalcond[11]=x334;
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst13;
gconst13=IKsign((((((IkReal)(-1.00000000000000))*(new_r02)*(new_r11)))+(((new_r01)*(new_r12)))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*(new_r02)*(new_r11)))+(((new_r01)*(new_r12))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign(((((new_r12)*(sj5)))+((((IkReal)(-1.00000000000000))*(cj5)*(new_r02)))));
dummyeval[0]=((((new_r12)*(sj5)))+((((IkReal)(-1.00000000000000))*(cj5)*(new_r02))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x335=((gconst14)*(new_r01));
if( IKabs(((new_r02)*(x335))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r12)*(x335))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((new_r02)*(x335)), (((IkReal)(-1.00000000000000))*(new_r12)*(x335)));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
int ij3;
for(ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[10];
IkReal x336=IKsin(j3);
IkReal x337=IKcos(j3);
IkReal x338=(((IkReal)(1.00000000000000))*(cj5));
IkReal x339=((sj5)*(x336));
IkReal x340=((cj5)*(x336));
IkReal x341=((sj5)*(x337));
IkReal x342=(((IkReal)(1.00000000000000))*(x336));
IkReal x343=((x337)*(x338));
evalcond[0]=((((new_r02)*(x337)))+(((new_r12)*(x336))));
evalcond[1]=((((new_r01)*(x337)))+(sj5)+(((new_r11)*(x336))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r02)*(x342)))+(((new_r12)*(x337))));
evalcond[3]=((((new_r00)*(x337)))+(((new_r10)*(x336)))+((((IkReal)(-1.00000000000000))*(x338))));
evalcond[4]=((x340)+(x341)+(new_r01));
evalcond[5]=((x339)+((((IkReal)(-1.00000000000000))*(x343)))+(new_r00));
evalcond[6]=((x339)+((((IkReal)(-1.00000000000000))*(x343)))+(new_r11));
evalcond[7]=((((new_r10)*(x337)))+((((IkReal)(-1.00000000000000))*(new_r00)*(x342)))+((((IkReal)(-1.00000000000000))*(sj5))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(new_r01)*(x342)))+((((IkReal)(-1.00000000000000))*(x338)))+(((new_r11)*(x337))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(x341)))+(new_r10)+((((IkReal)(-1.00000000000000))*(x336)*(x338))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x344=((gconst13)*(sj5));
if( IKabs(((new_r02)*(x344))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r12)*(x344))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((new_r02)*(x344)), (((IkReal)(-1.00000000000000))*(new_r12)*(x344)));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
int ij3;
for(ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[10];
IkReal x345=IKsin(j3);
IkReal x346=IKcos(j3);
IkReal x347=(((IkReal)(1.00000000000000))*(cj5));
IkReal x348=((sj5)*(x345));
IkReal x349=((cj5)*(x345));
IkReal x350=((sj5)*(x346));
IkReal x351=(((IkReal)(1.00000000000000))*(x345));
IkReal x352=((x346)*(x347));
evalcond[0]=((((new_r02)*(x346)))+(((new_r12)*(x345))));
evalcond[1]=((sj5)+(((new_r11)*(x345)))+(((new_r01)*(x346))));
evalcond[2]=((((new_r12)*(x346)))+((((IkReal)(-1.00000000000000))*(new_r02)*(x351))));
evalcond[3]=((((new_r00)*(x346)))+(((new_r10)*(x345)))+((((IkReal)(-1.00000000000000))*(x347))));
evalcond[4]=((x349)+(x350)+(new_r01));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(x352)))+(x348)+(new_r00));
evalcond[6]=(((((IkReal)(-1.00000000000000))*(x352)))+(x348)+(new_r11));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(new_r00)*(x351)))+(((new_r10)*(x346)))+((((IkReal)(-1.00000000000000))*(sj5))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(new_r01)*(x351)))+(((new_r11)*(x346)))+((((IkReal)(-1.00000000000000))*(x347))));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(x350)))+((((IkReal)(-1.00000000000000))*(x345)*(x347)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
IkReal x353=(((IkReal)(1.00000000000000))+(new_r22));
evalcond[0]=(((IkReal)(-3.14159265358979))+(IKfmod(j4, (IkReal)(6.28318530717959))));
evalcond[1]=x353;
evalcond[2]=x353;
evalcond[3]=new_r12;
evalcond[4]=new_r02;
evalcond[5]=new_r20;
evalcond[6]=new_r21;
evalcond[7]=new_r20;
evalcond[8]=new_r21;
evalcond[9]=(((IkReal)(-1.00000000000000))*(new_r20));
evalcond[10]=(((IkReal)(-1.00000000000000))*(new_r21));
evalcond[11]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign((((((IkReal)(-1.00000000000000))*(new_r02)*(new_r11)))+(((new_r01)*(new_r12)))));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*(new_r02)*(new_r11)))+(((new_r01)*(new_r12))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst16;
gconst16=IKsign(((((cj5)*(new_r12)))+((((IkReal)(-1.00000000000000))*(new_r02)*(sj5)))));
dummyeval[0]=((((cj5)*(new_r12)))+((((IkReal)(-1.00000000000000))*(new_r02)*(sj5))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x354=((gconst16)*(new_r11));
if( IKabs(((new_r02)*(x354))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r12)*(x354))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((new_r02)*(x354)), (((IkReal)(-1.00000000000000))*(new_r12)*(x354)));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
int ij3;
for(ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[10];
IkReal x355=IKsin(j3);
IkReal x356=IKcos(j3);
IkReal x357=(((IkReal)(1.00000000000000))*(cj5));
IkReal x358=((sj5)*(x356));
IkReal x359=(((IkReal)(1.00000000000000))*(x355));
IkReal x360=((x355)*(x357));
evalcond[0]=((((new_r12)*(x355)))+(((new_r02)*(x356))));
evalcond[1]=((((new_r01)*(x356)))+(sj5)+(((new_r11)*(x355))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r02)*(x359)))+(((new_r12)*(x356))));
evalcond[3]=((((new_r10)*(x355)))+(((new_r00)*(x356)))+((((IkReal)(-1.00000000000000))*(x357))));
evalcond[4]=((x358)+(new_r01)+((((IkReal)(-1.00000000000000))*(x360))));
evalcond[5]=((new_r00)+((((IkReal)(-1.00000000000000))*(x356)*(x357)))+((((IkReal)(-1.00000000000000))*(sj5)*(x359))));
evalcond[6]=((((sj5)*(x355)))+(new_r11)+(((cj5)*(x356))));
evalcond[7]=((sj5)+((((IkReal)(-1.00000000000000))*(new_r00)*(x359)))+(((new_r10)*(x356))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(new_r01)*(x359)))+(cj5)+(((new_r11)*(x356))));
evalcond[9]=((x358)+((((IkReal)(-1.00000000000000))*(x360)))+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x361=((gconst15)*(sj5));
if( IKabs(((new_r02)*(x361))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(new_r12)*(x361))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((new_r02)*(x361)), (((IkReal)(-1.00000000000000))*(new_r12)*(x361)));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
int ij3;
for(ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[10];
IkReal x362=IKsin(j3);
IkReal x363=IKcos(j3);
IkReal x364=(((IkReal)(1.00000000000000))*(cj5));
IkReal x365=((sj5)*(x363));
IkReal x366=(((IkReal)(1.00000000000000))*(x362));
IkReal x367=((x362)*(x364));
evalcond[0]=((((new_r12)*(x362)))+(((new_r02)*(x363))));
evalcond[1]=((sj5)+(((new_r01)*(x363)))+(((new_r11)*(x362))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(new_r02)*(x366)))+(((new_r12)*(x363))));
evalcond[3]=((((new_r10)*(x362)))+((((IkReal)(-1.00000000000000))*(x364)))+(((new_r00)*(x363))));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(x367)))+(x365)+(new_r01));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(x363)*(x364)))+((((IkReal)(-1.00000000000000))*(sj5)*(x366)))+(new_r00));
evalcond[6]=((((sj5)*(x362)))+(((cj5)*(x363)))+(new_r11));
evalcond[7]=((((new_r10)*(x363)))+(sj5)+((((IkReal)(-1.00000000000000))*(new_r00)*(x366))));
evalcond[8]=((((new_r11)*(x363)))+((((IkReal)(-1.00000000000000))*(new_r01)*(x366)))+(cj5));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(x367)))+(x365)+(new_r10));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst12)*(new_r02))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(gconst12)*(new_r12))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst12)*(new_r02)), (((IkReal)(-1.00000000000000))*(gconst12)*(new_r12)));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
int ij3;
for(ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[18];
IkReal x368=IKsin(j3);
IkReal x369=IKcos(j3);
IkReal x370=(((IkReal)(1.00000000000000))*(cj5));
IkReal x371=(((IkReal)(1.00000000000000))*(cj4));
IkReal x372=((new_r11)*(x369));
IkReal x373=((sj4)*(x368));
IkReal x374=((sj5)*(x369));
IkReal x375=((cj4)*(x369));
IkReal x376=((sj4)*(x369));
IkReal x377=((new_r00)*(x368));
IkReal x378=((cj4)*(x368));
IkReal x379=((new_r01)*(x368));
IkReal x380=((new_r02)*(x368));
evalcond[0]=((x376)+(new_r12));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x373)))+(new_r02));
evalcond[2]=((((new_r12)*(x368)))+(((new_r02)*(x369))));
evalcond[3]=((((new_r11)*(x368)))+(((new_r01)*(x369)))+(sj5));
evalcond[4]=((sj4)+((((IkReal)(-1.00000000000000))*(x380)))+(((new_r12)*(x369))));
evalcond[5]=((((new_r10)*(x368)))+((((IkReal)(-1.00000000000000))*(x370)))+(((new_r00)*(x369))));
evalcond[6]=((x374)+(((cj5)*(x378)))+(new_r01));
evalcond[7]=((((sj5)*(x378)))+((((IkReal)(-1.00000000000000))*(x369)*(x370)))+(new_r00));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(x370)*(x375)))+(((sj5)*(x368)))+(new_r11));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(sj5)*(x371)))+(((new_r10)*(x369)))+((((IkReal)(-1.00000000000000))*(x377))));
evalcond[10]=((x372)+((((IkReal)(-1.00000000000000))*(x379)))+((((IkReal)(-1.00000000000000))*(cj4)*(x370))));
evalcond[11]=(((((IkReal)(-1.00000000000000))*(x371)*(x374)))+((((IkReal)(-1.00000000000000))*(x368)*(x370)))+(new_r10));
evalcond[12]=((((new_r22)*(sj4)))+(((new_r12)*(x375)))+((((IkReal)(-1.00000000000000))*(x371)*(x380))));
evalcond[13]=(((((IkReal)(-1.00000000000000))*(new_r10)*(x376)))+(((cj4)*(new_r20)))+(((new_r00)*(x373))));
evalcond[14]=((((new_r01)*(x373)))+(((cj4)*(new_r21)))+((((IkReal)(-1.00000000000000))*(sj4)*(x372))));
evalcond[15]=(((IkReal)(-1.00000000000000))+(((cj4)*(new_r22)))+((((IkReal)(-1.00000000000000))*(new_r12)*(x376)))+(((new_r02)*(x373))));
evalcond[16]=(((((IkReal)(-1.00000000000000))*(x371)*(x377)))+(((new_r20)*(sj4)))+(((new_r10)*(x375)))+((((IkReal)(-1.00000000000000))*(sj5))));
evalcond[17]=((((new_r21)*(sj4)))+((((IkReal)(-1.00000000000000))*(x370)))+(((cj4)*(x372)))+((((IkReal)(-1.00000000000000))*(x371)*(x379))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  || IKabs(evalcond[12]) > 0.000001  || IKabs(evalcond[13]) > 0.000001  || IKabs(evalcond[14]) > 0.000001  || IKabs(evalcond[15]) > 0.000001  || IKabs(evalcond[16]) > 0.000001  || IKabs(evalcond[17]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
if( IKabs(((gconst11)*(new_r02))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((IkReal)(-1.00000000000000))*(gconst11)*(new_r12))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst11)*(new_r02)), (((IkReal)(-1.00000000000000))*(gconst11)*(new_r12)));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
int ij3;
for(ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
int iij3;
for(iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[18];
IkReal x381=IKsin(j3);
IkReal x382=IKcos(j3);
IkReal x383=(((IkReal)(1.00000000000000))*(cj5));
IkReal x384=(((IkReal)(1.00000000000000))*(cj4));
IkReal x385=((new_r11)*(x382));
IkReal x386=((sj4)*(x381));
IkReal x387=((sj5)*(x382));
IkReal x388=((cj4)*(x382));
IkReal x389=((sj4)*(x382));
IkReal x390=((new_r00)*(x381));
IkReal x391=((cj4)*(x381));
IkReal x392=((new_r01)*(x381));
IkReal x393=((new_r02)*(x381));
evalcond[0]=((x389)+(new_r12));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x386)))+(new_r02));
evalcond[2]=((((new_r12)*(x381)))+(((new_r02)*(x382))));
evalcond[3]=((sj5)+(((new_r01)*(x382)))+(((new_r11)*(x381))));
evalcond[4]=(((((IkReal)(-1.00000000000000))*(x393)))+(sj4)+(((new_r12)*(x382))));
evalcond[5]=(((((IkReal)(-1.00000000000000))*(x383)))+(((new_r10)*(x381)))+(((new_r00)*(x382))));
evalcond[6]=((x387)+(((cj5)*(x391)))+(new_r01));
evalcond[7]=(((((IkReal)(-1.00000000000000))*(x382)*(x383)))+(new_r00)+(((sj5)*(x391))));
evalcond[8]=(((((IkReal)(-1.00000000000000))*(x383)*(x388)))+(((sj5)*(x381)))+(new_r11));
evalcond[9]=(((((IkReal)(-1.00000000000000))*(x390)))+((((IkReal)(-1.00000000000000))*(sj5)*(x384)))+(((new_r10)*(x382))));
evalcond[10]=(((((IkReal)(-1.00000000000000))*(x392)))+(x385)+((((IkReal)(-1.00000000000000))*(cj4)*(x383))));
evalcond[11]=(((((IkReal)(-1.00000000000000))*(x384)*(x387)))+((((IkReal)(-1.00000000000000))*(x381)*(x383)))+(new_r10));
evalcond[12]=((((new_r22)*(sj4)))+(((new_r12)*(x388)))+((((IkReal)(-1.00000000000000))*(x384)*(x393))));
evalcond[13]=(((((IkReal)(-1.00000000000000))*(new_r10)*(x389)))+(((new_r00)*(x386)))+(((cj4)*(new_r20))));
evalcond[14]=((((cj4)*(new_r21)))+(((new_r01)*(x386)))+((((IkReal)(-1.00000000000000))*(sj4)*(x385))));
evalcond[15]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.00000000000000))*(new_r12)*(x389)))+(((cj4)*(new_r22)))+(((new_r02)*(x386))));
evalcond[16]=((((new_r20)*(sj4)))+(((new_r10)*(x388)))+((((IkReal)(-1.00000000000000))*(x384)*(x390)))+((((IkReal)(-1.00000000000000))*(sj5))));
evalcond[17]=(((((IkReal)(-1.00000000000000))*(x383)))+(((new_r21)*(sj4)))+(((cj4)*(x385)))+((((IkReal)(-1.00000000000000))*(x384)*(x392))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  || IKabs(evalcond[12]) > 0.000001  || IKabs(evalcond[13]) > 0.000001  || IKabs(evalcond[14]) > 0.000001  || IKabs(evalcond[15]) > 0.000001  || IKabs(evalcond[16]) > 0.000001  || IKabs(evalcond[17]) > 0.000001  )
{
continue;
}
}

{
IkSingleDOFSolution vinfos[7];
IkSingleDOFSolution_Init( vinfos, 7 );
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 17;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
int vfree[0];
IkSolutionList_AddSolution(solutions, vinfos, 7, vfree, 0);
}
}
}

}

}
}
}

}

}
}
}
}
}/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45;
x0=IKsin(j[0]);
x1=IKcos(j[2]);
x2=IKsin(j[1]);
x3=IKcos(j[1]);
x4=IKsin(j[2]);
x5=IKcos(j[3]);
x6=IKcos(j[0]);
x7=IKsin(j[3]);
x8=IKsin(j[4]);
x9=IKcos(j[4]);
x10=IKsin(j[5]);
x11=IKcos(j[5]);
x12=(((IkReal)(0.120000000000000))*(x0));
x13=(((IkReal)(0.120000000000000))*(x4));
x14=(((IkReal)(0.348000000000000))*(x2));
x15=(((IkReal)(1.00000000000000))*(x5));
x16=(((IkReal)(0.346000000000000))*(x2));
x17=(((IkReal)(1.00000000000000))*(x2));
x18=(((IkReal)(1.00000000000000))*(x8));
x19=((x6)*(x7));
x20=((x1)*(x6));
x21=((x5)*(x8));
x22=((x1)*(x2));
x23=((x0)*(x3));
x24=((x0)*(x7));
x25=((x1)*(x3));
x26=((x3)*(x4));
x27=(((IkReal)(1.00000000000000))*(x19));
x28=(((IkReal)(1.00000000000000))*(x24));
x29=((x26)+(x22));
x30=((x25)+((((IkReal)(-1.00000000000000))*(x17)*(x4))));
x31=((x30)*(x8));
x32=((x29)*(x7));
x33=(((((IkReal)(-1.00000000000000))*(x1)*(x23)))+(((x0)*(x2)*(x4))));
x34=((((x23)*(x4)))+(((x0)*(x22))));
x35=((((x20)*(x3)))+((((IkReal)(-1.00000000000000))*(x17)*(x4)*(x6))));
x36=((x29)*(x5)*(x9));
x37=((x33)*(x5));
x38=(((((IkReal)(-1.00000000000000))*(x17)*(x20)))+((((IkReal)(-1.00000000000000))*(x26)*(x6))));
x39=((x35)*(x5));
x40=((x38)*(x9));
x41=((x38)*(x8));
x42=((((x5)*(x6)))+(((x33)*(x7))));
x43=((((x35)*(x7)))+(((x0)*(x5))));
x44=((((x30)*(x9)))+(((x21)*((((((IkReal)(-1.00000000000000))*(x1)*(x17)))+((((IkReal)(-1.00000000000000))*(x26))))))));
x45=((((x8)*(((x27)+((((IkReal)(-1.00000000000000))*(x15)*(x33)))))))+(((x34)*(x9))));
eerot[0]=((((x11)*(x42)))+(((x10)*(((((x34)*(x8)))+(((x9)*(((x37)+((((IkReal)(-1.00000000000000))*(x19))))))))))));
eerot[1]=x45;
eerot[2]=((((x10)*(x42)))+((((IkReal)(-1.00000000000000))*(x11)*(((((x18)*(x34)))+((((IkReal)(1.00000000000000))*(x9)*(((x37)+((((IkReal)(-1.00000000000000))*(x27))))))))))));
eetrans[0]=(((((IkReal)(0.348000000000000))*(x23)*(x4)))+(((x0)*(x16)))+(((x0)*(x1)*(x14)))+(((j[6])*(x45)))+(((x9)*(((((x12)*(x22)))+(((x12)*(x26)))))))+(((x8)*((((((IkReal)(0.120000000000000))*(x19)))+((((IkReal)(-0.120000000000000))*(x37))))))));
eerot[3]=((((x10)*(((x41)+(((x9)*((((((IkReal)(-1.00000000000000))*(x28)))+(x39)))))))))+(((x11)*(x43))));
eerot[4]=((((x8)*(((x28)+((((IkReal)(-1.00000000000000))*(x15)*(x35)))))))+(x40));
eerot[5]=((((x10)*(x43)))+((((IkReal)(-1.00000000000000))*(x11)*((((((IkReal)(1.00000000000000))*(x9)*((((((IkReal)(-1.00000000000000))*(x24)))+(x39)))))+((((IkReal)(1.00000000000000))*(x41))))))));
IkReal x46=(((IkReal)(1.00000000000000))*(x6));
eetrans[1]=(((((IkReal)(-0.348000000000000))*(x26)*(x6)))+((((IkReal)(-1.00000000000000))*(x14)*(x20)))+((((IkReal)(-1.00000000000000))*(x16)*(x46)))+(((x8)*((((((IkReal)(-0.120000000000000))*(x39)))+(((x12)*(x7)))))))+(((j[6])*(((((x8)*(((x28)+((((IkReal)(-1.00000000000000))*(x39)))))))+(x40)))))+(((x9)*((((((IkReal)(-0.120000000000000))*(x2)*(x20)))+((((IkReal)(-1.00000000000000))*(x13)*(x3)*(x46))))))));
eerot[6]=((((x10)*(((x31)+(x36)))))+(((x11)*(x32))));
eerot[7]=x44;
eerot[8]=((((x11)*((((((IkReal)(-1.00000000000000))*(x18)*(x30)))+((((IkReal)(-1.00000000000000))*(x15)*(x29)*(x9)))))))+(((x10)*(x32))));
IkReal x47=(((IkReal)(1.00000000000000))*(x13));
eetrans[2]=(((IkReal)(0.261900000000000))+(((x21)*((((((IkReal)(-1.00000000000000))*(x3)*(x47)))+((((IkReal)(-0.120000000000000))*(x22)))))))+((((IkReal)(0.348000000000000))*(x25)))+((((IkReal)(0.346000000000000))*(x3)))+((((IkReal)(-1.00000000000000))*(x14)*(x4)))+(((x9)*((((((IkReal)(-1.00000000000000))*(x2)*(x47)))+((((IkReal)(0.120000000000000))*(x25)))))))+(((j[6])*(x44))));
}

IKFAST_API int GetNumFreeParameters() { return 1; }
IKFAST_API int* GetFreeParameters() { static int freeparams[] = {6}; return freeparams; }
IKFAST_API int GetNumJoints() { return IKFAST_NUM_JOINTS; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

int ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionList * solutions) {
j0=NAN; _ij0[0] = -1; _ij0[1] = -1; _nj0 = -1; j1=NAN; _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j2=NAN; _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=NAN; _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=NAN; _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=NAN; _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1;  _ij6[0] = -1; _ij6[1] = -1; _nj6 = 0; 
int dummyiter;
for(dummyiter = 0; dummyiter < 1; ++dummyiter) {
    IkSolutionList_Clear(solutions);
j6=pfree[0]; cj6=cos(pfree[0]); sj6=sin(pfree[0]);
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=r00;
new_r01=(((IkReal)(-1.00000000000000))*(r02));
new_r02=r01;
new_px=(((((IkReal)(-0.120000000000000))*(r01)))+(px));
new_r10=r10;
new_r11=(((IkReal)(-1.00000000000000))*(r12));
new_r12=r11;
new_py=((py)+((((IkReal)(-0.120000000000000))*(r11))));
new_r20=r20;
new_r21=(((IkReal)(-1.00000000000000))*(r22));
new_r22=r21;
new_pz=(((IkReal)(-0.261900000000000))+(pz)+((((IkReal)(-0.120000000000000))*(r21))));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((pz)*(pz))+((py)*(py)));
npx=((((py)*(r10)))+(((pz)*(r20)))+(((px)*(r00))));
npy=((((px)*(r01)))+(((pz)*(r21)))+(((py)*(r11))));
npz=((((py)*(r12)))+(((pz)*(r22)))+(((px)*(r02))));
rxp0_0=(((((IkReal)(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+((((IkReal)(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((py)*(r00)))+((((IkReal)(-1.00000000000000))*(px)*(r10))));
rxp1_0=((((pz)*(r11)))+((((IkReal)(-1.00000000000000))*(py)*(r21))));
rxp1_1=(((((IkReal)(-1.00000000000000))*(pz)*(r01)))+(((px)*(r21))));
rxp1_2=((((py)*(r01)))+((((IkReal)(-1.00000000000000))*(px)*(r11))));
rxp2_0=(((((IkReal)(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+((((IkReal)(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((py)*(r02)))+((((IkReal)(-1.00000000000000))*(px)*(r12))));
{
IkReal j2array[2], cj2array[2], sj2array[2];
bool j2valid[2]={false};
_nj2 = 2;
cj2array[0]=(((IkReal)(-1.00001661019201))+((((IkReal)(4.15254800345492))*((j6)*(j6))))+((((IkReal)(4.15254800345492))*(pp)))+((((IkReal)(-8.30509600690984))*(j6)*(npz))));
if( cj2array[0] >= -1-IKFAST_SINCOS_THRESH && cj2array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j2valid[0] = j2valid[1] = true;
    j2array[0] = IKacos(cj2array[0]);
    sj2array[0] = IKsin(j2array[0]);
    cj2array[1] = cj2array[0];
    j2array[1] = -j2array[0];
    sj2array[1] = -sj2array[0];
}
else if( isnan(cj2array[0]) )
{
    // probably any value will work
    j2valid[0] = true;
    cj2array[0] = 1; sj2array[0] = 0; j2array[0] = 0;
}
int ij2;
for(ij2 = 0; ij2 < 2; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
int iij2;
for(iij2 = ij2+1; iij2 < 2; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];

{
IkReal j0array[2], cj0array[2], sj0array[2];
bool j0valid[2]={false};
_nj0 = 2;
if( IKabs(((((j6)*(r02)))+((((IkReal)(-1.00000000000000))*(px))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((j6)*(r12)))+((((IkReal)(-1.00000000000000))*(py))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x48=IKatan2(((((j6)*(r02)))+((((IkReal)(-1.00000000000000))*(px)))), ((((j6)*(r12)))+((((IkReal)(-1.00000000000000))*(py)))));
j0array[0]=(((IkReal)(-1.00000000000000))*(x48));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
j0array[1]=(((IkReal)(3.14159265358979))+((((IkReal)(-1.00000000000000))*(x48))));
sj0array[1]=IKsin(j0array[1]);
cj0array[1]=IKcos(j0array[1]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
if( j0array[1] > IKPI )
{
    j0array[1]-=IK2PI;
}
else if( j0array[1] < -IKPI )
{    j0array[1]+=IK2PI;
}
j0valid[1] = true;
int ij0;
for(ij0 = 0; ij0 < 2; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
int iij0;
for(iij0 = ij0+1; iij0 < 2; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

{
IkReal dummyeval[1];
IkReal gconst0;
gconst0=IKsign((((IkReal)(-7482.25000000000))+((((IkReal)(-7569.00000000000))*((cj2)*(cj2))))+((((IkReal)(-15051.0000000000))*(cj2)))+((((IkReal)(-7569.00000000000))*((sj2)*(sj2))))));
dummyeval[0]=(((IkReal)(-1.00000000000000))+((((IkReal)(-1.01159410605099))*((cj2)*(cj2))))+((((IkReal)(-2.01156069364162))*(cj2)))+((((IkReal)(-1.01159410605099))*((sj2)*(sj2)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
IkReal x49=((px)*(sj0));
IkReal x50=(((IkReal)(86.5000000000000))*(cj0));
IkReal x51=((j6)*(r12));
IkReal x52=(((IkReal)(87.0000000000000))*(cj2));
IkReal x53=(((IkReal)(87.0000000000000))*(sj2));
IkReal x54=((j6)*(r02)*(sj0));
gconst1=IKsign((((((IkReal)(-1.00000000000000))*(x49)*(x52)))+(((py)*(x50)))+(((x52)*(x54)))+(((cj0)*(py)*(x52)))+((((IkReal)(-1.00000000000000))*(cj0)*(x51)*(x52)))+((((IkReal)(-1.00000000000000))*(pz)*(x53)))+((((IkReal)(-1.00000000000000))*(x50)*(x51)))+(((j6)*(r22)*(x53)))+((((IkReal)(-86.5000000000000))*(x49)))+((((IkReal)(86.5000000000000))*(x54)))));
IkReal x55=(((IkReal)(1.00578034682081))*(sj2));
IkReal x56=((j6)*(r12));
IkReal x57=(((IkReal)(1.00578034682081))*(cj2));
IkReal x58=((px)*(sj0));
IkReal x59=((cj0)*(x57));
IkReal x60=((j6)*(r02)*(sj0));
dummyeval[0]=((x60)+((((IkReal)(-1.00000000000000))*(cj0)*(x56)))+(((py)*(x59)))+(((cj0)*(py)))+((((IkReal)(-1.00000000000000))*(x57)*(x58)))+((((IkReal)(-1.00000000000000))*(pz)*(x55)))+(((j6)*(r22)*(x55)))+(((x57)*(x60)))+((((IkReal)(-1.00000000000000))*(x58)))+((((IkReal)(-1.00000000000000))*(x56)*(x59))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal x61=(((IkReal)(1.00578034682081))*(sj2));
IkReal x62=((j6)*(r22));
IkReal x63=(((IkReal)(1.00578034682081))*(cj2));
dummyeval[0]=(((((IkReal)(-1.00000000000000))*(x62)*(x63)))+(((j6)*(r02)*(sj0)*(x61)))+((((IkReal)(-1.00000000000000))*(x62)))+(pz)+(((pz)*(x63)))+((((IkReal)(-1.00000000000000))*(px)*(sj0)*(x61)))+(((cj0)*(py)*(x61)))+((((IkReal)(-1.00000000000000))*(cj0)*(j6)*(r12)*(x61))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x64=(j6)*(j6);
IkReal x65=(((IkReal)(250.000000000000))*(j6));
IkReal x66=((cj0)*(pz));
IkReal x67=((cj2)*(pz));
IkReal x68=((px)*(sj0));
IkReal x69=((cj0)*(py));
IkReal x70=(((IkReal)(21750.0000000000))*(sj2));
IkReal x71=((r02)*(sj0));
IkReal x72=((j6)*(r22));
IkReal x73=(((IkReal)(87.0000000000000))*(sj2));
IkReal x74=((cj0)*(r12));
IkReal x75=(((IkReal)(250.000000000000))*(r22)*(x64));
if( IKabs(((((IKabs((((((IkReal)(87.0000000000000))*(x67)))+((((IkReal)(-1.00000000000000))*(x68)*(x73)))+(((j6)*(x71)*(x73)))+((((IkReal)(-86.5000000000000))*(x72)))+((((IkReal)(86.5000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(j6)*(x73)*(x74)))+(((x69)*(x73)))+((((IkReal)(-87.0000000000000))*(cj2)*(x72))))) != 0)?((IkReal)1/((((((IkReal)(87.0000000000000))*(x67)))+((((IkReal)(-1.00000000000000))*(x68)*(x73)))+(((j6)*(x71)*(x73)))+((((IkReal)(-86.5000000000000))*(x72)))+((((IkReal)(86.5000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(j6)*(x73)*(x74)))+(((x69)*(x73)))+((((IkReal)(-87.0000000000000))*(cj2)*(x72)))))):(IkReal)1.0e30))*(((((x71)*(x75)))+(((r12)*(x65)*(x66)))+((((IkReal)(-30.2760000000000))*(cj2)*(sj2)))+((((IkReal)(-1.00000000000000))*(r22)*(x65)*(x68)))+((((IkReal)(-30.1020000000000))*(sj2)))+((((IkReal)(250.000000000000))*(pz)*(x68)))+(((r22)*(x65)*(x69)))+((((IkReal)(-1.00000000000000))*(pz)*(x65)*(x71)))+((((IkReal)(-250.000000000000))*(py)*(x66)))+((((IkReal)(-1.00000000000000))*(x74)*(x75))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs((((((IkReal)(21750.0000000000))*(cj2)*(x72)))+(((x68)*(x70)))+((((IkReal)(-21625.0000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x69)*(x70)))+((((IkReal)(-21750.0000000000))*(x67)))+((((IkReal)(-1.00000000000000))*(j6)*(x70)*(x71)))+((((IkReal)(21625.0000000000))*(x72)))+(((j6)*(x70)*(x74))))) != 0)?((IkReal)1/((((((IkReal)(21750.0000000000))*(cj2)*(x72)))+(((x68)*(x70)))+((((IkReal)(-21625.0000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x69)*(x70)))+((((IkReal)(-21750.0000000000))*(x67)))+((((IkReal)(-1.00000000000000))*(j6)*(x70)*(x71)))+((((IkReal)(21625.0000000000))*(x72)))+(((j6)*(x70)*(x74)))))):(IkReal)1.0e30))*((((((IkReal)(7569.00000000000))*((sj2)*(sj2))))+((((IkReal)(-62500.0000000000))*(x64)*((r22)*(r22))))+((((IkReal)(125000.000000000))*(pz)*(x72)))+((((IkReal)(-62500.0000000000))*((pz)*(pz)))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs((((((IkReal)(87.0000000000000))*(x67)))+((((IkReal)(-1.00000000000000))*(x68)*(x73)))+(((j6)*(x71)*(x73)))+((((IkReal)(-86.5000000000000))*(x72)))+((((IkReal)(86.5000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(j6)*(x73)*(x74)))+(((x69)*(x73)))+((((IkReal)(-87.0000000000000))*(cj2)*(x72))))) != 0)?((IkReal)1/((((((IkReal)(87.0000000000000))*(x67)))+((((IkReal)(-1.00000000000000))*(x68)*(x73)))+(((j6)*(x71)*(x73)))+((((IkReal)(-86.5000000000000))*(x72)))+((((IkReal)(86.5000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(j6)*(x73)*(x74)))+(((x69)*(x73)))+((((IkReal)(-87.0000000000000))*(cj2)*(x72)))))):(IkReal)1.0e30))*(((((x71)*(x75)))+(((r12)*(x65)*(x66)))+((((IkReal)(-30.2760000000000))*(cj2)*(sj2)))+((((IkReal)(-1.00000000000000))*(r22)*(x65)*(x68)))+((((IkReal)(-30.1020000000000))*(sj2)))+((((IkReal)(250.000000000000))*(pz)*(x68)))+(((r22)*(x65)*(x69)))+((((IkReal)(-1.00000000000000))*(pz)*(x65)*(x71)))+((((IkReal)(-250.000000000000))*(py)*(x66)))+((((IkReal)(-1.00000000000000))*(x74)*(x75)))))))+IKsqr(((((IKabs((((((IkReal)(21750.0000000000))*(cj2)*(x72)))+(((x68)*(x70)))+((((IkReal)(-21625.0000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x69)*(x70)))+((((IkReal)(-21750.0000000000))*(x67)))+((((IkReal)(-1.00000000000000))*(j6)*(x70)*(x71)))+((((IkReal)(21625.0000000000))*(x72)))+(((j6)*(x70)*(x74))))) != 0)?((IkReal)1/((((((IkReal)(21750.0000000000))*(cj2)*(x72)))+(((x68)*(x70)))+((((IkReal)(-21625.0000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x69)*(x70)))+((((IkReal)(-21750.0000000000))*(x67)))+((((IkReal)(-1.00000000000000))*(j6)*(x70)*(x71)))+((((IkReal)(21625.0000000000))*(x72)))+(((j6)*(x70)*(x74)))))):(IkReal)1.0e30))*((((((IkReal)(7569.00000000000))*((sj2)*(sj2))))+((((IkReal)(-62500.0000000000))*(x64)*((r22)*(r22))))+((((IkReal)(125000.000000000))*(pz)*(x72)))+((((IkReal)(-62500.0000000000))*((pz)*(pz))))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IKabs((((((IkReal)(87.0000000000000))*(x67)))+((((IkReal)(-1.00000000000000))*(x68)*(x73)))+(((j6)*(x71)*(x73)))+((((IkReal)(-86.5000000000000))*(x72)))+((((IkReal)(86.5000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(j6)*(x73)*(x74)))+(((x69)*(x73)))+((((IkReal)(-87.0000000000000))*(cj2)*(x72))))) != 0)?((IkReal)1/((((((IkReal)(87.0000000000000))*(x67)))+((((IkReal)(-1.00000000000000))*(x68)*(x73)))+(((j6)*(x71)*(x73)))+((((IkReal)(-86.5000000000000))*(x72)))+((((IkReal)(86.5000000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(j6)*(x73)*(x74)))+(((x69)*(x73)))+((((IkReal)(-87.0000000000000))*(cj2)*(x72)))))):(IkReal)1.0e30))*(((((x71)*(x75)))+(((r12)*(x65)*(x66)))+((((IkReal)(-30.2760000000000))*(cj2)*(sj2)))+((((IkReal)(-1.00000000000000))*(r22)*(x65)*(x68)))+((((IkReal)(-30.1020000000000))*(sj2)))+((((IkReal)(250.000000000000))*(pz)*(x68)))+(((r22)*(x65)*(x69)))+((((IkReal)(-1.00000000000000))*(pz)*(x65)*(x71)))+((((IkReal)(-250.000000000000))*(py)*(x66)))+((((IkReal)(-1.00000000000000))*(x74)*(x75)))))), ((((IKabs((((((IkReal)(21750.0000000000))*(cj2)*(x72)))+(((x68)*(x70)))+((((IkReal)(-21625.0000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x69)*(x70)))+((((IkReal)(-21750.0000000000))*(x67)))+((((IkReal)(-1.00000000000000))*(j6)*(x70)*(x71)))+((((IkReal)(21625.0000000000))*(x72)))+(((j6)*(x70)*(x74))))) != 0)?((IkReal)1/((((((IkReal)(21750.0000000000))*(cj2)*(x72)))+(((x68)*(x70)))+((((IkReal)(-21625.0000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x69)*(x70)))+((((IkReal)(-21750.0000000000))*(x67)))+((((IkReal)(-1.00000000000000))*(j6)*(x70)*(x71)))+((((IkReal)(21625.0000000000))*(x72)))+(((j6)*(x70)*(x74)))))):(IkReal)1.0e30))*((((((IkReal)(7569.00000000000))*((sj2)*(sj2))))+((((IkReal)(-62500.0000000000))*(x64)*((r22)*(r22))))+((((IkReal)(125000.000000000))*(pz)*(x72)))+((((IkReal)(-62500.0000000000))*((pz)*(pz))))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x76=IKcos(j1);
IkReal x77=IKsin(j1);
IkReal x78=((r02)*(sj0));
IkReal x79=((px)*(sj0));
IkReal x80=(((IkReal)(0.348000000000000))*(sj2));
IkReal x81=((cj0)*(r12));
IkReal x82=(((IkReal)(0.348000000000000))*(cj2));
IkReal x83=((j6)*(r22));
IkReal x84=((cj0)*(py));
IkReal x85=((j6)*(x77));
IkReal x86=(((IkReal)(0.692000000000000))*(x77));
IkReal x87=(((IkReal)(1.00000000000000))*(x76));
IkReal x88=((pz)*(x76));
IkReal x89=(((IkReal)(1.00000000000000))*(x77));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x83)))+((((IkReal)(-1.00000000000000))*(x76)*(x82)))+(((x77)*(x80)))+(pz)+((((IkReal)(-0.346000000000000))*(x76))));
evalcond[1]=(((((IkReal)(-0.346000000000000))*(x77)))+((((IkReal)(-1.00000000000000))*(x77)*(x82)))+((((IkReal)(-1.00000000000000))*(x84)))+((((IkReal)(-1.00000000000000))*(j6)*(x78)))+(((j6)*(x81)))+(x79)+((((IkReal)(-1.00000000000000))*(x76)*(x80))));
evalcond[2]=((((j6)*(x76)*(x81)))+(((x76)*(x79)))+((((IkReal)(-1.00000000000000))*(j6)*(x78)*(x87)))+((((IkReal)(-1.00000000000000))*(pz)*(x89)))+((((IkReal)(-1.00000000000000))*(x80)))+((((IkReal)(-1.00000000000000))*(x84)*(x87)))+(((x77)*(x83))));
evalcond[3]=(((IkReal)(-0.346000000000000))+((((IkReal)(-1.00000000000000))*(x82)))+((((IkReal)(-1.00000000000000))*(x78)*(x85)))+((((IkReal)(-1.00000000000000))*(x84)*(x89)))+((((IkReal)(-1.00000000000000))*(x83)*(x87)))+(((x77)*(x79)))+(x88)+(((x81)*(x85))));
evalcond[4]=(((IkReal)(0.00138800000000000))+((((IkReal)(-0.692000000000000))*(x78)*(x85)))+((((IkReal)(0.692000000000000))*(x88)))+((((IkReal)(2.00000000000000))*(j6)*(npz)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.692000000000000))*(x76)*(x83)))+((((IkReal)(-1.00000000000000))*((j6)*(j6))))+((((IkReal)(-1.00000000000000))*(x84)*(x86)))+((((IkReal)(0.692000000000000))*(x81)*(x85)))+(((x79)*(x86))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x394=(j6)*(j6);
IkReal x395=(((IkReal)(250.000000000000))*(j6));
IkReal x396=((cj0)*(pz));
IkReal x397=((r22)*(sj0));
IkReal x398=((cj0)*(r22));
IkReal x399=((pz)*(sj0));
IkReal x400=(((IkReal)(250.000000000000))*(x394));
if( IKabs(((gconst1)*((((IkReal)(-29.9290000000000))+((((IkReal)(-500.000000000000))*(j6)*(pz)*(r22)))+((((IkReal)(-60.2040000000000))*(cj2)))+((((IkReal)(-30.2760000000000))*((cj2)*(cj2))))+(((x400)*((r22)*(r22))))+((((IkReal)(250.000000000000))*((pz)*(pz)))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*((((((IkReal)(-1.00000000000000))*(r12)*(x395)*(x396)))+((((IkReal)(-1.00000000000000))*(py)*(x395)*(x398)))+(((r12)*(x398)*(x400)))+((((IkReal)(-30.2760000000000))*(cj2)*(sj2)))+((((IkReal)(-30.1020000000000))*(sj2)))+((((IkReal)(250.000000000000))*(py)*(x396)))+((((IkReal)(-1.00000000000000))*(r02)*(x397)*(x400)))+(((r02)*(x395)*(x399)))+((((IkReal)(-250.000000000000))*(px)*(x399)))+(((px)*(x395)*(x397))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst1)*((((IkReal)(-29.9290000000000))+((((IkReal)(-500.000000000000))*(j6)*(pz)*(r22)))+((((IkReal)(-60.2040000000000))*(cj2)))+((((IkReal)(-30.2760000000000))*((cj2)*(cj2))))+(((x400)*((r22)*(r22))))+((((IkReal)(250.000000000000))*((pz)*(pz))))))), ((gconst1)*((((((IkReal)(-1.00000000000000))*(r12)*(x395)*(x396)))+((((IkReal)(-1.00000000000000))*(py)*(x395)*(x398)))+(((r12)*(x398)*(x400)))+((((IkReal)(-30.2760000000000))*(cj2)*(sj2)))+((((IkReal)(-30.1020000000000))*(sj2)))+((((IkReal)(250.000000000000))*(py)*(x396)))+((((IkReal)(-1.00000000000000))*(r02)*(x397)*(x400)))+(((r02)*(x395)*(x399)))+((((IkReal)(-250.000000000000))*(px)*(x399)))+(((px)*(x395)*(x397)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x401=IKcos(j1);
IkReal x402=IKsin(j1);
IkReal x403=((r02)*(sj0));
IkReal x404=((px)*(sj0));
IkReal x405=(((IkReal)(0.348000000000000))*(sj2));
IkReal x406=((cj0)*(r12));
IkReal x407=(((IkReal)(0.348000000000000))*(cj2));
IkReal x408=((j6)*(r22));
IkReal x409=((cj0)*(py));
IkReal x410=((j6)*(x402));
IkReal x411=(((IkReal)(0.692000000000000))*(x402));
IkReal x412=(((IkReal)(1.00000000000000))*(x401));
IkReal x413=((pz)*(x401));
IkReal x414=(((IkReal)(1.00000000000000))*(x402));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x401)*(x407)))+(pz)+(((x402)*(x405)))+((((IkReal)(-1.00000000000000))*(x408)))+((((IkReal)(-0.346000000000000))*(x401))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x401)*(x405)))+((((IkReal)(-1.00000000000000))*(x409)))+((((IkReal)(-1.00000000000000))*(x402)*(x407)))+(((j6)*(x406)))+(x404)+((((IkReal)(-0.346000000000000))*(x402)))+((((IkReal)(-1.00000000000000))*(j6)*(x403))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x405)))+(((x401)*(x404)))+((((IkReal)(-1.00000000000000))*(x409)*(x412)))+(((x402)*(x408)))+(((j6)*(x401)*(x406)))+((((IkReal)(-1.00000000000000))*(pz)*(x414)))+((((IkReal)(-1.00000000000000))*(j6)*(x403)*(x412))));
evalcond[3]=(((IkReal)(-0.346000000000000))+((((IkReal)(-1.00000000000000))*(x403)*(x410)))+(((x406)*(x410)))+((((IkReal)(-1.00000000000000))*(x407)))+(((x402)*(x404)))+((((IkReal)(-1.00000000000000))*(x409)*(x414)))+((((IkReal)(-1.00000000000000))*(x408)*(x412)))+(x413));
evalcond[4]=(((IkReal)(0.00138800000000000))+((((IkReal)(2.00000000000000))*(j6)*(npz)))+((((IkReal)(0.692000000000000))*(x413)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.692000000000000))*(x401)*(x408)))+((((IkReal)(-0.692000000000000))*(x403)*(x410)))+(((x404)*(x411)))+((((IkReal)(-1.00000000000000))*((j6)*(j6))))+((((IkReal)(0.692000000000000))*(x406)*(x410)))+((((IkReal)(-1.00000000000000))*(x409)*(x411))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x415=(((IkReal)(21750.0000000000))*(cj2));
IkReal x416=((px)*(sj0));
IkReal x417=((j6)*(r22));
IkReal x418=((cj0)*(py));
IkReal x419=(((IkReal)(21750.0000000000))*(sj2));
IkReal x420=((cj0)*(j6)*(r12));
IkReal x421=((j6)*(r02)*(sj0));
if( IKabs(((gconst0)*(((((x415)*(x421)))+((((IkReal)(-1.00000000000000))*(x415)*(x416)))+((((IkReal)(21625.0000000000))*(x421)))+((((IkReal)(21625.0000000000))*(x418)))+((((IkReal)(-21625.0000000000))*(x416)))+((((IkReal)(-1.00000000000000))*(x417)*(x419)))+((((IkReal)(-1.00000000000000))*(x415)*(x420)))+(((x415)*(x418)))+(((pz)*(x419)))+((((IkReal)(-21625.0000000000))*(x420))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((x415)*(x417)))+(((x419)*(x421)))+((((IkReal)(21625.0000000000))*(x417)))+((((IkReal)(-21625.0000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x416)*(x419)))+((((IkReal)(-1.00000000000000))*(pz)*(x415)))+(((x418)*(x419)))+((((IkReal)(-1.00000000000000))*(x419)*(x420))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst0)*(((((x415)*(x421)))+((((IkReal)(-1.00000000000000))*(x415)*(x416)))+((((IkReal)(21625.0000000000))*(x421)))+((((IkReal)(21625.0000000000))*(x418)))+((((IkReal)(-21625.0000000000))*(x416)))+((((IkReal)(-1.00000000000000))*(x417)*(x419)))+((((IkReal)(-1.00000000000000))*(x415)*(x420)))+(((x415)*(x418)))+(((pz)*(x419)))+((((IkReal)(-21625.0000000000))*(x420)))))), ((gconst0)*(((((x415)*(x417)))+(((x419)*(x421)))+((((IkReal)(21625.0000000000))*(x417)))+((((IkReal)(-21625.0000000000))*(pz)))+((((IkReal)(-1.00000000000000))*(x416)*(x419)))+((((IkReal)(-1.00000000000000))*(pz)*(x415)))+(((x418)*(x419)))+((((IkReal)(-1.00000000000000))*(x419)*(x420)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
int ij1;
for(ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
int iij1;
for(iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[5];
IkReal x422=IKcos(j1);
IkReal x423=IKsin(j1);
IkReal x424=((r02)*(sj0));
IkReal x425=((px)*(sj0));
IkReal x426=(((IkReal)(0.348000000000000))*(sj2));
IkReal x427=((cj0)*(r12));
IkReal x428=(((IkReal)(0.348000000000000))*(cj2));
IkReal x429=((j6)*(r22));
IkReal x430=((cj0)*(py));
IkReal x431=((j6)*(x423));
IkReal x432=(((IkReal)(0.692000000000000))*(x423));
IkReal x433=(((IkReal)(1.00000000000000))*(x422));
IkReal x434=((pz)*(x422));
IkReal x435=(((IkReal)(1.00000000000000))*(x423));
evalcond[0]=(((((IkReal)(-1.00000000000000))*(x422)*(x428)))+(((x423)*(x426)))+((((IkReal)(-1.00000000000000))*(x429)))+(pz)+((((IkReal)(-0.346000000000000))*(x422))));
evalcond[1]=(((((IkReal)(-1.00000000000000))*(x430)))+((((IkReal)(-1.00000000000000))*(x422)*(x426)))+((((IkReal)(-1.00000000000000))*(x423)*(x428)))+(x425)+((((IkReal)(-0.346000000000000))*(x423)))+((((IkReal)(-1.00000000000000))*(j6)*(x424)))+(((j6)*(x427))));
evalcond[2]=(((((IkReal)(-1.00000000000000))*(x426)))+(((j6)*(x422)*(x427)))+(((x423)*(x429)))+((((IkReal)(-1.00000000000000))*(pz)*(x435)))+((((IkReal)(-1.00000000000000))*(x430)*(x433)))+((((IkReal)(-1.00000000000000))*(j6)*(x424)*(x433)))+(((x422)*(x425))));
evalcond[3]=(((IkReal)(-0.346000000000000))+(((x427)*(x431)))+(x434)+((((IkReal)(-1.00000000000000))*(x428)))+((((IkReal)(-1.00000000000000))*(x424)*(x431)))+(((x423)*(x425)))+((((IkReal)(-1.00000000000000))*(x429)*(x433)))+((((IkReal)(-1.00000000000000))*(x430)*(x435))));
evalcond[4]=(((IkReal)(0.00138800000000000))+((((IkReal)(2.00000000000000))*(j6)*(npz)))+((((IkReal)(-0.692000000000000))*(x424)*(x431)))+((((IkReal)(-1.00000000000000))*(pp)))+((((IkReal)(-0.692000000000000))*(x422)*(x429)))+((((IkReal)(0.692000000000000))*(x434)))+((((IkReal)(0.692000000000000))*(x427)*(x431)))+((((IkReal)(-1.00000000000000))*(x430)*(x432)))+((((IkReal)(-1.00000000000000))*((j6)*(j6))))+(((x425)*(x432))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}
}
}
}
}
}
return IkSolutionList_GetNumSolutions(solutions)>0;
}


IKFAST_API const char* GetKinematicsHash() { return "d0943dbc06f3eb79d5a64f943b034b98"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }


#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList solutions;
    IkSolutionList_Init( &solutions );
    IkReal vfree[IKFAST_NUM_FREE_VARS];
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    size_t i = 0;
    for(i = 0; i < countof(vfree); ++i)
        vfree[i] = atof(argv[13+i]);
    int bSuccess = ComputeIk(eetrans, eerot, countof(vfree) > 0 ? vfree : NULL, &solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)IkSolutionList_GetNumSolutions(&solutions));
    IkReal solvalues[IKFAST_NUM_JOINTS];
    for(i = 0; i < IkSolutionList_GetNumSolutions(&solutions); ++i) 
    {
        int sol_count;
        int free_count;
        IkSolution * sol = IkSolutionList_GetSolution(&solutions, i);
        IkSolution_GetSolution(sol, solvalues, &sol_count, vfree);
        const int *vsolfree = IkSolution_GetFree( sol, &free_count );
        printf("sol%d (free=%d): ", i, free_count);
        size_t j = 0;
        for( j = 0; j < sol_count; ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
